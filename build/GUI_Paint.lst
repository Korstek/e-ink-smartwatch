ARM GAS  /tmp/ccLicZTP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"GUI_Paint.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Paint_NewImage,"ax",%progbits
  18              		.align	1
  19              		.global	Paint_NewImage
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Paint_NewImage:
  26              	.LFB123:
  27              		.file 1 "Display/GUI/GUI_Paint.c"
   1:Display/GUI/GUI_Paint.c **** /*****************************************************************************
   2:Display/GUI/GUI_Paint.c **** * | File      	:   GUI_Paint.c
   3:Display/GUI/GUI_Paint.c **** * | Author      :   Waveshare team
   4:Display/GUI/GUI_Paint.c **** * | Function    :	Achieve drawing: draw points, lines, boxes, circles and
   5:Display/GUI/GUI_Paint.c **** *                   their size, solid dotted line, solid rectangle hollow
   6:Display/GUI/GUI_Paint.c **** *                   rectangle, solid circle hollow circle.
   7:Display/GUI/GUI_Paint.c **** * | Info        :
   8:Display/GUI/GUI_Paint.c **** *   Achieve display characters: Display a single character, string, number
   9:Display/GUI/GUI_Paint.c **** *   Achieve time display: adaptive size display time minutes and seconds
  10:Display/GUI/GUI_Paint.c **** *----------------
  11:Display/GUI/GUI_Paint.c **** * |	This version:   V2.0
  12:Display/GUI/GUI_Paint.c **** * | Date        :   2018-11-15
  13:Display/GUI/GUI_Paint.c **** * | Info        :
  14:Display/GUI/GUI_Paint.c **** * 1.add: Paint_NewImage()
  15:Display/GUI/GUI_Paint.c **** *    Create an image's properties
  16:Display/GUI/GUI_Paint.c **** * 2.add: Paint_SelectImage()
  17:Display/GUI/GUI_Paint.c **** *    Select the picture to be drawn
  18:Display/GUI/GUI_Paint.c **** * 3.add: Paint_SetRotate()
  19:Display/GUI/GUI_Paint.c **** *    Set the direction of the cache
  20:Display/GUI/GUI_Paint.c **** * 4.add: Paint_RotateImage()
  21:Display/GUI/GUI_Paint.c **** *    Can flip the picture, Support 0-360 degrees,
  22:Display/GUI/GUI_Paint.c **** *    but only 90.180.270 rotation is better
  23:Display/GUI/GUI_Paint.c **** * 4.add: Paint_SetMirroring()
  24:Display/GUI/GUI_Paint.c **** *    Can Mirroring the picture, horizontal, vertical, origin
  25:Display/GUI/GUI_Paint.c **** * 5.add: Paint_DrawString_CN()
  26:Display/GUI/GUI_Paint.c **** *    Can display Chinese(GB1312)
  27:Display/GUI/GUI_Paint.c **** *
  28:Display/GUI/GUI_Paint.c **** * Permission is hereby granted, free of charge, to any person obtaining a copy
  29:Display/GUI/GUI_Paint.c **** * of this software and associated documnetation files (the "Software"), to deal
  30:Display/GUI/GUI_Paint.c **** * in the Software without restriction, including without limitation the rights
  31:Display/GUI/GUI_Paint.c **** * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /tmp/ccLicZTP.s 			page 2


  32:Display/GUI/GUI_Paint.c **** * copies of the Software, and to permit persons to  whom the Software is
  33:Display/GUI/GUI_Paint.c **** * furished to do so, subject to the following conditions:
  34:Display/GUI/GUI_Paint.c **** *
  35:Display/GUI/GUI_Paint.c **** * The above copyright notice and this permission notice shall be included in
  36:Display/GUI/GUI_Paint.c **** * all copies or substantial portions of the Software.
  37:Display/GUI/GUI_Paint.c **** *
  38:Display/GUI/GUI_Paint.c **** * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  39:Display/GUI/GUI_Paint.c **** * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  40:Display/GUI/GUI_Paint.c **** * FITNESS OR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  41:Display/GUI/GUI_Paint.c **** * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  42:Display/GUI/GUI_Paint.c **** * LIABILITY WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  43:Display/GUI/GUI_Paint.c **** * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  44:Display/GUI/GUI_Paint.c **** * THE SOFTWARE.
  45:Display/GUI/GUI_Paint.c **** *
  46:Display/GUI/GUI_Paint.c **** ******************************************************************************/
  47:Display/GUI/GUI_Paint.c **** #include "GUI_Paint.h"
  48:Display/GUI/GUI_Paint.c **** #include "DEV_Config.h"
  49:Display/GUI/GUI_Paint.c **** #include "Debug.h"
  50:Display/GUI/GUI_Paint.c **** #include <stdint.h>
  51:Display/GUI/GUI_Paint.c **** #include <stdlib.h>
  52:Display/GUI/GUI_Paint.c **** #include <string.h> //memset()
  53:Display/GUI/GUI_Paint.c **** #include <math.h>
  54:Display/GUI/GUI_Paint.c **** 
  55:Display/GUI/GUI_Paint.c **** PAINT Paint;
  56:Display/GUI/GUI_Paint.c **** /******************************************************************************
  57:Display/GUI/GUI_Paint.c **** function:	Create Image
  58:Display/GUI/GUI_Paint.c **** parameter:
  59:Display/GUI/GUI_Paint.c ****     image   :   Pointer to the image cache
  60:Display/GUI/GUI_Paint.c ****     width   :   The width of the picture
  61:Display/GUI/GUI_Paint.c ****     Height  :   The height of the picture
  62:Display/GUI/GUI_Paint.c ****     Color   :   Whether the picture is inverted
  63:Display/GUI/GUI_Paint.c **** ******************************************************************************/
  64:Display/GUI/GUI_Paint.c **** void Paint_NewImage(UBYTE *image, UWORD Width, UWORD Height, UWORD Rotate, UWORD Color)
  65:Display/GUI/GUI_Paint.c **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
  66:Display/GUI/GUI_Paint.c ****     Paint.Image = NULL;
  67:Display/GUI/GUI_Paint.c ****     Paint.Image = image;
  38              		.loc 1 67 0
  39 0002 104C     		ldr	r4, .L8
  40 0004 2060     		str	r0, [r4]
  68:Display/GUI/GUI_Paint.c **** 
  69:Display/GUI/GUI_Paint.c ****     Paint.WidthMemory = Width;
  41              		.loc 1 69 0
  42 0006 2181     		strh	r1, [r4, #8]	@ movhi
  70:Display/GUI/GUI_Paint.c ****     Paint.HeightMemory = Height;
  43              		.loc 1 70 0
  44 0008 6281     		strh	r2, [r4, #10]	@ movhi
  71:Display/GUI/GUI_Paint.c ****     Paint.Color = Color;
ARM GAS  /tmp/ccLicZTP.s 			page 3


  45              		.loc 1 71 0
  46 000a BDF80400 		ldrh	r0, [sp, #4]
  47              	.LVL1:
  48 000e A081     		strh	r0, [r4, #12]	@ movhi
  72:Display/GUI/GUI_Paint.c ****     Paint.WidthByte = (Width % 8 == 0)? (Width / 8 ): (Width / 8 + 1);
  49              		.loc 1 72 0
  50 0010 11F0070F 		tst	r1, #7
  51 0014 0DD1     		bne	.L2
  52              		.loc 1 72 0 is_stmt 0 discriminator 1
  53 0016 CC08     		lsrs	r4, r1, #3
  54              	.L3:
  55              		.loc 1 72 0 discriminator 4
  56 0018 0A48     		ldr	r0, .L8
  57 001a 4482     		strh	r4, [r0, #18]	@ movhi
  73:Display/GUI/GUI_Paint.c ****     Paint.HeightByte = Height;
  58              		.loc 1 73 0 is_stmt 1 discriminator 4
  59 001c 8282     		strh	r2, [r0, #20]	@ movhi
  74:Display/GUI/GUI_Paint.c **** 
  75:Display/GUI/GUI_Paint.c ****     Paint.Rotate = Rotate;
  60              		.loc 1 75 0 discriminator 4
  61 001e C381     		strh	r3, [r0, #14]	@ movhi
  76:Display/GUI/GUI_Paint.c ****     Paint.Mirror = MIRROR_NONE;
  62              		.loc 1 76 0 discriminator 4
  63 0020 0024     		movs	r4, #0
  64 0022 0482     		strh	r4, [r0, #16]	@ movhi
  77:Display/GUI/GUI_Paint.c **** 
  78:Display/GUI/GUI_Paint.c ****     if(Rotate == ROTATE_0 || Rotate == ROTATE_180) {
  65              		.loc 1 78 0 discriminator 4
  66 0024 43B1     		cbz	r3, .L4
  67              		.loc 1 78 0 is_stmt 0 discriminator 1
  68 0026 B42B     		cmp	r3, #180
  69 0028 06D0     		beq	.L4
  79:Display/GUI/GUI_Paint.c ****         Paint.Width = Width;
  80:Display/GUI/GUI_Paint.c ****         Paint.Height = Height;
  81:Display/GUI/GUI_Paint.c ****     } else {
  82:Display/GUI/GUI_Paint.c ****         Paint.Width = Height;
  70              		.loc 1 82 0 is_stmt 1
  71 002a 064B     		ldr	r3, .L8
  72              	.LVL2:
  73 002c 9A80     		strh	r2, [r3, #4]	@ movhi
  83:Display/GUI/GUI_Paint.c ****         Paint.Height = Width;
  74              		.loc 1 83 0
  75 002e D980     		strh	r1, [r3, #6]	@ movhi
  84:Display/GUI/GUI_Paint.c ****     }
  85:Display/GUI/GUI_Paint.c **** }
  76              		.loc 1 85 0
  77 0030 05E0     		b	.L1
  78              	.LVL3:
  79              	.L2:
  72:Display/GUI/GUI_Paint.c ****     Paint.HeightByte = Height;
  80              		.loc 1 72 0 discriminator 2
  81 0032 CC08     		lsrs	r4, r1, #3
  82 0034 0134     		adds	r4, r4, #1
  83 0036 EFE7     		b	.L3
  84              	.L4:
  79:Display/GUI/GUI_Paint.c ****         Paint.Height = Height;
  85              		.loc 1 79 0
ARM GAS  /tmp/ccLicZTP.s 			page 4


  86 0038 024B     		ldr	r3, .L8
  87              	.LVL4:
  88 003a 9980     		strh	r1, [r3, #4]	@ movhi
  80:Display/GUI/GUI_Paint.c ****     } else {
  89              		.loc 1 80 0
  90 003c DA80     		strh	r2, [r3, #6]	@ movhi
  91              	.L1:
  92              		.loc 1 85 0
  93 003e 5DF8044B 		ldr	r4, [sp], #4
  94              	.LCFI1:
  95              		.cfi_restore 4
  96              		.cfi_def_cfa_offset 0
  97              	.LVL5:
  98 0042 7047     		bx	lr
  99              	.L9:
 100              		.align	2
 101              	.L8:
 102 0044 00000000 		.word	Paint
 103              		.cfi_endproc
 104              	.LFE123:
 106              		.section	.text.Paint_SelectImage,"ax",%progbits
 107              		.align	1
 108              		.global	Paint_SelectImage
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	Paint_SelectImage:
 115              	.LFB124:
  86:Display/GUI/GUI_Paint.c **** 
  87:Display/GUI/GUI_Paint.c **** /******************************************************************************
  88:Display/GUI/GUI_Paint.c **** function:	Select Image
  89:Display/GUI/GUI_Paint.c **** parameter:
  90:Display/GUI/GUI_Paint.c ****     image   :   Pointer to the image cache
  91:Display/GUI/GUI_Paint.c **** ******************************************************************************/
  92:Display/GUI/GUI_Paint.c **** void Paint_SelectImage(UBYTE *image)
  93:Display/GUI/GUI_Paint.c **** {
 116              		.loc 1 93 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL6:
  94:Display/GUI/GUI_Paint.c ****     Paint.Image = image;
 122              		.loc 1 94 0
 123 0000 014B     		ldr	r3, .L11
 124 0002 1860     		str	r0, [r3]
  95:Display/GUI/GUI_Paint.c **** }
 125              		.loc 1 95 0
 126 0004 7047     		bx	lr
 127              	.L12:
 128 0006 00BF     		.align	2
 129              	.L11:
 130 0008 00000000 		.word	Paint
 131              		.cfi_endproc
 132              	.LFE124:
 134              		.section	.text.Paint_SetRotate,"ax",%progbits
ARM GAS  /tmp/ccLicZTP.s 			page 5


 135              		.align	1
 136              		.global	Paint_SetRotate
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	Paint_SetRotate:
 143              	.LFB125:
  96:Display/GUI/GUI_Paint.c **** 
  97:Display/GUI/GUI_Paint.c **** /******************************************************************************
  98:Display/GUI/GUI_Paint.c **** function:	Select Image Rotate
  99:Display/GUI/GUI_Paint.c **** parameter:
 100:Display/GUI/GUI_Paint.c ****     Rotate   :   0,90,180,270
 101:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 102:Display/GUI/GUI_Paint.c **** void Paint_SetRotate(UWORD Rotate)
 103:Display/GUI/GUI_Paint.c **** {
 144              		.loc 1 103 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149              	.LVL7:
 104:Display/GUI/GUI_Paint.c ****     if(Rotate == ROTATE_0 || Rotate == ROTATE_90 || Rotate == ROTATE_180 || Rotate == ROTATE_270) {
 150              		.loc 1 104 0
 151 0000 0346     		mov	r3, r0
 152 0002 30B1     		cbz	r0, .L14
 153              		.loc 1 104 0 is_stmt 0 discriminator 1
 154 0004 5A28     		cmp	r0, #90
 155 0006 04D0     		beq	.L14
 156              		.loc 1 104 0 discriminator 2
 157 0008 B428     		cmp	r0, #180
 158 000a 02D0     		beq	.L14
 159              		.loc 1 104 0 discriminator 3
 160 000c B0F5877F 		cmp	r0, #270
 161 0010 01D1     		bne	.L13
 162              	.L14:
 105:Display/GUI/GUI_Paint.c ****         Debug("Set image Rotate %d\r\n", Rotate);
 106:Display/GUI/GUI_Paint.c ****         Paint.Rotate = Rotate;
 163              		.loc 1 106 0 is_stmt 1
 164 0012 014A     		ldr	r2, .L16
 165 0014 D381     		strh	r3, [r2, #14]	@ movhi
 166              	.L13:
 107:Display/GUI/GUI_Paint.c ****     } else {
 108:Display/GUI/GUI_Paint.c ****         Debug("rotate = 0, 90, 180, 270\r\n");
 109:Display/GUI/GUI_Paint.c ****     }
 110:Display/GUI/GUI_Paint.c **** }
 167              		.loc 1 110 0
 168 0016 7047     		bx	lr
 169              	.L17:
 170              		.align	2
 171              	.L16:
 172 0018 00000000 		.word	Paint
 173              		.cfi_endproc
 174              	.LFE125:
 176              		.section	.text.Paint_SetMirroring,"ax",%progbits
 177              		.align	1
 178              		.global	Paint_SetMirroring
ARM GAS  /tmp/ccLicZTP.s 			page 6


 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	Paint_SetMirroring:
 185              	.LFB126:
 111:Display/GUI/GUI_Paint.c **** 
 112:Display/GUI/GUI_Paint.c **** /******************************************************************************
 113:Display/GUI/GUI_Paint.c **** function:	Select Image mirror
 114:Display/GUI/GUI_Paint.c **** parameter:
 115:Display/GUI/GUI_Paint.c ****     mirror   :       Not mirror,Horizontal mirror,Vertical mirror,Origin mirror
 116:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 117:Display/GUI/GUI_Paint.c **** void Paint_SetMirroring(UBYTE mirror)
 118:Display/GUI/GUI_Paint.c **** {
 186              		.loc 1 118 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL8:
 119:Display/GUI/GUI_Paint.c ****     if(mirror == MIRROR_NONE || mirror == MIRROR_HORIZONTAL ||
 192              		.loc 1 119 0
 193 0000 0328     		cmp	r0, #3
 194 0002 01D8     		bhi	.L18
 120:Display/GUI/GUI_Paint.c ****         mirror == MIRROR_VERTICAL || mirror == MIRROR_ORIGIN) {
 121:Display/GUI/GUI_Paint.c ****         Debug("mirror image x:%s, y:%s\r\n",(mirror & 0x01)? "mirror":"none", ((mirror >> 1) & 0x01
 122:Display/GUI/GUI_Paint.c ****         Paint.Mirror = mirror;
 195              		.loc 1 122 0
 196 0004 014B     		ldr	r3, .L20
 197 0006 1882     		strh	r0, [r3, #16]	@ movhi
 198              	.L18:
 123:Display/GUI/GUI_Paint.c ****     } else {
 124:Display/GUI/GUI_Paint.c ****         Debug("mirror should be MIRROR_NONE, MIRROR_HORIZONTAL, \
 125:Display/GUI/GUI_Paint.c ****         MIRROR_VERTICAL or MIRROR_ORIGIN\r\n");
 126:Display/GUI/GUI_Paint.c ****     }
 127:Display/GUI/GUI_Paint.c **** }
 199              		.loc 1 127 0
 200 0008 7047     		bx	lr
 201              	.L21:
 202 000a 00BF     		.align	2
 203              	.L20:
 204 000c 00000000 		.word	Paint
 205              		.cfi_endproc
 206              	.LFE126:
 208              		.section	.text.Paint_SetPixel,"ax",%progbits
 209              		.align	1
 210              		.global	Paint_SetPixel
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	Paint_SetPixel:
 217              	.LFB127:
 128:Display/GUI/GUI_Paint.c **** 
 129:Display/GUI/GUI_Paint.c **** /******************************************************************************
 130:Display/GUI/GUI_Paint.c **** function:	Draw Pixels
 131:Display/GUI/GUI_Paint.c **** parameter:
ARM GAS  /tmp/ccLicZTP.s 			page 7


 132:Display/GUI/GUI_Paint.c ****     Xpoint  :   At point X
 133:Display/GUI/GUI_Paint.c ****     Ypoint  :   At point Y
 134:Display/GUI/GUI_Paint.c ****     Color   :   Painted colors
 135:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 136:Display/GUI/GUI_Paint.c **** void Paint_SetPixel(UWORD Xpoint, UWORD Ypoint, UWORD Color)
 137:Display/GUI/GUI_Paint.c **** {
 218              		.loc 1 137 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL9:
 138:Display/GUI/GUI_Paint.c ****     if(Xpoint > Paint.Width || Ypoint > Paint.Height){
 224              		.loc 1 138 0
 225 0000 3A4B     		ldr	r3, .L41
 226 0002 9B88     		ldrh	r3, [r3, #4]
 227 0004 8342     		cmp	r3, r0
 228 0006 6FD3     		bcc	.L36
 229              		.loc 1 138 0 is_stmt 0 discriminator 1
 230 0008 384B     		ldr	r3, .L41
 231 000a DB88     		ldrh	r3, [r3, #6]
 232 000c 8B42     		cmp	r3, r1
 233 000e 6BD3     		bcc	.L36
 137:Display/GUI/GUI_Paint.c ****     if(Xpoint > Paint.Width || Ypoint > Paint.Height){
 234              		.loc 1 137 0 is_stmt 1
 235 0010 30B4     		push	{r4, r5}
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 5, -4
 139:Display/GUI/GUI_Paint.c ****         Debug("Exceeding display boundaries\r\n");
 140:Display/GUI/GUI_Paint.c ****         return;
 141:Display/GUI/GUI_Paint.c ****     }
 142:Display/GUI/GUI_Paint.c ****     UWORD X, Y;
 143:Display/GUI/GUI_Paint.c **** 
 144:Display/GUI/GUI_Paint.c ****     switch(Paint.Rotate) {
 240              		.loc 1 144 0
 241 0012 364B     		ldr	r3, .L41
 242 0014 DB89     		ldrh	r3, [r3, #14]
 243 0016 5A2B     		cmp	r3, #90
 244 0018 17D0     		beq	.L24
 245 001a 0CD9     		bls	.L39
 246 001c B42B     		cmp	r3, #180
 247 001e 1CD0     		beq	.L27
 248 0020 B3F5877F 		cmp	r3, #270
 249 0024 43D1     		bne	.L22
 250              	.LVL10:
 145:Display/GUI/GUI_Paint.c ****     case 0:
 146:Display/GUI/GUI_Paint.c ****         X = Xpoint;
 147:Display/GUI/GUI_Paint.c ****         Y = Ypoint;
 148:Display/GUI/GUI_Paint.c ****         break;
 149:Display/GUI/GUI_Paint.c ****     case 90:
 150:Display/GUI/GUI_Paint.c ****         X = Paint.WidthMemory - Ypoint - 1;
 151:Display/GUI/GUI_Paint.c ****         Y = Xpoint;
 152:Display/GUI/GUI_Paint.c ****         break;
 153:Display/GUI/GUI_Paint.c ****     case 180:
 154:Display/GUI/GUI_Paint.c ****         X = Paint.WidthMemory - Xpoint - 1;
ARM GAS  /tmp/ccLicZTP.s 			page 8


 155:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 156:Display/GUI/GUI_Paint.c ****         break;
 157:Display/GUI/GUI_Paint.c ****     case 270:
 158:Display/GUI/GUI_Paint.c ****         X = Ypoint;
 159:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Xpoint - 1;
 251              		.loc 1 159 0
 252 0026 314B     		ldr	r3, .L41
 253 0028 5B89     		ldrh	r3, [r3, #10]
 254 002a 1B1A     		subs	r3, r3, r0
 255 002c 9BB2     		uxth	r3, r3
 256 002e 013B     		subs	r3, r3, #1
 257              	.LVL11:
 158:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Xpoint - 1;
 258              		.loc 1 158 0
 259 0030 0846     		mov	r0, r1
 260              	.LVL12:
 261              		.loc 1 159 0
 262 0032 99B2     		uxth	r1, r3
 263              	.LVL13:
 160:Display/GUI/GUI_Paint.c ****         break;
 264              		.loc 1 160 0
 265 0034 01E0     		b	.L26
 266              	.LVL14:
 267              	.L39:
 144:Display/GUI/GUI_Paint.c ****     case 0:
 268              		.loc 1 144 0
 269 0036 002B     		cmp	r3, #0
 270 0038 39D1     		bne	.L22
 271              	.LVL15:
 272              	.L26:
 161:Display/GUI/GUI_Paint.c **** 
 162:Display/GUI/GUI_Paint.c ****     default:
 163:Display/GUI/GUI_Paint.c ****         return;
 164:Display/GUI/GUI_Paint.c ****     }
 165:Display/GUI/GUI_Paint.c **** 
 166:Display/GUI/GUI_Paint.c ****     switch(Paint.Mirror) {
 273              		.loc 1 166 0
 274 003a 2C4B     		ldr	r3, .L41
 275 003c 1B8A     		ldrh	r3, [r3, #16]
 276 003e 032B     		cmp	r3, #3
 277 0040 35D8     		bhi	.L22
 278 0042 DFE803F0 		tbb	[pc, r3]
 279              	.L30:
 280 0046 1C       		.byte	(.L29-.L30)/2
 281 0047 16       		.byte	(.L31-.L30)/2
 282 0048 36       		.byte	(.L32-.L30)/2
 283 0049 3D       		.byte	(.L33-.L30)/2
 284              	.LVL16:
 285              		.p2align 1
 286              	.L24:
 150:Display/GUI/GUI_Paint.c ****         Y = Xpoint;
 287              		.loc 1 150 0
 288 004a 284B     		ldr	r3, .L41
 289 004c 1B89     		ldrh	r3, [r3, #8]
 290 004e 5B1A     		subs	r3, r3, r1
 291 0050 9BB2     		uxth	r3, r3
 292 0052 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccLicZTP.s 			page 9


 293              	.LVL17:
 151:Display/GUI/GUI_Paint.c ****         break;
 294              		.loc 1 151 0
 295 0054 0146     		mov	r1, r0
 296              	.LVL18:
 150:Display/GUI/GUI_Paint.c ****         Y = Xpoint;
 297              		.loc 1 150 0
 298 0056 98B2     		uxth	r0, r3
 299              	.LVL19:
 152:Display/GUI/GUI_Paint.c ****     case 180:
 300              		.loc 1 152 0
 301 0058 EFE7     		b	.L26
 302              	.LVL20:
 303              	.L27:
 154:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Ypoint - 1;
 304              		.loc 1 154 0
 305 005a 244C     		ldr	r4, .L41
 306 005c 2389     		ldrh	r3, [r4, #8]
 307 005e 181A     		subs	r0, r3, r0
 308              	.LVL21:
 309 0060 80B2     		uxth	r0, r0
 310 0062 0138     		subs	r0, r0, #1
 311 0064 80B2     		uxth	r0, r0
 312              	.LVL22:
 155:Display/GUI/GUI_Paint.c ****         break;
 313              		.loc 1 155 0
 314 0066 6389     		ldrh	r3, [r4, #10]
 315 0068 591A     		subs	r1, r3, r1
 316              	.LVL23:
 317 006a 89B2     		uxth	r1, r1
 318 006c 0139     		subs	r1, r1, #1
 319 006e 89B2     		uxth	r1, r1
 320              	.LVL24:
 156:Display/GUI/GUI_Paint.c ****     case 270:
 321              		.loc 1 156 0
 322 0070 E3E7     		b	.L26
 323              	.L31:
 167:Display/GUI/GUI_Paint.c ****     case MIRROR_NONE:
 168:Display/GUI/GUI_Paint.c ****         break;
 169:Display/GUI/GUI_Paint.c ****     case MIRROR_HORIZONTAL:
 170:Display/GUI/GUI_Paint.c ****         X = Paint.WidthMemory - X - 1;
 324              		.loc 1 170 0
 325 0072 1E4B     		ldr	r3, .L41
 326 0074 1B89     		ldrh	r3, [r3, #8]
 327 0076 181A     		subs	r0, r3, r0
 328              	.LVL25:
 329 0078 80B2     		uxth	r0, r0
 330 007a 0138     		subs	r0, r0, #1
 331 007c 80B2     		uxth	r0, r0
 332              	.LVL26:
 333              	.L29:
 171:Display/GUI/GUI_Paint.c ****         break;
 172:Display/GUI/GUI_Paint.c ****     case MIRROR_VERTICAL:
 173:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Y - 1;
 174:Display/GUI/GUI_Paint.c ****         break;
 175:Display/GUI/GUI_Paint.c ****     case MIRROR_ORIGIN:
 176:Display/GUI/GUI_Paint.c ****         X = Paint.WidthMemory - X - 1;
ARM GAS  /tmp/ccLicZTP.s 			page 10


 177:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Y - 1;
 178:Display/GUI/GUI_Paint.c ****         break;
 179:Display/GUI/GUI_Paint.c ****     default:
 180:Display/GUI/GUI_Paint.c ****         return;
 181:Display/GUI/GUI_Paint.c ****     }
 182:Display/GUI/GUI_Paint.c **** 
 183:Display/GUI/GUI_Paint.c ****     if(X > Paint.WidthMemory || Y > Paint.HeightMemory){
 334              		.loc 1 183 0
 335 007e 1B4B     		ldr	r3, .L41
 336 0080 1B89     		ldrh	r3, [r3, #8]
 337 0082 8342     		cmp	r3, r0
 338 0084 13D3     		bcc	.L22
 339              		.loc 1 183 0 is_stmt 0 discriminator 1
 340 0086 194B     		ldr	r3, .L41
 341 0088 5B89     		ldrh	r3, [r3, #10]
 342 008a 8B42     		cmp	r3, r1
 343 008c 0FD3     		bcc	.L22
 184:Display/GUI/GUI_Paint.c ****         Debug("Exceeding display boundaries\r\n");
 185:Display/GUI/GUI_Paint.c ****         return;
 186:Display/GUI/GUI_Paint.c ****     }
 187:Display/GUI/GUI_Paint.c **** 
 188:Display/GUI/GUI_Paint.c ****     UDOUBLE Addr = X / 8 + Y * Paint.WidthByte;
 344              		.loc 1 188 0 is_stmt 1
 345 008e C0F3CF03 		ubfx	r3, r0, #3, #16
 346 0092 164C     		ldr	r4, .L41
 347 0094 658A     		ldrh	r5, [r4, #18]
 348 0096 05FB0131 		mla	r1, r5, r1, r3
 349              	.LVL27:
 189:Display/GUI/GUI_Paint.c ****     UBYTE Rdata = Paint.Image[Addr];
 350              		.loc 1 189 0
 351 009a 2468     		ldr	r4, [r4]
 352 009c 655C     		ldrb	r5, [r4, r1]	@ zero_extendqisi2
 353              	.LVL28:
 190:Display/GUI/GUI_Paint.c ****     if(Color == BLACK)
 354              		.loc 1 190 0
 355 009e DAB1     		cbz	r2, .L40
 191:Display/GUI/GUI_Paint.c ****         Paint.Image[Addr] = Rdata & ~(0x80 >> (X % 8));
 192:Display/GUI/GUI_Paint.c ****     else
 193:Display/GUI/GUI_Paint.c ****         Paint.Image[Addr] = Rdata | (0x80 >> (X % 8));
 356              		.loc 1 193 0
 357 00a0 00F00700 		and	r0, r0, #7
 358              	.LVL29:
 359 00a4 8023     		movs	r3, #128
 360 00a6 43FA00F0 		asr	r0, r3, r0
 361 00aa 2843     		orrs	r0, r0, r5
 362 00ac 6054     		strb	r0, [r4, r1]
 363              	.LVL30:
 364              	.L22:
 194:Display/GUI/GUI_Paint.c **** }
 365              		.loc 1 194 0
 366 00ae 30BC     		pop	{r4, r5}
 367              	.LCFI3:
 368              		.cfi_remember_state
 369              		.cfi_restore 5
 370              		.cfi_restore 4
 371              		.cfi_def_cfa_offset 0
 372 00b0 7047     		bx	lr
ARM GAS  /tmp/ccLicZTP.s 			page 11


 373              	.LVL31:
 374              	.L32:
 375              	.LCFI4:
 376              		.cfi_restore_state
 173:Display/GUI/GUI_Paint.c ****         break;
 377              		.loc 1 173 0
 378 00b2 0E4B     		ldr	r3, .L41
 379 00b4 5B89     		ldrh	r3, [r3, #10]
 380 00b6 591A     		subs	r1, r3, r1
 381              	.LVL32:
 382 00b8 89B2     		uxth	r1, r1
 383 00ba 0139     		subs	r1, r1, #1
 384 00bc 89B2     		uxth	r1, r1
 385              	.LVL33:
 174:Display/GUI/GUI_Paint.c ****     case MIRROR_ORIGIN:
 386              		.loc 1 174 0
 387 00be DEE7     		b	.L29
 388              	.L33:
 176:Display/GUI/GUI_Paint.c ****         Y = Paint.HeightMemory - Y - 1;
 389              		.loc 1 176 0
 390 00c0 0A4C     		ldr	r4, .L41
 391 00c2 2389     		ldrh	r3, [r4, #8]
 392 00c4 181A     		subs	r0, r3, r0
 393              	.LVL34:
 394 00c6 80B2     		uxth	r0, r0
 395 00c8 0138     		subs	r0, r0, #1
 396 00ca 80B2     		uxth	r0, r0
 397              	.LVL35:
 177:Display/GUI/GUI_Paint.c ****         break;
 398              		.loc 1 177 0
 399 00cc 6389     		ldrh	r3, [r4, #10]
 400 00ce 591A     		subs	r1, r3, r1
 401              	.LVL36:
 402 00d0 89B2     		uxth	r1, r1
 403 00d2 0139     		subs	r1, r1, #1
 404 00d4 89B2     		uxth	r1, r1
 405              	.LVL37:
 178:Display/GUI/GUI_Paint.c ****     default:
 406              		.loc 1 178 0
 407 00d6 D2E7     		b	.L29
 408              	.LVL38:
 409              	.L40:
 191:Display/GUI/GUI_Paint.c ****     else
 410              		.loc 1 191 0
 411 00d8 00F00703 		and	r3, r0, #7
 412 00dc 8020     		movs	r0, #128
 413              	.LVL39:
 414 00de 1841     		asrs	r0, r0, r3
 415 00e0 25EA0000 		bic	r0, r5, r0
 416 00e4 6054     		strb	r0, [r4, r1]
 417 00e6 E2E7     		b	.L22
 418              	.LVL40:
 419              	.L36:
 420              	.LCFI5:
 421              		.cfi_def_cfa_offset 0
 422              		.cfi_restore 4
 423              		.cfi_restore 5
ARM GAS  /tmp/ccLicZTP.s 			page 12


 424 00e8 7047     		bx	lr
 425              	.L42:
 426 00ea 00BF     		.align	2
 427              	.L41:
 428 00ec 00000000 		.word	Paint
 429              		.cfi_endproc
 430              	.LFE127:
 432              		.section	.text.Paint_Clear,"ax",%progbits
 433              		.align	1
 434              		.global	Paint_Clear
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv4-sp-d16
 440              	Paint_Clear:
 441              	.LFB128:
 195:Display/GUI/GUI_Paint.c **** 
 196:Display/GUI/GUI_Paint.c **** /******************************************************************************
 197:Display/GUI/GUI_Paint.c **** function:	Clear the color of the picture
 198:Display/GUI/GUI_Paint.c **** parameter:
 199:Display/GUI/GUI_Paint.c ****     Color   :   Painted colors
 200:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 201:Display/GUI/GUI_Paint.c **** void Paint_Clear(UWORD Color)
 202:Display/GUI/GUI_Paint.c **** {
 442              		.loc 1 202 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL41:
 448 0000 10B4     		push	{r4}
 449              	.LCFI6:
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 4, -4
 452              	.LVL42:
 453              	.LBB2:
 203:Display/GUI/GUI_Paint.c ****     for (UWORD Y = 0; Y < Paint.HeightByte; Y++) {
 454              		.loc 1 203 0
 455 0002 0024     		movs	r4, #0
 456 0004 0CE0     		b	.L44
 457              	.LVL43:
 458              	.L45:
 459              	.LBB3:
 460              	.LBB4:
 204:Display/GUI/GUI_Paint.c ****         for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 205:Display/GUI/GUI_Paint.c ****             UDOUBLE Addr = X + Y*Paint.WidthByte;
 461              		.loc 1 205 0 discriminator 3
 462 0006 02FB0432 		mla	r2, r2, r4, r3
 463              	.LVL44:
 206:Display/GUI/GUI_Paint.c ****             Paint.Image[Addr] = Color;
 464              		.loc 1 206 0 discriminator 3
 465 000a 0A49     		ldr	r1, .L50
 466 000c 0968     		ldr	r1, [r1]
 467 000e 8854     		strb	r0, [r1, r2]
 468              	.LBE4:
 204:Display/GUI/GUI_Paint.c ****         for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 469              		.loc 1 204 0 discriminator 3
ARM GAS  /tmp/ccLicZTP.s 			page 13


 470 0010 0133     		adds	r3, r3, #1
 471              	.LVL45:
 472 0012 9BB2     		uxth	r3, r3
 473              	.LVL46:
 474              	.L46:
 204:Display/GUI/GUI_Paint.c ****         for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 475              		.loc 1 204 0 is_stmt 0 discriminator 1
 476 0014 074A     		ldr	r2, .L50
 477 0016 528A     		ldrh	r2, [r2, #18]
 478 0018 9A42     		cmp	r2, r3
 479 001a F4D8     		bhi	.L45
 480              	.LBE3:
 203:Display/GUI/GUI_Paint.c ****     for (UWORD Y = 0; Y < Paint.HeightByte; Y++) {
 481              		.loc 1 203 0 is_stmt 1 discriminator 2
 482 001c 0134     		adds	r4, r4, #1
 483              	.LVL47:
 484 001e A4B2     		uxth	r4, r4
 485              	.LVL48:
 486              	.L44:
 203:Display/GUI/GUI_Paint.c ****     for (UWORD Y = 0; Y < Paint.HeightByte; Y++) {
 487              		.loc 1 203 0 is_stmt 0 discriminator 1
 488 0020 044B     		ldr	r3, .L50
 489 0022 9B8A     		ldrh	r3, [r3, #20]
 490 0024 A342     		cmp	r3, r4
 491 0026 01D9     		bls	.L49
 492              	.LBB5:
 204:Display/GUI/GUI_Paint.c ****         for (UWORD X = 0; X < Paint.WidthByte; X++ ) {//8 pixel =  1 byte
 493              		.loc 1 204 0 is_stmt 1
 494 0028 0023     		movs	r3, #0
 495 002a F3E7     		b	.L46
 496              	.L49:
 497              	.LBE5:
 498              	.LBE2:
 207:Display/GUI/GUI_Paint.c ****         }
 208:Display/GUI/GUI_Paint.c ****     }
 209:Display/GUI/GUI_Paint.c **** }
 499              		.loc 1 209 0
 500 002c 5DF8044B 		ldr	r4, [sp], #4
 501              	.LCFI7:
 502              		.cfi_restore 4
 503              		.cfi_def_cfa_offset 0
 504              	.LVL49:
 505 0030 7047     		bx	lr
 506              	.L51:
 507 0032 00BF     		.align	2
 508              	.L50:
 509 0034 00000000 		.word	Paint
 510              		.cfi_endproc
 511              	.LFE128:
 513              		.section	.text.Paint_ClearWindows,"ax",%progbits
 514              		.align	1
 515              		.global	Paint_ClearWindows
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu fpv4-sp-d16
 521              	Paint_ClearWindows:
ARM GAS  /tmp/ccLicZTP.s 			page 14


 522              	.LFB129:
 210:Display/GUI/GUI_Paint.c **** 
 211:Display/GUI/GUI_Paint.c **** /******************************************************************************
 212:Display/GUI/GUI_Paint.c **** function:	Clear the color of a window
 213:Display/GUI/GUI_Paint.c **** parameter:
 214:Display/GUI/GUI_Paint.c ****     Xstart :   x starting point
 215:Display/GUI/GUI_Paint.c ****     Ystart :   Y starting point
 216:Display/GUI/GUI_Paint.c ****     Xend   :   x end point
 217:Display/GUI/GUI_Paint.c ****     Yend   :   y end point
 218:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 219:Display/GUI/GUI_Paint.c **** void Paint_ClearWindows(UWORD Xstart, UWORD Ystart, UWORD Xend, UWORD Yend, UWORD Color)
 220:Display/GUI/GUI_Paint.c **** {
 523              		.loc 1 220 0
 524              		.cfi_startproc
 525              		@ args = 4, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              	.LVL50:
 528 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 529              	.LCFI8:
 530              		.cfi_def_cfa_offset 32
 531              		.cfi_offset 3, -32
 532              		.cfi_offset 4, -28
 533              		.cfi_offset 5, -24
 534              		.cfi_offset 6, -20
 535              		.cfi_offset 7, -16
 536              		.cfi_offset 8, -12
 537              		.cfi_offset 9, -8
 538              		.cfi_offset 14, -4
 539 0004 8146     		mov	r9, r0
 540 0006 0D46     		mov	r5, r1
 541 0008 1646     		mov	r6, r2
 542 000a 9846     		mov	r8, r3
 543 000c BDF82070 		ldrh	r7, [sp, #32]
 544              	.LVL51:
 221:Display/GUI/GUI_Paint.c ****     UWORD X, Y;
 222:Display/GUI/GUI_Paint.c ****     for (Y = Ystart; Y < Yend; Y++) {
 545              		.loc 1 222 0
 546 0010 0AE0     		b	.L53
 547              	.LVL52:
 548              	.L54:
 223:Display/GUI/GUI_Paint.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 224:Display/GUI/GUI_Paint.c ****             Paint_SetPixel(X, Y, Color);
 549              		.loc 1 224 0 discriminator 3
 550 0012 3A46     		mov	r2, r7
 551 0014 2946     		mov	r1, r5
 552 0016 2046     		mov	r0, r4
 553 0018 FFF7FEFF 		bl	Paint_SetPixel
 554              	.LVL53:
 223:Display/GUI/GUI_Paint.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 555              		.loc 1 223 0 discriminator 3
 556 001c 0134     		adds	r4, r4, #1
 557              	.LVL54:
 558 001e A4B2     		uxth	r4, r4
 559              	.LVL55:
 560              	.L55:
 223:Display/GUI/GUI_Paint.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 561              		.loc 1 223 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccLicZTP.s 			page 15


 562 0020 B442     		cmp	r4, r6
 563 0022 F6D3     		bcc	.L54
 222:Display/GUI/GUI_Paint.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 564              		.loc 1 222 0 is_stmt 1 discriminator 2
 565 0024 0135     		adds	r5, r5, #1
 566              	.LVL56:
 567 0026 ADB2     		uxth	r5, r5
 568              	.LVL57:
 569              	.L53:
 222:Display/GUI/GUI_Paint.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 570              		.loc 1 222 0 is_stmt 0 discriminator 1
 571 0028 4545     		cmp	r5, r8
 572 002a 01D2     		bcs	.L58
 223:Display/GUI/GUI_Paint.c ****         for (X = Xstart; X < Xend; X++) {//8 pixel =  1 byte
 573              		.loc 1 223 0 is_stmt 1
 574 002c 4C46     		mov	r4, r9
 575 002e F7E7     		b	.L55
 576              	.L58:
 225:Display/GUI/GUI_Paint.c ****         }
 226:Display/GUI/GUI_Paint.c ****     }
 227:Display/GUI/GUI_Paint.c **** }
 577              		.loc 1 227 0
 578 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 579              		.cfi_endproc
 580              	.LFE129:
 582              		.section	.text.Paint_DrawPoint,"ax",%progbits
 583              		.align	1
 584              		.global	Paint_DrawPoint
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	Paint_DrawPoint:
 591              	.LFB130:
 228:Display/GUI/GUI_Paint.c **** 
 229:Display/GUI/GUI_Paint.c **** /******************************************************************************
 230:Display/GUI/GUI_Paint.c **** function:	Draw Point(Xpoint, Ypoint) Fill the color
 231:Display/GUI/GUI_Paint.c **** parameter:
 232:Display/GUI/GUI_Paint.c ****     Xpoint		:   The Xpoint coordinate of the point
 233:Display/GUI/GUI_Paint.c ****     Ypoint		:   The Ypoint coordinate of the point
 234:Display/GUI/GUI_Paint.c ****     Color		:   Set color
 235:Display/GUI/GUI_Paint.c ****     Dot_Pixel	:	point size
 236:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 237:Display/GUI/GUI_Paint.c **** void Paint_DrawPoint(UWORD Xpoint, UWORD Ypoint, UWORD Color,
 238:Display/GUI/GUI_Paint.c ****                      DOT_PIXEL Dot_Pixel, DOT_STYLE DOT_STYLE)
 239:Display/GUI/GUI_Paint.c **** {
 592              		.loc 1 239 0
 593              		.cfi_startproc
 594              		@ args = 4, pretend = 0, frame = 8
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              	.LVL58:
 597 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 598              	.LCFI9:
 599              		.cfi_def_cfa_offset 36
 600              		.cfi_offset 4, -36
 601              		.cfi_offset 5, -32
 602              		.cfi_offset 6, -28
ARM GAS  /tmp/ccLicZTP.s 			page 16


 603              		.cfi_offset 7, -24
 604              		.cfi_offset 8, -20
 605              		.cfi_offset 9, -16
 606              		.cfi_offset 10, -12
 607              		.cfi_offset 11, -8
 608              		.cfi_offset 14, -4
 609 0004 83B0     		sub	sp, sp, #12
 610              	.LCFI10:
 611              		.cfi_def_cfa_offset 48
 240:Display/GUI/GUI_Paint.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 612              		.loc 1 240 0
 613 0006 2F4C     		ldr	r4, .L72
 614 0008 A488     		ldrh	r4, [r4, #4]
 615 000a 8442     		cmp	r4, r0
 616 000c 57D3     		bcc	.L59
 617              		.loc 1 240 0 is_stmt 0 discriminator 1
 618 000e 2D4C     		ldr	r4, .L72
 619 0010 E488     		ldrh	r4, [r4, #6]
 620 0012 8C42     		cmp	r4, r1
 621 0014 53D3     		bcc	.L59
 622 0016 1F46     		mov	r7, r3
 623 0018 0192     		str	r2, [sp, #4]
 624 001a 0E46     		mov	r6, r1
 625 001c 0546     		mov	r5, r0
 241:Display/GUI/GUI_Paint.c ****         Debug("Paint_DrawPoint Input exceeds the normal display range\r\n");
 242:Display/GUI/GUI_Paint.c ****         return;
 243:Display/GUI/GUI_Paint.c ****     }
 244:Display/GUI/GUI_Paint.c **** 
 245:Display/GUI/GUI_Paint.c ****     int16_t XDir_Num , YDir_Num;
 246:Display/GUI/GUI_Paint.c ****     if (DOT_STYLE == DOT_FILL_AROUND) {
 626              		.loc 1 246 0 is_stmt 1
 627 001e 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 628              	.LVL59:
 629 0022 012B     		cmp	r3, #1
 630 0024 2ED0     		beq	.L68
 247:Display/GUI/GUI_Paint.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 248:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num < 2 * Dot_Pixel - 1; YDir_Num++) {
 249:Display/GUI/GUI_Paint.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 250:Display/GUI/GUI_Paint.c ****                     break;
 251:Display/GUI/GUI_Paint.c ****                 Paint_SetPixel(Xpoint + XDir_Num - Dot_Pixel, Ypoint + YDir_Num - Dot_Pixel, Color)
 252:Display/GUI/GUI_Paint.c ****             }
 253:Display/GUI/GUI_Paint.c ****         }
 254:Display/GUI/GUI_Paint.c ****     } else {
 255:Display/GUI/GUI_Paint.c ****         for (XDir_Num = 0; XDir_Num <  Dot_Pixel; XDir_Num++) {
 631              		.loc 1 255 0
 632 0026 4FF00008 		mov	r8, #0
 633 002a 43E0     		b	.L62
 634              	.LVL60:
 635              	.L63:
 247:Display/GUI/GUI_Paint.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
 636              		.loc 1 247 0 discriminator 2
 637 002c 09F10109 		add	r9, r9, #1
 638              	.LVL61:
 639 0030 0FFA89F9 		sxth	r9, r9
 640              	.LVL62:
 641              	.L61:
 247:Display/GUI/GUI_Paint.c ****         for (XDir_Num = 0; XDir_Num < 2 * Dot_Pixel - 1; XDir_Num++) {
ARM GAS  /tmp/ccLicZTP.s 			page 17


 642              		.loc 1 247 0 is_stmt 0 discriminator 1
 643 0034 CB46     		mov	fp, r9
 644 0036 B846     		mov	r8, r7
 645 0038 4FEA470A 		lsl	r10, r7, #1
 646 003c 0AF1FF3A 		add	r10, r10, #-1
 647 0040 D145     		cmp	r9, r10
 648 0042 3CDA     		bge	.L59
 248:Display/GUI/GUI_Paint.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 649              		.loc 1 248 0 is_stmt 1
 650 0044 0024     		movs	r4, #0
 651              	.L65:
 652              	.LVL63:
 248:Display/GUI/GUI_Paint.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 653              		.loc 1 248 0 is_stmt 0 discriminator 1
 654 0046 2346     		mov	r3, r4
 655 0048 5445     		cmp	r4, r10
 656 004a EFDA     		bge	.L63
 249:Display/GUI/GUI_Paint.c ****                     break;
 657              		.loc 1 249 0 is_stmt 1
 658 004c 05EB0B02 		add	r2, r5, fp
 659 0050 A2EB0802 		sub	r2, r2, r8
 660 0054 002A     		cmp	r2, #0
 661 0056 E9DB     		blt	.L63
 249:Display/GUI/GUI_Paint.c ****                     break;
 662              		.loc 1 249 0 is_stmt 0 discriminator 1
 663 0058 3344     		add	r3, r3, r6
 664 005a A3EB0803 		sub	r3, r3, r8
 665 005e 002B     		cmp	r3, #0
 666 0060 E4DB     		blt	.L63
 251:Display/GUI/GUI_Paint.c ****             }
 667              		.loc 1 251 0 is_stmt 1 discriminator 2
 668 0062 05EB0900 		add	r0, r5, r9
 669 0066 80B2     		uxth	r0, r0
 670 0068 BBB2     		uxth	r3, r7
 671 006a A4B2     		uxth	r4, r4
 672 006c A119     		adds	r1, r4, r6
 673 006e 89B2     		uxth	r1, r1
 674 0070 C91A     		subs	r1, r1, r3
 675 0072 C01A     		subs	r0, r0, r3
 676 0074 019A     		ldr	r2, [sp, #4]
 677 0076 89B2     		uxth	r1, r1
 678 0078 80B2     		uxth	r0, r0
 679 007a FFF7FEFF 		bl	Paint_SetPixel
 680              	.LVL64:
 248:Display/GUI/GUI_Paint.c ****                 if(Xpoint + XDir_Num - Dot_Pixel < 0 || Ypoint + YDir_Num - Dot_Pixel < 0)
 681              		.loc 1 248 0 discriminator 2
 682 007e 0134     		adds	r4, r4, #1
 683              	.LVL65:
 684 0080 24B2     		sxth	r4, r4
 685              	.LVL66:
 686 0082 E0E7     		b	.L65
 687              	.LVL67:
 688              	.L68:
 247:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num < 2 * Dot_Pixel - 1; YDir_Num++) {
 689              		.loc 1 247 0
 690 0084 4FF00009 		mov	r9, #0
 691 0088 D4E7     		b	.L61
ARM GAS  /tmp/ccLicZTP.s 			page 18


 692              	.LVL68:
 693              	.L66:
 256:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 257:Display/GUI/GUI_Paint.c ****                 Paint_SetPixel(Xpoint + XDir_Num - 1, Ypoint + YDir_Num - 1, Color);
 694              		.loc 1 257 0 discriminator 3
 695 008a 05EB0800 		add	r0, r5, r8
 696 008e 80B2     		uxth	r0, r0
 697 0090 9CB2     		uxth	r4, r3
 698 0092 A119     		adds	r1, r4, r6
 699 0094 89B2     		uxth	r1, r1
 700 0096 0139     		subs	r1, r1, #1
 701 0098 0138     		subs	r0, r0, #1
 702 009a 019A     		ldr	r2, [sp, #4]
 703 009c 89B2     		uxth	r1, r1
 704 009e 80B2     		uxth	r0, r0
 705 00a0 FFF7FEFF 		bl	Paint_SetPixel
 706              	.LVL69:
 256:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 707              		.loc 1 256 0 discriminator 3
 708 00a4 631C     		adds	r3, r4, #1
 709 00a6 1BB2     		sxth	r3, r3
 710              	.LVL70:
 711              	.L67:
 256:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 712              		.loc 1 256 0 is_stmt 0 discriminator 1
 713 00a8 4B45     		cmp	r3, r9
 714 00aa EEDB     		blt	.L66
 255:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 715              		.loc 1 255 0 is_stmt 1 discriminator 2
 716 00ac 08F10108 		add	r8, r8, #1
 717              	.LVL71:
 718 00b0 0FFA88F8 		sxth	r8, r8
 719              	.LVL72:
 720              	.L62:
 255:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 721              		.loc 1 255 0 is_stmt 0 discriminator 1
 722 00b4 B946     		mov	r9, r7
 723 00b6 B845     		cmp	r8, r7
 724 00b8 01DA     		bge	.L59
 256:Display/GUI/GUI_Paint.c ****             for (YDir_Num = 0; YDir_Num <  Dot_Pixel; YDir_Num++) {
 725              		.loc 1 256 0 is_stmt 1
 726 00ba 0023     		movs	r3, #0
 727 00bc F4E7     		b	.L67
 728              	.LVL73:
 729              	.L59:
 258:Display/GUI/GUI_Paint.c ****             }
 259:Display/GUI/GUI_Paint.c ****         }
 260:Display/GUI/GUI_Paint.c ****     }
 261:Display/GUI/GUI_Paint.c **** }
 730              		.loc 1 261 0
 731 00be 03B0     		add	sp, sp, #12
 732              	.LCFI11:
 733              		.cfi_def_cfa_offset 36
 734              		@ sp needed
 735 00c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 736              	.LVL74:
 737              	.L73:
ARM GAS  /tmp/ccLicZTP.s 			page 19


 738              		.align	2
 739              	.L72:
 740 00c4 00000000 		.word	Paint
 741              		.cfi_endproc
 742              	.LFE130:
 744              		.section	.text.Paint_DrawLine,"ax",%progbits
 745              		.align	1
 746              		.global	Paint_DrawLine
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv4-sp-d16
 752              	Paint_DrawLine:
 753              	.LFB131:
 262:Display/GUI/GUI_Paint.c **** 
 263:Display/GUI/GUI_Paint.c **** /******************************************************************************
 264:Display/GUI/GUI_Paint.c **** function:	Draw a line of arbitrary slope
 265:Display/GUI/GUI_Paint.c **** parameter:
 266:Display/GUI/GUI_Paint.c ****     Xstart ：Starting Xpoint point coordinates
 267:Display/GUI/GUI_Paint.c ****     Ystart ：Starting Xpoint point coordinates
 268:Display/GUI/GUI_Paint.c ****     Xend   ：End point Xpoint coordinate
 269:Display/GUI/GUI_Paint.c ****     Yend   ：End point Ypoint coordinate
 270:Display/GUI/GUI_Paint.c ****     Color  ：The color of the line segment
 271:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 272:Display/GUI/GUI_Paint.c **** void Paint_DrawLine(UWORD Xstart, UWORD Ystart, UWORD Xend, UWORD Yend,
 273:Display/GUI/GUI_Paint.c ****                     UWORD Color, LINE_STYLE Line_Style, DOT_PIXEL Dot_Pixel)
 274:Display/GUI/GUI_Paint.c **** {
 754              		.loc 1 274 0
 755              		.cfi_startproc
 756              		@ args = 12, pretend = 0, frame = 24
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              	.LVL75:
 759 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 760              	.LCFI12:
 761              		.cfi_def_cfa_offset 36
 762              		.cfi_offset 4, -36
 763              		.cfi_offset 5, -32
 764              		.cfi_offset 6, -28
 765              		.cfi_offset 7, -24
 766              		.cfi_offset 8, -20
 767              		.cfi_offset 9, -16
 768              		.cfi_offset 10, -12
 769              		.cfi_offset 11, -8
 770              		.cfi_offset 14, -4
 771 0004 89B0     		sub	sp, sp, #36
 772              	.LCFI13:
 773              		.cfi_def_cfa_offset 72
 774 0006 0E46     		mov	r6, r1
 775 0008 9146     		mov	r9, r2
 776 000a 1946     		mov	r1, r3
 777              	.LVL76:
 778 000c 0493     		str	r3, [sp, #16]
 779 000e BDF84820 		ldrh	r2, [sp, #72]
 780              	.LVL77:
 781 0012 0392     		str	r2, [sp, #12]
 782 0014 9DF84C80 		ldrb	r8, [sp, #76]	@ zero_extendqisi2
 783 0018 9DF85020 		ldrb	r2, [sp, #80]	@ zero_extendqisi2
ARM GAS  /tmp/ccLicZTP.s 			page 20


 784 001c 0292     		str	r2, [sp, #8]
 275:Display/GUI/GUI_Paint.c ****     if (Xstart > Paint.Width || Ystart > Paint.Height ||
 785              		.loc 1 275 0
 786 001e 344B     		ldr	r3, .L86
 787              	.LVL78:
 788 0020 9B88     		ldrh	r3, [r3, #4]
 789 0022 8342     		cmp	r3, r0
 790 0024 61D3     		bcc	.L74
 791 0026 0546     		mov	r5, r0
 792              		.loc 1 275 0 is_stmt 0 discriminator 1
 793 0028 314A     		ldr	r2, .L86
 794 002a D288     		ldrh	r2, [r2, #6]
 795 002c B242     		cmp	r2, r6
 796 002e 5CD3     		bcc	.L74
 797              		.loc 1 275 0 discriminator 2
 798 0030 4B45     		cmp	r3, r9
 799 0032 5AD3     		bcc	.L74
 276:Display/GUI/GUI_Paint.c ****         Xend > Paint.Width || Yend > Paint.Height) {
 800              		.loc 1 276 0 is_stmt 1
 801 0034 8A42     		cmp	r2, r1
 802 0036 58D3     		bcc	.L74
 803              	.LVL79:
 277:Display/GUI/GUI_Paint.c ****         Debug("Paint_DrawLine Input exceeds the normal display range\r\n");
 278:Display/GUI/GUI_Paint.c ****         return;
 279:Display/GUI/GUI_Paint.c ****     }
 280:Display/GUI/GUI_Paint.c **** 
 281:Display/GUI/GUI_Paint.c ****     UWORD Xpoint = Xstart;
 282:Display/GUI/GUI_Paint.c ****     UWORD Ypoint = Ystart;
 283:Display/GUI/GUI_Paint.c ****     int dx = (int)Xend - (int)Xstart >= 0 ? Xend - Xstart : Xstart - Xend;
 804              		.loc 1 283 0
 805 0038 A9EB000A 		sub	r10, r9, r0
 806 003c BAF1000F 		cmp	r10, #0
 807 0040 B8BF     		it	lt
 808 0042 CAF1000A 		rsblt	r10, r10, #0
 809              	.LVL80:
 284:Display/GUI/GUI_Paint.c ****     int dy = (int)Yend - (int)Ystart <= 0 ? Yend - Ystart : Ystart - Yend;
 810              		.loc 1 284 0
 811 0046 8B1B     		subs	r3, r1, r6
 812 0048 002B     		cmp	r3, #0
 813 004a B8BF     		it	lt
 814 004c 5B42     		rsblt	r3, r3, #0
 815 004e 0593     		str	r3, [sp, #20]
 816 0050 C3F1000B 		rsb	fp, r3, #0
 817              	.LVL81:
 285:Display/GUI/GUI_Paint.c **** 
 286:Display/GUI/GUI_Paint.c ****     // Increment direction, 1 is positive, -1 is counter;
 287:Display/GUI/GUI_Paint.c ****     int XAddway = Xstart < Xend ? 1 : -1;
 818              		.loc 1 287 0
 819 0054 4845     		cmp	r0, r9
 820 0056 0BD2     		bcs	.L83
 821 0058 0123     		movs	r3, #1
 822 005a 0693     		str	r3, [sp, #24]
 823              	.L76:
 824              	.LVL82:
 288:Display/GUI/GUI_Paint.c ****     int YAddway = Ystart < Yend ? 1 : -1;
 825              		.loc 1 288 0 discriminator 4
 826 005c 049B     		ldr	r3, [sp, #16]
ARM GAS  /tmp/ccLicZTP.s 			page 21


 827 005e 9E42     		cmp	r6, r3
 828 0060 0AD2     		bcs	.L84
 829              		.loc 1 288 0 is_stmt 0
 830 0062 0123     		movs	r3, #1
 831 0064 0793     		str	r3, [sp, #28]
 832              	.L77:
 833              	.LVL83:
 834 0066 059B     		ldr	r3, [sp, #20]
 835 0068 AAEB0307 		sub	r7, r10, r3
 836              	.LVL84:
 289:Display/GUI/GUI_Paint.c **** 
 290:Display/GUI/GUI_Paint.c ****     //Cumulative error
 291:Display/GUI/GUI_Paint.c ****     int Esp = dx + dy;
 292:Display/GUI/GUI_Paint.c ****     char Dotted_Len = 0;
 837              		.loc 1 292 0 is_stmt 1 discriminator 4
 838 006c 0024     		movs	r4, #0
 839 006e 23E0     		b	.L78
 840              	.LVL85:
 841              	.L83:
 287:Display/GUI/GUI_Paint.c ****     int YAddway = Ystart < Yend ? 1 : -1;
 842              		.loc 1 287 0
 843 0070 4FF0FF33 		mov	r3, #-1
 844 0074 0693     		str	r3, [sp, #24]
 845 0076 F1E7     		b	.L76
 846              	.LVL86:
 847              	.L84:
 288:Display/GUI/GUI_Paint.c ****     int YAddway = Ystart < Yend ? 1 : -1;
 848              		.loc 1 288 0
 849 0078 4FF0FF33 		mov	r3, #-1
 850 007c 0793     		str	r3, [sp, #28]
 851 007e F2E7     		b	.L77
 852              	.LVL87:
 853              	.L79:
 293:Display/GUI/GUI_Paint.c **** 
 294:Display/GUI/GUI_Paint.c ****     for (;;) {
 295:Display/GUI/GUI_Paint.c ****         Dotted_Len++;
 296:Display/GUI/GUI_Paint.c ****         //Painted dotted line, 2 point is really virtual
 297:Display/GUI/GUI_Paint.c ****         if (Line_Style == LINE_STYLE_DOTTED && Dotted_Len % 3 == 0) {
 298:Display/GUI/GUI_Paint.c ****             //Debug("LINE_DOTTED\r\n");
 299:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(Xpoint, Ypoint, IMAGE_BACKGROUND, Dot_Pixel, DOT_STYLE_DFT);
 300:Display/GUI/GUI_Paint.c ****             Dotted_Len = 0;
 301:Display/GUI/GUI_Paint.c ****         } else {
 302:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(Xpoint, Ypoint, Color, Dot_Pixel, DOT_STYLE_DFT);
 854              		.loc 1 302 0
 855 0080 0123     		movs	r3, #1
 856 0082 0093     		str	r3, [sp]
 857 0084 029B     		ldr	r3, [sp, #8]
 858 0086 039A     		ldr	r2, [sp, #12]
 859 0088 3146     		mov	r1, r6
 860 008a 2846     		mov	r0, r5
 861 008c FFF7FEFF 		bl	Paint_DrawPoint
 862              	.LVL88:
 863              	.L80:
 303:Display/GUI/GUI_Paint.c ****         }
 304:Display/GUI/GUI_Paint.c ****         if (2 * Esp >= dy) {
 864              		.loc 1 304 0
 865 0090 BBEB470F 		cmp	fp, r7, lsl #1
ARM GAS  /tmp/ccLicZTP.s 			page 22


 866 0094 06DC     		bgt	.L81
 305:Display/GUI/GUI_Paint.c ****             if (Xpoint == Xend)
 867              		.loc 1 305 0
 868 0096 4D45     		cmp	r5, r9
 869 0098 27D0     		beq	.L74
 870 009a 059B     		ldr	r3, [sp, #20]
 871 009c FF1A     		subs	r7, r7, r3
 872              	.LVL89:
 306:Display/GUI/GUI_Paint.c ****                 break;
 307:Display/GUI/GUI_Paint.c ****             Esp += dy;
 308:Display/GUI/GUI_Paint.c ****             Xpoint += XAddway;
 873              		.loc 1 308 0
 874 009e 069B     		ldr	r3, [sp, #24]
 875 00a0 1D44     		add	r5, r5, r3
 876              	.LVL90:
 877 00a2 ADB2     		uxth	r5, r5
 878              	.LVL91:
 879              	.L81:
 309:Display/GUI/GUI_Paint.c ****         }
 310:Display/GUI/GUI_Paint.c ****         if (2 * Esp <= dx) {
 880              		.loc 1 310 0
 881 00a4 BAEB470F 		cmp	r10, r7, lsl #1
 882 00a8 06DB     		blt	.L78
 311:Display/GUI/GUI_Paint.c ****             if (Ypoint == Yend)
 883              		.loc 1 311 0
 884 00aa 049B     		ldr	r3, [sp, #16]
 885 00ac 9E42     		cmp	r6, r3
 886 00ae 1CD0     		beq	.L74
 312:Display/GUI/GUI_Paint.c ****                 break;
 313:Display/GUI/GUI_Paint.c ****             Esp += dx;
 887              		.loc 1 313 0
 888 00b0 5744     		add	r7, r7, r10
 889              	.LVL92:
 314:Display/GUI/GUI_Paint.c ****             Ypoint += YAddway;
 890              		.loc 1 314 0
 891 00b2 079B     		ldr	r3, [sp, #28]
 892 00b4 1E44     		add	r6, r6, r3
 893              	.LVL93:
 894 00b6 B6B2     		uxth	r6, r6
 895              	.LVL94:
 896              	.L78:
 295:Display/GUI/GUI_Paint.c ****         //Painted dotted line, 2 point is really virtual
 897              		.loc 1 295 0
 898 00b8 0134     		adds	r4, r4, #1
 899              	.LVL95:
 900 00ba E4B2     		uxtb	r4, r4
 901              	.LVL96:
 297:Display/GUI/GUI_Paint.c ****             //Debug("LINE_DOTTED\r\n");
 902              		.loc 1 297 0
 903 00bc B8F1010F 		cmp	r8, #1
 904 00c0 DED1     		bne	.L79
 297:Display/GUI/GUI_Paint.c ****             //Debug("LINE_DOTTED\r\n");
 905              		.loc 1 297 0 is_stmt 0 discriminator 1
 906 00c2 0C4B     		ldr	r3, .L86+4
 907 00c4 A3FB0423 		umull	r2, r3, r3, r4
 908 00c8 5B08     		lsrs	r3, r3, #1
 909 00ca 03EB4303 		add	r3, r3, r3, lsl #1
ARM GAS  /tmp/ccLicZTP.s 			page 23


 910 00ce E31A     		subs	r3, r4, r3
 911 00d0 13F0FF0F 		tst	r3, #255
 912 00d4 D4D1     		bne	.L79
 299:Display/GUI/GUI_Paint.c ****             Dotted_Len = 0;
 913              		.loc 1 299 0 is_stmt 1
 914 00d6 0123     		movs	r3, #1
 915 00d8 0093     		str	r3, [sp]
 916 00da 029B     		ldr	r3, [sp, #8]
 917 00dc FF22     		movs	r2, #255
 918 00de 3146     		mov	r1, r6
 919 00e0 2846     		mov	r0, r5
 920 00e2 FFF7FEFF 		bl	Paint_DrawPoint
 921              	.LVL97:
 300:Display/GUI/GUI_Paint.c ****         } else {
 922              		.loc 1 300 0
 923 00e6 0024     		movs	r4, #0
 924 00e8 D2E7     		b	.L80
 925              	.LVL98:
 926              	.L74:
 315:Display/GUI/GUI_Paint.c ****         }
 316:Display/GUI/GUI_Paint.c ****     }
 317:Display/GUI/GUI_Paint.c **** }
 927              		.loc 1 317 0
 928 00ea 09B0     		add	sp, sp, #36
 929              	.LCFI14:
 930              		.cfi_def_cfa_offset 36
 931              		@ sp needed
 932 00ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 933              	.LVL99:
 934              	.L87:
 935              		.align	2
 936              	.L86:
 937 00f0 00000000 		.word	Paint
 938 00f4 ABAAAAAA 		.word	-1431655765
 939              		.cfi_endproc
 940              	.LFE131:
 942              		.section	.text.Paint_DrawRectangle,"ax",%progbits
 943              		.align	1
 944              		.global	Paint_DrawRectangle
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv4-sp-d16
 950              	Paint_DrawRectangle:
 951              	.LFB132:
 318:Display/GUI/GUI_Paint.c **** 
 319:Display/GUI/GUI_Paint.c **** /******************************************************************************
 320:Display/GUI/GUI_Paint.c **** function:	Draw a rectangle
 321:Display/GUI/GUI_Paint.c **** parameter:
 322:Display/GUI/GUI_Paint.c ****     Xstart ：Rectangular  Starting Xpoint point coordinates
 323:Display/GUI/GUI_Paint.c ****     Ystart ：Rectangular  Starting Xpoint point coordinates
 324:Display/GUI/GUI_Paint.c ****     Xend   ：Rectangular  End point Xpoint coordinate
 325:Display/GUI/GUI_Paint.c ****     Yend   ：Rectangular  End point Ypoint coordinate
 326:Display/GUI/GUI_Paint.c ****     Color  ：The color of the Rectangular segment
 327:Display/GUI/GUI_Paint.c ****     Filled : Whether it is filled--- 1 solid 0：empty
 328:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 329:Display/GUI/GUI_Paint.c **** void Paint_DrawRectangle(UWORD Xstart, UWORD Ystart, UWORD Xend, UWORD Yend,
ARM GAS  /tmp/ccLicZTP.s 			page 24


 330:Display/GUI/GUI_Paint.c ****                          UWORD Color, DRAW_FILL Filled, DOT_PIXEL Dot_Pixel)
 331:Display/GUI/GUI_Paint.c **** {
 952              		.loc 1 331 0
 953              		.cfi_startproc
 954              		@ args = 12, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL100:
 957 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 958              	.LCFI15:
 959              		.cfi_def_cfa_offset 32
 960              		.cfi_offset 4, -32
 961              		.cfi_offset 5, -28
 962              		.cfi_offset 6, -24
 963              		.cfi_offset 7, -20
 964              		.cfi_offset 8, -16
 965              		.cfi_offset 9, -12
 966              		.cfi_offset 10, -8
 967              		.cfi_offset 14, -4
 968 0004 84B0     		sub	sp, sp, #16
 969              	.LCFI16:
 970              		.cfi_def_cfa_offset 48
 971 0006 0C46     		mov	r4, r1
 972 0008 1F46     		mov	r7, r3
 973 000a BDF83080 		ldrh	r8, [sp, #48]
 974 000e 9DF83410 		ldrb	r1, [sp, #52]	@ zero_extendqisi2
 975              	.LVL101:
 976 0012 9DF83890 		ldrb	r9, [sp, #56]	@ zero_extendqisi2
 332:Display/GUI/GUI_Paint.c ****     if (Xstart > Paint.Width || Ystart > Paint.Height ||
 977              		.loc 1 332 0
 978 0016 2A4B     		ldr	r3, .L95
 979              	.LVL102:
 980 0018 9B88     		ldrh	r3, [r3, #4]
 981 001a 8342     		cmp	r3, r0
 982 001c 4DD3     		bcc	.L88
 983 001e 0546     		mov	r5, r0
 984 0020 1646     		mov	r6, r2
 985              		.loc 1 332 0 is_stmt 0 discriminator 1
 986 0022 274A     		ldr	r2, .L95
 987              	.LVL103:
 988 0024 D288     		ldrh	r2, [r2, #6]
 989 0026 A242     		cmp	r2, r4
 990 0028 47D3     		bcc	.L88
 991              		.loc 1 332 0 discriminator 2
 992 002a B342     		cmp	r3, r6
 993 002c 45D3     		bcc	.L88
 333:Display/GUI/GUI_Paint.c ****         Xend > Paint.Width || Yend > Paint.Height) {
 994              		.loc 1 333 0 is_stmt 1
 995 002e BA42     		cmp	r2, r7
 996 0030 43D3     		bcc	.L88
 334:Display/GUI/GUI_Paint.c ****         Debug("Input exceeds the normal display range\r\n");
 335:Display/GUI/GUI_Paint.c ****         return;
 336:Display/GUI/GUI_Paint.c ****     }
 337:Display/GUI/GUI_Paint.c **** 
 338:Display/GUI/GUI_Paint.c ****     if (Filled ) {
 997              		.loc 1 338 0
 998 0032 0029     		cmp	r1, #0
 999 0034 3FD1     		bne	.L90
ARM GAS  /tmp/ccLicZTP.s 			page 25


 339:Display/GUI/GUI_Paint.c ****         UWORD Ypoint;
 340:Display/GUI/GUI_Paint.c ****         for(Ypoint = Ystart; Ypoint < Yend; Ypoint++) {
 341:Display/GUI/GUI_Paint.c ****             Paint_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , LINE_STYLE_SOLID, Dot_Pixel);
 342:Display/GUI/GUI_Paint.c ****         }
 343:Display/GUI/GUI_Paint.c ****     } else {
 344:Display/GUI/GUI_Paint.c ****         Paint_DrawLine(Xstart, Ystart, Xend, Ystart, Color , LINE_STYLE_SOLID, Dot_Pixel);
 1000              		.loc 1 344 0
 1001 0036 CDF80890 		str	r9, [sp, #8]
 1002 003a 4FF0000A 		mov	r10, #0
 1003 003e CDF804A0 		str	r10, [sp, #4]
 1004 0042 CDF80080 		str	r8, [sp]
 1005 0046 2346     		mov	r3, r4
 1006 0048 3246     		mov	r2, r6
 1007 004a 2146     		mov	r1, r4
 1008 004c FFF7FEFF 		bl	Paint_DrawLine
 1009              	.LVL104:
 345:Display/GUI/GUI_Paint.c ****         Paint_DrawLine(Xstart, Ystart, Xstart, Yend, Color , LINE_STYLE_SOLID, Dot_Pixel);
 1010              		.loc 1 345 0
 1011 0050 CDF80890 		str	r9, [sp, #8]
 1012 0054 CDF804A0 		str	r10, [sp, #4]
 1013 0058 CDF80080 		str	r8, [sp]
 1014 005c 3B46     		mov	r3, r7
 1015 005e 2A46     		mov	r2, r5
 1016 0060 2146     		mov	r1, r4
 1017 0062 2846     		mov	r0, r5
 1018 0064 FFF7FEFF 		bl	Paint_DrawLine
 1019              	.LVL105:
 346:Display/GUI/GUI_Paint.c ****         Paint_DrawLine(Xend, Yend, Xend, Ystart, Color , LINE_STYLE_SOLID, Dot_Pixel);
 1020              		.loc 1 346 0
 1021 0068 CDF80890 		str	r9, [sp, #8]
 1022 006c CDF804A0 		str	r10, [sp, #4]
 1023 0070 CDF80080 		str	r8, [sp]
 1024 0074 2346     		mov	r3, r4
 1025 0076 3246     		mov	r2, r6
 1026 0078 3946     		mov	r1, r7
 1027 007a 3046     		mov	r0, r6
 1028 007c FFF7FEFF 		bl	Paint_DrawLine
 1029              	.LVL106:
 347:Display/GUI/GUI_Paint.c ****         Paint_DrawLine(Xend, Yend, Xstart, Yend, Color , LINE_STYLE_SOLID, Dot_Pixel);
 1030              		.loc 1 347 0
 1031 0080 CDF80890 		str	r9, [sp, #8]
 1032 0084 CDF804A0 		str	r10, [sp, #4]
 1033 0088 CDF80080 		str	r8, [sp]
 1034 008c 3B46     		mov	r3, r7
 1035 008e 2A46     		mov	r2, r5
 1036 0090 3946     		mov	r1, r7
 1037 0092 3046     		mov	r0, r6
 1038 0094 FFF7FEFF 		bl	Paint_DrawLine
 1039              	.LVL107:
 1040 0098 0FE0     		b	.L88
 1041              	.LVL108:
 1042              	.L92:
 1043              	.LBB6:
 341:Display/GUI/GUI_Paint.c ****         }
 1044              		.loc 1 341 0 discriminator 3
 1045 009a CDF80890 		str	r9, [sp, #8]
 1046 009e 0023     		movs	r3, #0
ARM GAS  /tmp/ccLicZTP.s 			page 26


 1047 00a0 0193     		str	r3, [sp, #4]
 1048 00a2 CDF80080 		str	r8, [sp]
 1049 00a6 2346     		mov	r3, r4
 1050 00a8 3246     		mov	r2, r6
 1051 00aa 2146     		mov	r1, r4
 1052 00ac 2846     		mov	r0, r5
 1053 00ae FFF7FEFF 		bl	Paint_DrawLine
 1054              	.LVL109:
 340:Display/GUI/GUI_Paint.c ****             Paint_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , LINE_STYLE_SOLID, Dot_Pixel);
 1055              		.loc 1 340 0 discriminator 3
 1056 00b2 0134     		adds	r4, r4, #1
 1057              	.LVL110:
 1058 00b4 A4B2     		uxth	r4, r4
 1059              	.LVL111:
 1060              	.L90:
 340:Display/GUI/GUI_Paint.c ****             Paint_DrawLine(Xstart, Ypoint, Xend, Ypoint, Color , LINE_STYLE_SOLID, Dot_Pixel);
 1061              		.loc 1 340 0 is_stmt 0 discriminator 1
 1062 00b6 BC42     		cmp	r4, r7
 1063 00b8 EFD3     		bcc	.L92
 1064              	.LVL112:
 1065              	.L88:
 1066              	.LBE6:
 348:Display/GUI/GUI_Paint.c ****     }
 349:Display/GUI/GUI_Paint.c **** }
 1067              		.loc 1 349 0 is_stmt 1
 1068 00ba 04B0     		add	sp, sp, #16
 1069              	.LCFI17:
 1070              		.cfi_def_cfa_offset 32
 1071              		@ sp needed
 1072 00bc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1073              	.LVL113:
 1074              	.L96:
 1075              		.align	2
 1076              	.L95:
 1077 00c0 00000000 		.word	Paint
 1078              		.cfi_endproc
 1079              	.LFE132:
 1081              		.section	.text.Paint_DrawCircle,"ax",%progbits
 1082              		.align	1
 1083              		.global	Paint_DrawCircle
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1087              		.fpu fpv4-sp-d16
 1089              	Paint_DrawCircle:
 1090              	.LFB133:
 350:Display/GUI/GUI_Paint.c **** 
 351:Display/GUI/GUI_Paint.c **** /******************************************************************************
 352:Display/GUI/GUI_Paint.c **** function:	Use the 8-point method to draw a circle of the
 353:Display/GUI/GUI_Paint.c ****             specified size at the specified position->
 354:Display/GUI/GUI_Paint.c **** parameter:
 355:Display/GUI/GUI_Paint.c ****     X_Center  ：Center X coordinate
 356:Display/GUI/GUI_Paint.c ****     Y_Center  ：Center Y coordinate
 357:Display/GUI/GUI_Paint.c ****     Radius    ：circle Radius
 358:Display/GUI/GUI_Paint.c ****     Color     ：The color of the ：circle segment
 359:Display/GUI/GUI_Paint.c ****     Filled    : Whether it is filled: 1 filling 0：Do not
 360:Display/GUI/GUI_Paint.c **** ******************************************************************************/
ARM GAS  /tmp/ccLicZTP.s 			page 27


 361:Display/GUI/GUI_Paint.c **** void Paint_DrawCircle(UWORD X_Center, UWORD Y_Center, UWORD Radius,
 362:Display/GUI/GUI_Paint.c ****                       UWORD Color, DRAW_FILL  Draw_Fill , DOT_PIXEL Dot_Pixel)
 363:Display/GUI/GUI_Paint.c **** {
 1091              		.loc 1 363 0
 1092              		.cfi_startproc
 1093              		@ args = 8, pretend = 0, frame = 32
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              	.LVL114:
 1096 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1097              	.LCFI18:
 1098              		.cfi_def_cfa_offset 36
 1099              		.cfi_offset 4, -36
 1100              		.cfi_offset 5, -32
 1101              		.cfi_offset 6, -28
 1102              		.cfi_offset 7, -24
 1103              		.cfi_offset 8, -20
 1104              		.cfi_offset 9, -16
 1105              		.cfi_offset 10, -12
 1106              		.cfi_offset 11, -8
 1107              		.cfi_offset 14, -4
 1108 0004 8BB0     		sub	sp, sp, #44
 1109              	.LCFI19:
 1110              		.cfi_def_cfa_offset 80
 1111 0006 9DF85440 		ldrb	r4, [sp, #84]	@ zero_extendqisi2
 1112 000a 0494     		str	r4, [sp, #16]
 364:Display/GUI/GUI_Paint.c ****     if (X_Center > Paint.Width || Y_Center >= Paint.Height) {
 1113              		.loc 1 364 0
 1114 000c 944C     		ldr	r4, .L113
 1115 000e A488     		ldrh	r4, [r4, #4]
 1116 0010 8442     		cmp	r4, r0
 1117 0012 C0F02181 		bcc	.L97
 1118              		.loc 1 364 0 is_stmt 0 discriminator 1
 1119 0016 924C     		ldr	r4, .L113
 1120 0018 E488     		ldrh	r4, [r4, #6]
 1121 001a 8C42     		cmp	r4, r1
 1122 001c 40F21C81 		bls	.L97
 1123 0020 0393     		str	r3, [sp, #12]
 1124 0022 8946     		mov	r9, r1
 1125 0024 8346     		mov	fp, r0
 1126              	.LVL115:
 365:Display/GUI/GUI_Paint.c ****         Debug("Paint_DrawCircle Input exceeds the normal display range\r\n");
 366:Display/GUI/GUI_Paint.c ****         return;
 367:Display/GUI/GUI_Paint.c ****     }
 368:Display/GUI/GUI_Paint.c **** 
 369:Display/GUI/GUI_Paint.c ****     //Draw a circle from(0, R) as a starting point
 370:Display/GUI/GUI_Paint.c ****     int16_t XCurrent, YCurrent;
 371:Display/GUI/GUI_Paint.c ****     XCurrent = 0;
 372:Display/GUI/GUI_Paint.c ****     YCurrent = Radius;
 1127              		.loc 1 372 0 is_stmt 1
 1128 0026 13B2     		sxth	r3, r2
 1129              	.LVL116:
 1130 0028 0593     		str	r3, [sp, #20]
 1131              	.LVL117:
 373:Display/GUI/GUI_Paint.c **** 
 374:Display/GUI/GUI_Paint.c ****     //Cumulative error,judge the next point of the logo
 375:Display/GUI/GUI_Paint.c ****     int16_t Esp = 3 - (Radius << 1 );
 1132              		.loc 1 375 0
ARM GAS  /tmp/ccLicZTP.s 			page 28


 1133 002a 5200     		lsls	r2, r2, #1
 1134              	.LVL118:
 1135 002c 92B2     		uxth	r2, r2
 1136 002e C2F10302 		rsb	r2, r2, #3
 1137 0032 13B2     		sxth	r3, r2
 1138              	.LVL119:
 1139 0034 0793     		str	r3, [sp, #28]
 1140              	.LVL120:
 376:Display/GUI/GUI_Paint.c **** 
 377:Display/GUI/GUI_Paint.c ****     int16_t sCountY;
 378:Display/GUI/GUI_Paint.c ****     if (Draw_Fill == DRAW_FILL_FULL) {
 1141              		.loc 1 378 0
 1142 0036 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 1143 003a 012B     		cmp	r3, #1
 1144 003c 00F08980 		beq	.L108
 371:Display/GUI/GUI_Paint.c ****     YCurrent = Radius;
 1145              		.loc 1 371 0
 1146 0040 4FF00008 		mov	r8, #0
 1147 0044 96E0     		b	.L100
 1148              	.LVL121:
 1149              	.L101:
 379:Display/GUI/GUI_Paint.c ****         while (XCurrent <= YCurrent ) { //Realistic circles
 380:Display/GUI/GUI_Paint.c ****             for (sCountY = XCurrent; sCountY <= YCurrent; sCountY ++ ) {
 381:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_
 1150              		.loc 1 381 0 discriminator 3
 1151 0046 BDF81860 		ldrh	r6, [sp, #24]
 1152 004a 06EB0A03 		add	r3, r6, r10
 1153 004e 98B2     		uxth	r0, r3
 1154 0050 ADB2     		uxth	r5, r5
 1155 0052 05EB0907 		add	r7, r5, r9
 1156 0056 BFB2     		uxth	r7, r7
 1157 0058 0124     		movs	r4, #1
 1158 005a 0094     		str	r4, [sp]
 1159 005c 2346     		mov	r3, r4
 1160 005e DDF80CB0 		ldr	fp, [sp, #12]
 1161 0062 5A46     		mov	r2, fp
 1162 0064 3946     		mov	r1, r7
 1163 0066 0490     		str	r0, [sp, #16]
 1164 0068 FFF7FEFF 		bl	Paint_DrawPoint
 1165              	.LVL122:
 382:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center - XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_
 1166              		.loc 1 382 0 discriminator 3
 1167 006c AAEB0608 		sub	r8, r10, r6
 1168 0070 1FFA88F8 		uxth	r8, r8
 1169 0074 0094     		str	r4, [sp]
 1170 0076 2346     		mov	r3, r4
 1171 0078 CDF80CB0 		str	fp, [sp, #12]
 1172 007c 5A46     		mov	r2, fp
 1173 007e 3946     		mov	r1, r7
 1174 0080 4046     		mov	r0, r8
 1175 0082 FFF7FEFF 		bl	Paint_DrawPoint
 1176              	.LVL123:
 383:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center - sCountY, Y_Center + XCurrent, Color, DOT_PIXEL_DFT, DOT_
 1177              		.loc 1 383 0 discriminator 3
 1178 0086 AAEB050B 		sub	fp, r10, r5
 1179 008a 1FFA8BFB 		uxth	fp, fp
 1180 008e 06EB0907 		add	r7, r6, r9
ARM GAS  /tmp/ccLicZTP.s 			page 29


 1181 0092 BFB2     		uxth	r7, r7
 1182 0094 0094     		str	r4, [sp]
 1183 0096 2346     		mov	r3, r4
 1184 0098 039A     		ldr	r2, [sp, #12]
 1185 009a 3946     		mov	r1, r7
 1186 009c 5846     		mov	r0, fp
 1187 009e FFF7FEFF 		bl	Paint_DrawPoint
 1188              	.LVL124:
 384:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center - sCountY, Y_Center - XCurrent, Color, DOT_PIXEL_DFT, DOT_
 1189              		.loc 1 384 0 discriminator 3
 1190 00a2 A9EB0606 		sub	r6, r9, r6
 1191 00a6 B6B2     		uxth	r6, r6
 1192 00a8 0094     		str	r4, [sp]
 1193 00aa 2346     		mov	r3, r4
 1194 00ac 039A     		ldr	r2, [sp, #12]
 1195 00ae 3146     		mov	r1, r6
 1196 00b0 5846     		mov	r0, fp
 1197 00b2 FFF7FEFF 		bl	Paint_DrawPoint
 1198              	.LVL125:
 385:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center - XCurrent, Y_Center - sCountY, Color, DOT_PIXEL_DFT, DOT_
 1199              		.loc 1 385 0 discriminator 3
 1200 00b6 A9EB050B 		sub	fp, r9, r5
 1201 00ba 1FFA8BFB 		uxth	fp, fp
 1202 00be 0094     		str	r4, [sp]
 1203 00c0 2346     		mov	r3, r4
 1204 00c2 039A     		ldr	r2, [sp, #12]
 1205 00c4 5946     		mov	r1, fp
 1206 00c6 4046     		mov	r0, r8
 1207 00c8 FFF7FEFF 		bl	Paint_DrawPoint
 1208              	.LVL126:
 386:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + XCurrent, Y_Center - sCountY, Color, DOT_PIXEL_DFT, DOT_
 1209              		.loc 1 386 0 discriminator 3
 1210 00cc 0094     		str	r4, [sp]
 1211 00ce 2346     		mov	r3, r4
 1212 00d0 039A     		ldr	r2, [sp, #12]
 1213 00d2 5946     		mov	r1, fp
 1214 00d4 0498     		ldr	r0, [sp, #16]
 1215 00d6 FFF7FEFF 		bl	Paint_DrawPoint
 1216              	.LVL127:
 387:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + sCountY, Y_Center - XCurrent, Color, DOT_PIXEL_DFT, DOT_
 1217              		.loc 1 387 0 discriminator 3
 1218 00da 05EB0A08 		add	r8, r5, r10
 1219 00de 1FFA88F8 		uxth	r8, r8
 1220 00e2 0094     		str	r4, [sp]
 1221 00e4 2346     		mov	r3, r4
 1222 00e6 DDF80CB0 		ldr	fp, [sp, #12]
 1223 00ea 5A46     		mov	r2, fp
 1224 00ec 3146     		mov	r1, r6
 1225 00ee 4046     		mov	r0, r8
 1226 00f0 FFF7FEFF 		bl	Paint_DrawPoint
 1227              	.LVL128:
 388:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + sCountY, Y_Center + XCurrent, Color, DOT_PIXEL_DFT, DOT_
 1228              		.loc 1 388 0 discriminator 3
 1229 00f4 0094     		str	r4, [sp]
 1230 00f6 2346     		mov	r3, r4
 1231 00f8 5A46     		mov	r2, fp
 1232 00fa 3946     		mov	r1, r7
ARM GAS  /tmp/ccLicZTP.s 			page 30


 1233 00fc 4046     		mov	r0, r8
 1234 00fe FFF7FEFF 		bl	Paint_DrawPoint
 1235              	.LVL129:
 380:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_
 1236              		.loc 1 380 0 discriminator 3
 1237 0102 2544     		add	r5, r5, r4
 1238              	.LVL130:
 1239 0104 2DB2     		sxth	r5, r5
 1240              	.LVL131:
 1241              	.L104:
 380:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_
 1242              		.loc 1 380 0 is_stmt 0 discriminator 1
 1243 0106 059B     		ldr	r3, [sp, #20]
 1244 0108 AB42     		cmp	r3, r5
 1245 010a 9CDA     		bge	.L101
 389:Display/GUI/GUI_Paint.c ****             }
 390:Display/GUI/GUI_Paint.c ****             if (Esp < 0 )
 1246              		.loc 1 390 0 is_stmt 1
 1247 010c 079B     		ldr	r3, [sp, #28]
 1248 010e 002B     		cmp	r3, #0
 1249 0110 16DB     		blt	.L111
 391:Display/GUI/GUI_Paint.c ****                 Esp += 4 * XCurrent + 6;
 392:Display/GUI/GUI_Paint.c ****             else {
 393:Display/GUI/GUI_Paint.c ****                 Esp += 10 + 4 * (XCurrent - YCurrent );
 1250              		.loc 1 393 0
 1251 0112 069B     		ldr	r3, [sp, #24]
 1252 0114 059A     		ldr	r2, [sp, #20]
 1253 0116 9B1A     		subs	r3, r3, r2
 1254 0118 0799     		ldr	r1, [sp, #28]
 1255 011a 01EB8303 		add	r3, r1, r3, lsl #2
 1256 011e 0A33     		adds	r3, r3, #10
 1257 0120 1BB2     		sxth	r3, r3
 1258 0122 0793     		str	r3, [sp, #28]
 1259              	.LVL132:
 394:Display/GUI/GUI_Paint.c ****                 YCurrent --;
 1260              		.loc 1 394 0
 1261 0124 531E     		subs	r3, r2, #1
 1262 0126 1BB2     		sxth	r3, r3
 1263 0128 0593     		str	r3, [sp, #20]
 1264              	.LVL133:
 1265              	.L103:
 395:Display/GUI/GUI_Paint.c ****             }
 396:Display/GUI/GUI_Paint.c ****             XCurrent ++;
 1266              		.loc 1 396 0
 1267 012a 069B     		ldr	r3, [sp, #24]
 1268 012c 0133     		adds	r3, r3, #1
 1269 012e 1BB2     		sxth	r3, r3
 1270 0130 0693     		str	r3, [sp, #24]
 1271              	.LVL134:
 1272              	.L99:
 379:Display/GUI/GUI_Paint.c ****             for (sCountY = XCurrent; sCountY <= YCurrent; sCountY ++ ) {
 1273              		.loc 1 379 0
 1274 0132 069B     		ldr	r3, [sp, #24]
 1275 0134 059A     		ldr	r2, [sp, #20]
 1276 0136 9342     		cmp	r3, r2
 1277 0138 00F38E80 		bgt	.L97
 380:Display/GUI/GUI_Paint.c ****                 Paint_DrawPoint(X_Center + XCurrent, Y_Center + sCountY, Color, DOT_PIXEL_DFT, DOT_
ARM GAS  /tmp/ccLicZTP.s 			page 31


 1278              		.loc 1 380 0
 1279 013c 069D     		ldr	r5, [sp, #24]
 1280 013e E2E7     		b	.L104
 1281              	.LVL135:
 1282              	.L111:
 391:Display/GUI/GUI_Paint.c ****             else {
 1283              		.loc 1 391 0
 1284 0140 069B     		ldr	r3, [sp, #24]
 1285 0142 9B00     		lsls	r3, r3, #2
 1286 0144 9BB2     		uxth	r3, r3
 1287 0146 079A     		ldr	r2, [sp, #28]
 1288 0148 1344     		add	r3, r3, r2
 1289 014a 0633     		adds	r3, r3, #6
 1290 014c 1BB2     		sxth	r3, r3
 1291 014e 0793     		str	r3, [sp, #28]
 1292              	.LVL136:
 1293 0150 EBE7     		b	.L103
 1294              	.LVL137:
 1295              	.L108:
 371:Display/GUI/GUI_Paint.c ****     YCurrent = Radius;
 1296              		.loc 1 371 0
 1297 0152 0023     		movs	r3, #0
 1298 0154 0693     		str	r3, [sp, #24]
 1299 0156 8246     		mov	r10, r0
 1300 0158 EBE7     		b	.L99
 1301              	.LVL138:
 1302              	.L112:
 397:Display/GUI/GUI_Paint.c ****         }
 398:Display/GUI/GUI_Paint.c ****     } else { //Draw a hollow circle
 399:Display/GUI/GUI_Paint.c ****         while (XCurrent <= YCurrent ) {
 400:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + XCurrent, Y_Center + YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 401:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - XCurrent, Y_Center + YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 402:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - YCurrent, Y_Center + XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 403:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - YCurrent, Y_Center - XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 404:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - XCurrent, Y_Center - YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 405:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + XCurrent, Y_Center - YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 406:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + YCurrent, Y_Center - XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 407:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + YCurrent, Y_Center + XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 408:Display/GUI/GUI_Paint.c **** 
 409:Display/GUI/GUI_Paint.c ****             if (Esp < 0 )
 410:Display/GUI/GUI_Paint.c ****                 Esp += 4 * XCurrent + 6;
 1303              		.loc 1 410 0
 1304 015a 4FEA8508 		lsl	r8, r5, #2
 1305              	.LVL139:
 1306 015e 1FFA88F8 		uxth	r8, r8
 1307 0162 9844     		add	r8, r8, r3
 1308 0164 08F10608 		add	r8, r8, #6
 1309 0168 0FFA88F3 		sxth	r3, r8
 1310 016c 0793     		str	r3, [sp, #28]
 1311              	.LVL140:
 1312              	.L106:
 411:Display/GUI/GUI_Paint.c ****             else {
 412:Display/GUI/GUI_Paint.c ****                 Esp += 10 + 4 * (XCurrent - YCurrent );
 413:Display/GUI/GUI_Paint.c ****                 YCurrent --;
 414:Display/GUI/GUI_Paint.c ****             }
 415:Display/GUI/GUI_Paint.c ****             XCurrent ++;
 1313              		.loc 1 415 0
ARM GAS  /tmp/ccLicZTP.s 			page 32


 1314 016e 0135     		adds	r5, r5, #1
 1315              	.LVL141:
 1316 0170 0FFA85F8 		sxth	r8, r5
 1317              	.LVL142:
 1318              	.L100:
 399:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + XCurrent, Y_Center + YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1319              		.loc 1 399 0
 1320 0174 059B     		ldr	r3, [sp, #20]
 1321 0176 9845     		cmp	r8, r3
 1322 0178 6EDC     		bgt	.L97
 400:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - XCurrent, Y_Center + YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1323              		.loc 1 400 0
 1324 017a 1FFA88F5 		uxth	r5, r8
 1325 017e 05EB0B03 		add	r3, r5, fp
 1326 0182 98B2     		uxth	r0, r3
 1327 0184 BDF81460 		ldrh	r6, [sp, #20]
 1328 0188 06EB0907 		add	r7, r6, r9
 1329 018c BFB2     		uxth	r7, r7
 1330 018e 0124     		movs	r4, #1
 1331 0190 0094     		str	r4, [sp]
 1332 0192 049B     		ldr	r3, [sp, #16]
 1333 0194 DDF80CA0 		ldr	r10, [sp, #12]
 1334 0198 5246     		mov	r2, r10
 1335 019a 3946     		mov	r1, r7
 1336 019c 0690     		str	r0, [sp, #24]
 1337 019e FFF7FEFF 		bl	Paint_DrawPoint
 1338              	.LVL143:
 401:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - YCurrent, Y_Center + XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1339              		.loc 1 401 0
 1340 01a2 ABEB0503 		sub	r3, fp, r5
 1341 01a6 9BB2     		uxth	r3, r3
 1342 01a8 1846     		mov	r0, r3
 1343 01aa 0094     		str	r4, [sp]
 1344 01ac 049B     		ldr	r3, [sp, #16]
 1345 01ae CDF80CA0 		str	r10, [sp, #12]
 1346 01b2 5246     		mov	r2, r10
 1347 01b4 3946     		mov	r1, r7
 1348 01b6 0890     		str	r0, [sp, #32]
 1349 01b8 FFF7FEFF 		bl	Paint_DrawPoint
 1350              	.LVL144:
 402:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - YCurrent, Y_Center - XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1351              		.loc 1 402 0
 1352 01bc ABEB060A 		sub	r10, fp, r6
 1353 01c0 1FFA8AFA 		uxth	r10, r10
 1354 01c4 05EB0903 		add	r3, r5, r9
 1355 01c8 99B2     		uxth	r1, r3
 1356 01ca 0094     		str	r4, [sp]
 1357 01cc 049B     		ldr	r3, [sp, #16]
 1358 01ce 039A     		ldr	r2, [sp, #12]
 1359 01d0 0991     		str	r1, [sp, #36]
 1360 01d2 5046     		mov	r0, r10
 1361 01d4 FFF7FEFF 		bl	Paint_DrawPoint
 1362              	.LVL145:
 403:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center - XCurrent, Y_Center - YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1363              		.loc 1 403 0
 1364 01d8 A9EB0507 		sub	r7, r9, r5
 1365 01dc BFB2     		uxth	r7, r7
ARM GAS  /tmp/ccLicZTP.s 			page 33


 1366 01de 0094     		str	r4, [sp]
 1367 01e0 049B     		ldr	r3, [sp, #16]
 1368 01e2 039A     		ldr	r2, [sp, #12]
 1369 01e4 3946     		mov	r1, r7
 1370 01e6 5046     		mov	r0, r10
 1371 01e8 FFF7FEFF 		bl	Paint_DrawPoint
 1372              	.LVL146:
 404:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + XCurrent, Y_Center - YCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1373              		.loc 1 404 0
 1374 01ec A9EB060A 		sub	r10, r9, r6
 1375 01f0 1FFA8AFA 		uxth	r10, r10
 1376 01f4 0094     		str	r4, [sp]
 1377 01f6 049B     		ldr	r3, [sp, #16]
 1378 01f8 039A     		ldr	r2, [sp, #12]
 1379 01fa 5146     		mov	r1, r10
 1380 01fc 0898     		ldr	r0, [sp, #32]
 1381 01fe FFF7FEFF 		bl	Paint_DrawPoint
 1382              	.LVL147:
 405:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + YCurrent, Y_Center - XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1383              		.loc 1 405 0
 1384 0202 0094     		str	r4, [sp]
 1385 0204 049B     		ldr	r3, [sp, #16]
 1386 0206 039A     		ldr	r2, [sp, #12]
 1387 0208 5146     		mov	r1, r10
 1388 020a 0698     		ldr	r0, [sp, #24]
 1389 020c FFF7FEFF 		bl	Paint_DrawPoint
 1390              	.LVL148:
 406:Display/GUI/GUI_Paint.c ****             Paint_DrawPoint(X_Center + YCurrent, Y_Center + XCurrent, Color, Dot_Pixel, DOT_STYLE_D
 1391              		.loc 1 406 0
 1392 0210 06EB0B0A 		add	r10, r6, fp
 1393 0214 1FFA8AFA 		uxth	r10, r10
 1394 0218 0094     		str	r4, [sp]
 1395 021a 049B     		ldr	r3, [sp, #16]
 1396 021c 039A     		ldr	r2, [sp, #12]
 1397 021e 3946     		mov	r1, r7
 1398 0220 5046     		mov	r0, r10
 1399 0222 FFF7FEFF 		bl	Paint_DrawPoint
 1400              	.LVL149:
 407:Display/GUI/GUI_Paint.c **** 
 1401              		.loc 1 407 0
 1402 0226 0094     		str	r4, [sp]
 1403 0228 049B     		ldr	r3, [sp, #16]
 1404 022a 039A     		ldr	r2, [sp, #12]
 1405 022c 0999     		ldr	r1, [sp, #36]
 1406 022e 5046     		mov	r0, r10
 1407 0230 FFF7FEFF 		bl	Paint_DrawPoint
 1408              	.LVL150:
 409:Display/GUI/GUI_Paint.c ****                 Esp += 4 * XCurrent + 6;
 1409              		.loc 1 409 0
 1410 0234 079B     		ldr	r3, [sp, #28]
 1411 0236 002B     		cmp	r3, #0
 1412 0238 8FDB     		blt	.L112
 412:Display/GUI/GUI_Paint.c ****                 YCurrent --;
 1413              		.loc 1 412 0
 1414 023a 059B     		ldr	r3, [sp, #20]
 1415 023c A8EB0308 		sub	r8, r8, r3
 1416              	.LVL151:
ARM GAS  /tmp/ccLicZTP.s 			page 34


 1417 0240 079B     		ldr	r3, [sp, #28]
 1418 0242 03EB8808 		add	r8, r3, r8, lsl #2
 1419 0246 08F10A08 		add	r8, r8, #10
 1420 024a 0FFA88F3 		sxth	r3, r8
 1421 024e 0793     		str	r3, [sp, #28]
 1422              	.LVL152:
 413:Display/GUI/GUI_Paint.c ****             }
 1423              		.loc 1 413 0
 1424 0250 013E     		subs	r6, r6, #1
 1425 0252 33B2     		sxth	r3, r6
 1426 0254 0593     		str	r3, [sp, #20]
 1427              	.LVL153:
 1428 0256 8AE7     		b	.L106
 1429              	.LVL154:
 1430              	.L97:
 416:Display/GUI/GUI_Paint.c ****         }
 417:Display/GUI/GUI_Paint.c ****     }
 418:Display/GUI/GUI_Paint.c **** }
 1431              		.loc 1 418 0
 1432 0258 0BB0     		add	sp, sp, #44
 1433              	.LCFI20:
 1434              		.cfi_def_cfa_offset 36
 1435              		@ sp needed
 1436 025a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1437              	.LVL155:
 1438              	.L114:
 1439 025e 00BF     		.align	2
 1440              	.L113:
 1441 0260 00000000 		.word	Paint
 1442              		.cfi_endproc
 1443              	.LFE133:
 1445              		.section	.text.Paint_DrawChar,"ax",%progbits
 1446              		.align	1
 1447              		.global	Paint_DrawChar
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	Paint_DrawChar:
 1454              	.LFB134:
 419:Display/GUI/GUI_Paint.c **** 
 420:Display/GUI/GUI_Paint.c **** /******************************************************************************
 421:Display/GUI/GUI_Paint.c **** function:	Show English characters
 422:Display/GUI/GUI_Paint.c **** parameter:
 423:Display/GUI/GUI_Paint.c ****     Xpoint           ：X coordinate
 424:Display/GUI/GUI_Paint.c ****     Ypoint           ：Y coordinate
 425:Display/GUI/GUI_Paint.c ****     Acsii_Char       ：To display the English characters
 426:Display/GUI/GUI_Paint.c ****     Font             ：A structure pointer that displays a character size
 427:Display/GUI/GUI_Paint.c ****     Color_Background : Select the background color of the English character
 428:Display/GUI/GUI_Paint.c ****     Color_Foreground : Select the foreground color of the English character
 429:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 430:Display/GUI/GUI_Paint.c **** void Paint_DrawChar(UWORD Xpoint, UWORD Ypoint, const char Acsii_Char,
 431:Display/GUI/GUI_Paint.c ****                     sFONT* Font, UWORD Color_Background, UWORD Color_Foreground)
 432:Display/GUI/GUI_Paint.c **** {
 1455              		.loc 1 432 0
 1456              		.cfi_startproc
 1457              		@ args = 8, pretend = 0, frame = 0
ARM GAS  /tmp/ccLicZTP.s 			page 35


 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              	.LVL156:
 1460 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1461              	.LCFI21:
 1462              		.cfi_def_cfa_offset 40
 1463              		.cfi_offset 3, -40
 1464              		.cfi_offset 4, -36
 1465              		.cfi_offset 5, -32
 1466              		.cfi_offset 6, -28
 1467              		.cfi_offset 7, -24
 1468              		.cfi_offset 8, -20
 1469              		.cfi_offset 9, -16
 1470              		.cfi_offset 10, -12
 1471              		.cfi_offset 11, -8
 1472              		.cfi_offset 14, -4
 1473 0004 BDF82880 		ldrh	r8, [sp, #40]
 1474 0008 BDF82CB0 		ldrh	fp, [sp, #44]
 433:Display/GUI/GUI_Paint.c ****     UWORD Page, Column;
 434:Display/GUI/GUI_Paint.c **** 
 435:Display/GUI/GUI_Paint.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 1475              		.loc 1 435 0
 1476 000c 304C     		ldr	r4, .L130
 1477 000e A488     		ldrh	r4, [r4, #4]
 1478 0010 8442     		cmp	r4, r0
 1479 0012 5AD3     		bcc	.L115
 1480              		.loc 1 435 0 is_stmt 0 discriminator 1
 1481 0014 2E4C     		ldr	r4, .L130
 1482 0016 E488     		ldrh	r4, [r4, #6]
 1483 0018 8C42     		cmp	r4, r1
 1484 001a 56D3     		bcc	.L115
 1485 001c 1F46     		mov	r7, r3
 1486 001e 8A46     		mov	r10, r1
 1487 0020 8146     		mov	r9, r0
 436:Display/GUI/GUI_Paint.c ****         Debug("Paint_DrawChar Input exceeds the normal display range\r\n");
 437:Display/GUI/GUI_Paint.c ****         return;
 438:Display/GUI/GUI_Paint.c ****     }
 439:Display/GUI/GUI_Paint.c **** 
 440:Display/GUI/GUI_Paint.c ****     uint32_t Char_Offset = (Acsii_Char - ' ') * Font->Height * (Font->Width / 8 + (Font->Width % 8 
 1488              		.loc 1 440 0 is_stmt 1
 1489 0022 203A     		subs	r2, r2, #32
 1490              	.LVL157:
 1491 0024 DD88     		ldrh	r5, [r3, #6]
 1492 0026 05FB02F2 		mul	r2, r5, r2
 1493 002a 9D88     		ldrh	r5, [r3, #4]
 1494 002c 15F00703 		ands	r3, r5, #7
 1495              	.LVL158:
 1496 0030 18BF     		it	ne
 1497 0032 0123     		movne	r3, #1
 1498 0034 03EBD503 		add	r3, r3, r5, lsr #3
 1499              	.LVL159:
 441:Display/GUI/GUI_Paint.c ****     const unsigned char *ptr = &Font->table[Char_Offset];
 1500              		.loc 1 441 0
 1501 0038 3D68     		ldr	r5, [r7]
 1502 003a 03FB0255 		mla	r5, r3, r2, r5
 1503              	.LVL160:
 442:Display/GUI/GUI_Paint.c **** 
 443:Display/GUI/GUI_Paint.c ****     for (Page = 0; Page < Font->Height; Page ++ ) {
ARM GAS  /tmp/ccLicZTP.s 			page 36


 1504              		.loc 1 443 0
 1505 003e 0026     		movs	r6, #0
 1506 0040 3EE0     		b	.L117
 1507              	.LVL161:
 1508              	.L129:
 444:Display/GUI/GUI_Paint.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 445:Display/GUI/GUI_Paint.c **** 
 446:Display/GUI/GUI_Paint.c ****             //To determine whether the font background color and screen background color is consist
 447:Display/GUI/GUI_Paint.c ****             if (FONT_BACKGROUND == Color_Background) { //this process is to speed up the scan
 448:Display/GUI/GUI_Paint.c ****                 if (*ptr & (0x80 >> (Column % 8)))
 1509              		.loc 1 448 0
 1510 0042 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1511 0044 04F00701 		and	r1, r4, #7
 1512 0048 8023     		movs	r3, #128
 1513 004a 0B41     		asrs	r3, r3, r1
 1514 004c 1A42     		tst	r2, r3
 1515 004e 12D0     		beq	.L119
 449:Display/GUI/GUI_Paint.c ****                     Paint_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 1516              		.loc 1 449 0
 1517 0050 06EB0A01 		add	r1, r6, r10
 1518 0054 04EB0900 		add	r0, r4, r9
 1519 0058 5A46     		mov	r2, fp
 1520 005a 89B2     		uxth	r1, r1
 1521 005c 80B2     		uxth	r0, r0
 1522 005e FFF7FEFF 		bl	Paint_SetPixel
 1523              	.LVL162:
 1524 0062 08E0     		b	.L119
 1525              	.L120:
 450:Display/GUI/GUI_Paint.c ****                     // Paint_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Foreground, DOT_PIXEL_
 451:Display/GUI/GUI_Paint.c ****             } else {
 452:Display/GUI/GUI_Paint.c ****                 if (*ptr & (0x80 >> (Column % 8))) {
 453:Display/GUI/GUI_Paint.c ****                     Paint_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 454:Display/GUI/GUI_Paint.c ****                     // Paint_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Foreground, DOT_PIXEL_
 455:Display/GUI/GUI_Paint.c ****                 } else {
 456:Display/GUI/GUI_Paint.c ****                     Paint_SetPixel(Xpoint + Column, Ypoint + Page, Color_Background);
 1526              		.loc 1 456 0
 1527 0064 06EB0A01 		add	r1, r6, r10
 1528 0068 04EB0900 		add	r0, r4, r9
 1529 006c 4246     		mov	r2, r8
 1530 006e 89B2     		uxth	r1, r1
 1531 0070 80B2     		uxth	r0, r0
 1532 0072 FFF7FEFF 		bl	Paint_SetPixel
 1533              	.LVL163:
 1534              	.L119:
 457:Display/GUI/GUI_Paint.c ****                     // Paint_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Background, DOT_PIXEL_
 458:Display/GUI/GUI_Paint.c ****                 }
 459:Display/GUI/GUI_Paint.c ****             }
 460:Display/GUI/GUI_Paint.c ****             //One pixel is 8 bits
 461:Display/GUI/GUI_Paint.c ****             if (Column % 8 == 7)
 1535              		.loc 1 461 0
 1536 0076 04F00703 		and	r3, r4, #7
 1537 007a 072B     		cmp	r3, #7
 1538 007c 18D0     		beq	.L127
 1539              	.L121:
 444:Display/GUI/GUI_Paint.c **** 
 1540              		.loc 1 444 0 discriminator 2
 1541 007e 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccLicZTP.s 			page 37


 1542              	.LVL164:
 1543 0080 A4B2     		uxth	r4, r4
 1544              	.LVL165:
 1545              	.L124:
 444:Display/GUI/GUI_Paint.c **** 
 1546              		.loc 1 444 0 is_stmt 0 discriminator 1
 1547 0082 BB88     		ldrh	r3, [r7, #4]
 1548 0084 A342     		cmp	r3, r4
 1549 0086 15D9     		bls	.L128
 447:Display/GUI/GUI_Paint.c ****                 if (*ptr & (0x80 >> (Column % 8)))
 1550              		.loc 1 447 0 is_stmt 1
 1551 0088 B8F1FF0F 		cmp	r8, #255
 1552 008c D9D0     		beq	.L129
 452:Display/GUI/GUI_Paint.c ****                     Paint_SetPixel(Xpoint + Column, Ypoint + Page, Color_Foreground);
 1553              		.loc 1 452 0
 1554 008e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1555 0090 04F00701 		and	r1, r4, #7
 1556 0094 8023     		movs	r3, #128
 1557 0096 0B41     		asrs	r3, r3, r1
 1558 0098 1A42     		tst	r2, r3
 1559 009a E3D0     		beq	.L120
 453:Display/GUI/GUI_Paint.c ****                     // Paint_DrawPoint(Xpoint + Column, Ypoint + Page, Color_Foreground, DOT_PIXEL_
 1560              		.loc 1 453 0
 1561 009c 06EB0A01 		add	r1, r6, r10
 1562 00a0 04EB0900 		add	r0, r4, r9
 1563 00a4 5A46     		mov	r2, fp
 1564 00a6 89B2     		uxth	r1, r1
 1565 00a8 80B2     		uxth	r0, r0
 1566 00aa FFF7FEFF 		bl	Paint_SetPixel
 1567              	.LVL166:
 1568 00ae E2E7     		b	.L119
 1569              	.L127:
 462:Display/GUI/GUI_Paint.c ****                 ptr++;
 1570              		.loc 1 462 0
 1571 00b0 0135     		adds	r5, r5, #1
 1572              	.LVL167:
 1573 00b2 E4E7     		b	.L121
 1574              	.L128:
 463:Display/GUI/GUI_Paint.c ****         }// Write a line
 464:Display/GUI/GUI_Paint.c ****         if (Font->Width % 8 != 0)
 1575              		.loc 1 464 0
 1576 00b4 13F0070F 		tst	r3, #7
 1577 00b8 00D0     		beq	.L123
 465:Display/GUI/GUI_Paint.c ****             ptr++;
 1578              		.loc 1 465 0
 1579 00ba 0135     		adds	r5, r5, #1
 1580              	.LVL168:
 1581              	.L123:
 443:Display/GUI/GUI_Paint.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 1582              		.loc 1 443 0 discriminator 2
 1583 00bc 0136     		adds	r6, r6, #1
 1584              	.LVL169:
 1585 00be B6B2     		uxth	r6, r6
 1586              	.LVL170:
 1587              	.L117:
 443:Display/GUI/GUI_Paint.c ****         for (Column = 0; Column < Font->Width; Column ++ ) {
 1588              		.loc 1 443 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccLicZTP.s 			page 38


 1589 00c0 FB88     		ldrh	r3, [r7, #6]
 1590 00c2 B342     		cmp	r3, r6
 1591 00c4 01D9     		bls	.L115
 444:Display/GUI/GUI_Paint.c **** 
 1592              		.loc 1 444 0 is_stmt 1
 1593 00c6 0024     		movs	r4, #0
 1594 00c8 DBE7     		b	.L124
 1595              	.LVL171:
 1596              	.L115:
 466:Display/GUI/GUI_Paint.c ****     }// Write all
 467:Display/GUI/GUI_Paint.c **** }
 1597              		.loc 1 467 0
 1598 00ca BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1599              	.LVL172:
 1600              	.L131:
 1601 00ce 00BF     		.align	2
 1602              	.L130:
 1603 00d0 00000000 		.word	Paint
 1604              		.cfi_endproc
 1605              	.LFE134:
 1607              		.section	.text.Paint_DrawString_EN,"ax",%progbits
 1608              		.align	1
 1609              		.global	Paint_DrawString_EN
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	Paint_DrawString_EN:
 1616              	.LFB135:
 468:Display/GUI/GUI_Paint.c **** 
 469:Display/GUI/GUI_Paint.c **** /******************************************************************************
 470:Display/GUI/GUI_Paint.c **** function:	Display the string
 471:Display/GUI/GUI_Paint.c **** parameter:
 472:Display/GUI/GUI_Paint.c ****     Xstart           ：X coordinate
 473:Display/GUI/GUI_Paint.c ****     Ystart           ：Y coordinate
 474:Display/GUI/GUI_Paint.c ****     pString          ：The first address of the English string to be displayed
 475:Display/GUI/GUI_Paint.c ****     Font             ：A structure pointer that displays a character size
 476:Display/GUI/GUI_Paint.c ****     Color_Background : Select the background color of the English character
 477:Display/GUI/GUI_Paint.c ****     Color_Foreground : Select the foreground color of the English character
 478:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 479:Display/GUI/GUI_Paint.c **** void Paint_DrawString_EN(UWORD Xstart, UWORD Ystart, const char * pString,
 480:Display/GUI/GUI_Paint.c ****                          sFONT* Font, UWORD Color_Background, UWORD Color_Foreground )
 481:Display/GUI/GUI_Paint.c **** {
 1617              		.loc 1 481 0
 1618              		.cfi_startproc
 1619              		@ args = 8, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              	.LVL173:
 1622 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1623              	.LCFI22:
 1624              		.cfi_def_cfa_offset 36
 1625              		.cfi_offset 4, -36
 1626              		.cfi_offset 5, -32
 1627              		.cfi_offset 6, -28
 1628              		.cfi_offset 7, -24
 1629              		.cfi_offset 8, -20
 1630              		.cfi_offset 9, -16
ARM GAS  /tmp/ccLicZTP.s 			page 39


 1631              		.cfi_offset 10, -12
 1632              		.cfi_offset 11, -8
 1633              		.cfi_offset 14, -4
 1634 0004 83B0     		sub	sp, sp, #12
 1635              	.LCFI23:
 1636              		.cfi_def_cfa_offset 48
 1637 0006 1D46     		mov	r5, r3
 1638 0008 BDF830A0 		ldrh	r10, [sp, #48]
 1639 000c BDF834B0 		ldrh	fp, [sp, #52]
 1640              	.LVL174:
 482:Display/GUI/GUI_Paint.c ****     UWORD Xpoint = Xstart;
 483:Display/GUI/GUI_Paint.c ****     UWORD Ypoint = Ystart;
 484:Display/GUI/GUI_Paint.c **** 
 485:Display/GUI/GUI_Paint.c ****     if (Xstart > Paint.Width || Ystart > Paint.Height) {
 1641              		.loc 1 485 0
 1642 0010 194B     		ldr	r3, .L140
 1643              	.LVL175:
 1644 0012 9B88     		ldrh	r3, [r3, #4]
 1645 0014 8342     		cmp	r3, r0
 1646 0016 2BD3     		bcc	.L132
 1647 0018 8046     		mov	r8, r0
 1648 001a 8946     		mov	r9, r1
 1649 001c 1646     		mov	r6, r2
 1650              		.loc 1 485 0 is_stmt 0 discriminator 1
 1651 001e 164B     		ldr	r3, .L140
 1652 0020 DB88     		ldrh	r3, [r3, #6]
 1653 0022 8B42     		cmp	r3, r1
 1654 0024 24D3     		bcc	.L132
 483:Display/GUI/GUI_Paint.c **** 
 1655              		.loc 1 483 0 is_stmt 1
 1656 0026 0F46     		mov	r7, r1
 482:Display/GUI/GUI_Paint.c ****     UWORD Xpoint = Xstart;
 1657              		.loc 1 482 0
 1658 0028 0446     		mov	r4, r0
 1659 002a 0CE0     		b	.L134
 1660              	.LVL176:
 1661              	.L136:
 486:Display/GUI/GUI_Paint.c ****         Debug("Paint_DrawString_EN Input exceeds the normal display range\r\n");
 487:Display/GUI/GUI_Paint.c ****         return;
 488:Display/GUI/GUI_Paint.c ****     }
 489:Display/GUI/GUI_Paint.c **** 
 490:Display/GUI/GUI_Paint.c ****     while (* pString != '\0') {
 491:Display/GUI/GUI_Paint.c ****         //if X direction filled , reposition to(Xstart,Ypoint),Ypoint is Y direction plus the Heigh
 492:Display/GUI/GUI_Paint.c ****         if ((Xpoint + Font->Width ) > Paint.Width ) {
 493:Display/GUI/GUI_Paint.c ****             Xpoint = Xstart;
 494:Display/GUI/GUI_Paint.c ****             Ypoint += Font->Height;
 495:Display/GUI/GUI_Paint.c ****         }
 496:Display/GUI/GUI_Paint.c **** 
 497:Display/GUI/GUI_Paint.c ****         // If the Y direction is full, reposition to(Xstart, Ystart)
 498:Display/GUI/GUI_Paint.c ****         if ((Ypoint  + Font->Height ) > Paint.Height ) {
 499:Display/GUI/GUI_Paint.c ****             Xpoint = Xstart;
 500:Display/GUI/GUI_Paint.c ****             Ypoint = Ystart;
 501:Display/GUI/GUI_Paint.c ****         }
 502:Display/GUI/GUI_Paint.c ****         Paint_DrawChar(Xpoint, Ypoint, * pString, Font, Color_Background, Color_Foreground);
 1662              		.loc 1 502 0
 1663 002c CDF804B0 		str	fp, [sp, #4]
 1664 0030 CDF800A0 		str	r10, [sp]
ARM GAS  /tmp/ccLicZTP.s 			page 40


 1665 0034 2B46     		mov	r3, r5
 1666 0036 3946     		mov	r1, r7
 1667 0038 2046     		mov	r0, r4
 1668 003a FFF7FEFF 		bl	Paint_DrawChar
 1669              	.LVL177:
 503:Display/GUI/GUI_Paint.c **** 
 504:Display/GUI/GUI_Paint.c ****         //The next character of the address
 505:Display/GUI/GUI_Paint.c ****         pString ++;
 1670              		.loc 1 505 0
 1671 003e 0136     		adds	r6, r6, #1
 1672              	.LVL178:
 506:Display/GUI/GUI_Paint.c **** 
 507:Display/GUI/GUI_Paint.c ****         //The next word of the abscissa increases the font of the broadband
 508:Display/GUI/GUI_Paint.c ****         Xpoint += Font->Width;
 1673              		.loc 1 508 0
 1674 0040 AB88     		ldrh	r3, [r5, #4]
 1675 0042 1C44     		add	r4, r4, r3
 1676              	.LVL179:
 1677 0044 A4B2     		uxth	r4, r4
 1678              	.LVL180:
 1679              	.L134:
 490:Display/GUI/GUI_Paint.c ****         //if X direction filled , reposition to(Xstart,Ypoint),Ypoint is Y direction plus the Heigh
 1680              		.loc 1 490 0
 1681 0046 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 1682 0048 92B1     		cbz	r2, .L132
 492:Display/GUI/GUI_Paint.c ****             Xpoint = Xstart;
 1683              		.loc 1 492 0
 1684 004a AB88     		ldrh	r3, [r5, #4]
 1685 004c 2344     		add	r3, r3, r4
 1686 004e 0A49     		ldr	r1, .L140
 1687 0050 8988     		ldrh	r1, [r1, #4]
 1688 0052 8B42     		cmp	r3, r1
 1689 0054 03DD     		ble	.L135
 1690              	.LVL181:
 494:Display/GUI/GUI_Paint.c ****         }
 1691              		.loc 1 494 0
 1692 0056 EB88     		ldrh	r3, [r5, #6]
 1693 0058 1F44     		add	r7, r7, r3
 1694              	.LVL182:
 1695 005a BFB2     		uxth	r7, r7
 1696              	.LVL183:
 493:Display/GUI/GUI_Paint.c ****             Ypoint += Font->Height;
 1697              		.loc 1 493 0
 1698 005c 4446     		mov	r4, r8
 1699              	.LVL184:
 1700              	.L135:
 498:Display/GUI/GUI_Paint.c ****             Xpoint = Xstart;
 1701              		.loc 1 498 0
 1702 005e EB88     		ldrh	r3, [r5, #6]
 1703 0060 3B44     		add	r3, r3, r7
 1704 0062 0549     		ldr	r1, .L140
 1705 0064 C988     		ldrh	r1, [r1, #6]
 1706 0066 8B42     		cmp	r3, r1
 1707 0068 E0DD     		ble	.L136
 500:Display/GUI/GUI_Paint.c ****         }
 1708              		.loc 1 500 0
 1709 006a 4F46     		mov	r7, r9
ARM GAS  /tmp/ccLicZTP.s 			page 41


 1710              	.LVL185:
 499:Display/GUI/GUI_Paint.c ****             Ypoint = Ystart;
 1711              		.loc 1 499 0
 1712 006c 4446     		mov	r4, r8
 1713              	.LVL186:
 1714 006e DDE7     		b	.L136
 1715              	.LVL187:
 1716              	.L132:
 509:Display/GUI/GUI_Paint.c ****     }
 510:Display/GUI/GUI_Paint.c **** }
 1717              		.loc 1 510 0
 1718 0070 03B0     		add	sp, sp, #12
 1719              	.LCFI24:
 1720              		.cfi_def_cfa_offset 36
 1721              		@ sp needed
 1722 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1723              	.LVL188:
 1724              	.L141:
 1725 0076 00BF     		.align	2
 1726              	.L140:
 1727 0078 00000000 		.word	Paint
 1728              		.cfi_endproc
 1729              	.LFE135:
 1731              		.section	.text.Paint_DrawString_CN,"ax",%progbits
 1732              		.align	1
 1733              		.global	Paint_DrawString_CN
 1734              		.syntax unified
 1735              		.thumb
 1736              		.thumb_func
 1737              		.fpu fpv4-sp-d16
 1739              	Paint_DrawString_CN:
 1740              	.LFB136:
 511:Display/GUI/GUI_Paint.c **** 
 512:Display/GUI/GUI_Paint.c **** 
 513:Display/GUI/GUI_Paint.c **** /******************************************************************************
 514:Display/GUI/GUI_Paint.c **** function:	Display the string
 515:Display/GUI/GUI_Paint.c **** parameter:
 516:Display/GUI/GUI_Paint.c ****     Xstart           ：X coordinate
 517:Display/GUI/GUI_Paint.c ****     Ystart           ：Y coordinate
 518:Display/GUI/GUI_Paint.c ****     pString          ：The first address of the Chinese string and English
 519:Display/GUI/GUI_Paint.c ****                         string to be displayed
 520:Display/GUI/GUI_Paint.c ****     Font             ：A structure pointer that displays a character size
 521:Display/GUI/GUI_Paint.c ****     Color_Background : Select the background color of the English character
 522:Display/GUI/GUI_Paint.c ****     Color_Foreground : Select the foreground color of the English character
 523:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 524:Display/GUI/GUI_Paint.c **** void Paint_DrawString_CN(UWORD Xstart, UWORD Ystart, const char * pString, cFONT* font, UWORD Color
 525:Display/GUI/GUI_Paint.c **** {
 1741              		.loc 1 525 0
 1742              		.cfi_startproc
 1743              		@ args = 8, pretend = 0, frame = 8
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745              	.LVL189:
 1746 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1747              	.LCFI25:
 1748              		.cfi_def_cfa_offset 36
 1749              		.cfi_offset 4, -36
 1750              		.cfi_offset 5, -32
ARM GAS  /tmp/ccLicZTP.s 			page 42


 1751              		.cfi_offset 6, -28
 1752              		.cfi_offset 7, -24
 1753              		.cfi_offset 8, -20
 1754              		.cfi_offset 9, -16
 1755              		.cfi_offset 10, -12
 1756              		.cfi_offset 11, -8
 1757              		.cfi_offset 14, -4
 1758 0004 83B0     		sub	sp, sp, #12
 1759              	.LCFI26:
 1760              		.cfi_def_cfa_offset 48
 1761 0006 8946     		mov	r9, r1
 1762 0008 9246     		mov	r10, r2
 1763 000a 1D46     		mov	r5, r3
 1764 000c BDF83070 		ldrh	r7, [sp, #48]
 1765 0010 BDF83430 		ldrh	r3, [sp, #52]
 1766              	.LVL190:
 1767 0014 0193     		str	r3, [sp, #4]
 1768              	.LVL191:
 526:Display/GUI/GUI_Paint.c ****     const char* p_text = pString;
 527:Display/GUI/GUI_Paint.c ****     int x = Xstart, y = Ystart;
 1769              		.loc 1 527 0
 1770 0016 8046     		mov	r8, r0
 1771              	.LVL192:
 528:Display/GUI/GUI_Paint.c ****     int i, j,Num;
 529:Display/GUI/GUI_Paint.c **** 
 530:Display/GUI/GUI_Paint.c ****     /* Send the string character by character on EPD */
 531:Display/GUI/GUI_Paint.c ****     while (*p_text != 0) {
 1772              		.loc 1 531 0
 1773 0018 66E0     		b	.L143
 1774              	.LVL193:
 1775              	.L178:
 532:Display/GUI/GUI_Paint.c ****         if(*p_text <= 0x7F) {  //ASCII < 126
 533:Display/GUI/GUI_Paint.c ****             for(Num = 0; Num < font->size; Num++) {
 534:Display/GUI/GUI_Paint.c ****                 if(*p_text== font->table[Num].index[0]) {
 535:Display/GUI/GUI_Paint.c ****                     const char* ptr = &font->table[Num].matrix[0];
 536:Display/GUI/GUI_Paint.c **** 
 537:Display/GUI/GUI_Paint.c ****                     for (j = 0; j < font->Height; j++) {
 538:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 539:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 540:Display/GUI/GUI_Paint.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 541:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 542:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 543:Display/GUI/GUI_Paint.c ****                                 }
 544:Display/GUI/GUI_Paint.c ****                             } else {
 545:Display/GUI/GUI_Paint.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 546:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 547:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 548:Display/GUI/GUI_Paint.c ****                                 } else {
 549:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Background);
 550:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Background, DOT_PIXEL_DF
 551:Display/GUI/GUI_Paint.c ****                                 }
 552:Display/GUI/GUI_Paint.c ****                             }
 553:Display/GUI/GUI_Paint.c ****                             if (i % 8 == 7) {
 554:Display/GUI/GUI_Paint.c ****                                 ptr++;
 555:Display/GUI/GUI_Paint.c ****                             }
 556:Display/GUI/GUI_Paint.c ****                         }
 557:Display/GUI/GUI_Paint.c ****                         if (font->Width % 8 != 0) {
ARM GAS  /tmp/ccLicZTP.s 			page 43


 558:Display/GUI/GUI_Paint.c ****                             ptr++;
 559:Display/GUI/GUI_Paint.c ****                         }
 560:Display/GUI/GUI_Paint.c ****                     }
 561:Display/GUI/GUI_Paint.c ****                     break;
 562:Display/GUI/GUI_Paint.c ****                 }
 563:Display/GUI/GUI_Paint.c ****             }
 564:Display/GUI/GUI_Paint.c ****             /* Point on the next character */
 565:Display/GUI/GUI_Paint.c ****             p_text += 1;
 566:Display/GUI/GUI_Paint.c ****             /* Decrement the column position by 16 */
 567:Display/GUI/GUI_Paint.c ****             x += font->ASCII_Width;
 568:Display/GUI/GUI_Paint.c ****         } else {        //Chinese
 569:Display/GUI/GUI_Paint.c ****             for(Num = 0; Num < font->size; Num++) {
 1776              		.loc 1 569 0
 1777 001a 0022     		movs	r2, #0
 1778 001c BFE0     		b	.L145
 1779              	.LVL194:
 1780              	.L176:
 1781              	.LBB7:
 540:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 1782              		.loc 1 540 0
 1783 001e 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1784 0020 6342     		rsbs	r3, r4, #0
 1785 0022 04F00702 		and	r2, r4, #7
 1786 0026 03F00703 		and	r3, r3, #7
 1787 002a 58BF     		it	pl
 1788 002c 5A42     		rsbpl	r2, r3, #0
 1789 002e 8023     		movs	r3, #128
 1790 0030 1341     		asrs	r3, r3, r2
 1791 0032 1942     		tst	r1, r3
 1792 0034 12D0     		beq	.L149
 541:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 1793              		.loc 1 541 0
 1794 0036 09EB0B01 		add	r1, r9, fp
 1795 003a 08EB0400 		add	r0, r8, r4
 1796 003e 019A     		ldr	r2, [sp, #4]
 1797 0040 89B2     		uxth	r1, r1
 1798 0042 80B2     		uxth	r0, r0
 1799 0044 FFF7FEFF 		bl	Paint_SetPixel
 1800              	.LVL195:
 1801 0048 08E0     		b	.L149
 1802              	.L150:
 549:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Background, DOT_PIXEL_DF
 1803              		.loc 1 549 0
 1804 004a 09EB0B01 		add	r1, r9, fp
 1805 004e 08EB0400 		add	r0, r8, r4
 1806 0052 3A46     		mov	r2, r7
 1807 0054 89B2     		uxth	r1, r1
 1808 0056 80B2     		uxth	r0, r0
 1809 0058 FFF7FEFF 		bl	Paint_SetPixel
 1810              	.LVL196:
 1811              	.L149:
 553:Display/GUI/GUI_Paint.c ****                                 ptr++;
 1812              		.loc 1 553 0
 1813 005c 6242     		rsbs	r2, r4, #0
 1814 005e 04F00703 		and	r3, r4, #7
 1815 0062 02F00702 		and	r2, r2, #7
 1816 0066 58BF     		it	pl
ARM GAS  /tmp/ccLicZTP.s 			page 44


 1817 0068 5342     		rsbpl	r3, r2, #0
 1818 006a 072B     		cmp	r3, #7
 1819 006c 1BD0     		beq	.L174
 1820              	.L151:
 538:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 1821              		.loc 1 538 0 discriminator 2
 1822 006e 0134     		adds	r4, r4, #1
 1823              	.LVL197:
 1824              	.L154:
 538:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 1825              		.loc 1 538 0 is_stmt 0 discriminator 1
 1826 0070 2B89     		ldrh	r3, [r5, #8]
 1827 0072 A342     		cmp	r3, r4
 1828 0074 19DD     		ble	.L175
 539:Display/GUI/GUI_Paint.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 1829              		.loc 1 539 0 is_stmt 1
 1830 0076 FF2F     		cmp	r7, #255
 1831 0078 D1D0     		beq	.L176
 545:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 1832              		.loc 1 545 0
 1833 007a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1834 007c 6342     		rsbs	r3, r4, #0
 1835 007e 04F00702 		and	r2, r4, #7
 1836 0082 03F00703 		and	r3, r3, #7
 1837 0086 58BF     		it	pl
 1838 0088 5A42     		rsbpl	r2, r3, #0
 1839 008a 8023     		movs	r3, #128
 1840 008c 1341     		asrs	r3, r3, r2
 1841 008e 1942     		tst	r1, r3
 1842 0090 DBD0     		beq	.L150
 546:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 1843              		.loc 1 546 0
 1844 0092 09EB0B01 		add	r1, r9, fp
 1845 0096 08EB0400 		add	r0, r8, r4
 1846 009a 019A     		ldr	r2, [sp, #4]
 1847 009c 89B2     		uxth	r1, r1
 1848 009e 80B2     		uxth	r0, r0
 1849 00a0 FFF7FEFF 		bl	Paint_SetPixel
 1850              	.LVL198:
 1851 00a4 DAE7     		b	.L149
 1852              	.L174:
 554:Display/GUI/GUI_Paint.c ****                             }
 1853              		.loc 1 554 0
 1854 00a6 0136     		adds	r6, r6, #1
 1855              	.LVL199:
 1856 00a8 E1E7     		b	.L151
 1857              	.L175:
 557:Display/GUI/GUI_Paint.c ****                             ptr++;
 1858              		.loc 1 557 0
 1859 00aa 13F0070F 		tst	r3, #7
 1860 00ae 00D0     		beq	.L153
 558:Display/GUI/GUI_Paint.c ****                         }
 1861              		.loc 1 558 0
 1862 00b0 0136     		adds	r6, r6, #1
 1863              	.LVL200:
 1864              	.L153:
 537:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
ARM GAS  /tmp/ccLicZTP.s 			page 45


 1865              		.loc 1 537 0 discriminator 2
 1866 00b2 0BF1010B 		add	fp, fp, #1
 1867              	.LVL201:
 1868              	.L147:
 537:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 1869              		.loc 1 537 0 is_stmt 0 discriminator 1
 1870 00b6 6B89     		ldrh	r3, [r5, #10]
 1871 00b8 5B45     		cmp	r3, fp
 1872 00ba 11DD     		ble	.L155
 538:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 1873              		.loc 1 538 0 is_stmt 1
 1874 00bc 0024     		movs	r4, #0
 1875 00be D7E7     		b	.L154
 1876              	.LVL202:
 1877              	.L146:
 1878              	.LBE7:
 533:Display/GUI/GUI_Paint.c ****                 if(*p_text== font->table[Num].index[0]) {
 1879              		.loc 1 533 0 discriminator 2
 1880 00c0 0132     		adds	r2, r2, #1
 1881              	.LVL203:
 1882              	.L144:
 533:Display/GUI/GUI_Paint.c ****                 if(*p_text== font->table[Num].index[0]) {
 1883              		.loc 1 533 0 is_stmt 0 discriminator 1
 1884 00c2 AB88     		ldrh	r3, [r5, #4]
 1885 00c4 9342     		cmp	r3, r2
 1886 00c6 0BDD     		ble	.L155
 534:Display/GUI/GUI_Paint.c ****                     const char* ptr = &font->table[Num].matrix[0];
 1887              		.loc 1 534 0 is_stmt 1
 1888 00c8 2968     		ldr	r1, [r5]
 1889 00ca A623     		movs	r3, #166
 1890 00cc 03FB02F3 		mul	r3, r3, r2
 1891 00d0 CE18     		adds	r6, r1, r3
 1892 00d2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1893 00d4 8342     		cmp	r3, r0
 1894 00d6 F3D1     		bne	.L146
 1895              	.LBB8:
 535:Display/GUI/GUI_Paint.c **** 
 1896              		.loc 1 535 0
 1897 00d8 0236     		adds	r6, r6, #2
 1898              	.LVL204:
 537:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 1899              		.loc 1 537 0
 1900 00da 4FF0000B 		mov	fp, #0
 1901 00de EAE7     		b	.L147
 1902              	.LVL205:
 1903              	.L155:
 1904              	.LBE8:
 565:Display/GUI/GUI_Paint.c ****             /* Decrement the column position by 16 */
 1905              		.loc 1 565 0
 1906 00e0 0AF1010A 		add	r10, r10, #1
 1907              	.LVL206:
 567:Display/GUI/GUI_Paint.c ****         } else {        //Chinese
 1908              		.loc 1 567 0
 1909 00e4 EB88     		ldrh	r3, [r5, #6]
 1910 00e6 9844     		add	r8, r8, r3
 1911              	.LVL207:
 1912              	.L143:
ARM GAS  /tmp/ccLicZTP.s 			page 46


 531:Display/GUI/GUI_Paint.c ****         if(*p_text <= 0x7F) {  //ASCII < 126
 1913              		.loc 1 531 0
 1914 00e8 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 1915 00ec 0028     		cmp	r0, #0
 1916 00ee 6FD0     		beq	.L177
 532:Display/GUI/GUI_Paint.c ****             for(Num = 0; Num < font->size; Num++) {
 1917              		.loc 1 532 0
 1918 00f0 10F0800F 		tst	r0, #128
 1919 00f4 91D1     		bne	.L178
 533:Display/GUI/GUI_Paint.c ****                 if(*p_text== font->table[Num].index[0]) {
 1920              		.loc 1 533 0
 1921 00f6 0022     		movs	r2, #0
 1922 00f8 E3E7     		b	.L144
 1923              	.LVL208:
 1924              	.L181:
 1925              	.LBB9:
 570:Display/GUI/GUI_Paint.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 571:Display/GUI/GUI_Paint.c ****                     const char* ptr = &font->table[Num].matrix[0];
 572:Display/GUI/GUI_Paint.c **** 
 573:Display/GUI/GUI_Paint.c ****                     for (j = 0; j < font->Height; j++) {
 574:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 575:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 576:Display/GUI/GUI_Paint.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 1926              		.loc 1 576 0
 1927 00fa 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1928 00fc 6342     		rsbs	r3, r4, #0
 1929 00fe 04F00702 		and	r2, r4, #7
 1930 0102 03F00703 		and	r3, r3, #7
 1931 0106 58BF     		it	pl
 1932 0108 5A42     		rsbpl	r2, r3, #0
 1933 010a 8023     		movs	r3, #128
 1934 010c 1341     		asrs	r3, r3, r2
 1935 010e 1942     		tst	r1, r3
 1936 0110 12D0     		beq	.L161
 577:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 1937              		.loc 1 577 0
 1938 0112 09EB0B01 		add	r1, r9, fp
 1939 0116 08EB0400 		add	r0, r8, r4
 1940 011a 019A     		ldr	r2, [sp, #4]
 1941 011c 89B2     		uxth	r1, r1
 1942 011e 80B2     		uxth	r0, r0
 1943 0120 FFF7FEFF 		bl	Paint_SetPixel
 1944              	.LVL209:
 1945 0124 08E0     		b	.L161
 1946              	.L162:
 578:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 579:Display/GUI/GUI_Paint.c ****                                 }
 580:Display/GUI/GUI_Paint.c ****                             } else {
 581:Display/GUI/GUI_Paint.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 582:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 583:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 584:Display/GUI/GUI_Paint.c ****                                 } else {
 585:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Background);
 1947              		.loc 1 585 0
 1948 0126 09EB0B01 		add	r1, r9, fp
 1949 012a 08EB0400 		add	r0, r8, r4
 1950 012e 3A46     		mov	r2, r7
ARM GAS  /tmp/ccLicZTP.s 			page 47


 1951 0130 89B2     		uxth	r1, r1
 1952 0132 80B2     		uxth	r0, r0
 1953 0134 FFF7FEFF 		bl	Paint_SetPixel
 1954              	.LVL210:
 1955              	.L161:
 586:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Background, DOT_PIXEL_DF
 587:Display/GUI/GUI_Paint.c ****                                 }
 588:Display/GUI/GUI_Paint.c ****                             }
 589:Display/GUI/GUI_Paint.c ****                             if (i % 8 == 7) {
 1956              		.loc 1 589 0
 1957 0138 6242     		rsbs	r2, r4, #0
 1958 013a 04F00703 		and	r3, r4, #7
 1959 013e 02F00702 		and	r2, r2, #7
 1960 0142 58BF     		it	pl
 1961 0144 5342     		rsbpl	r3, r2, #0
 1962 0146 072B     		cmp	r3, #7
 1963 0148 1BD0     		beq	.L179
 1964              	.L163:
 574:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 1965              		.loc 1 574 0 discriminator 2
 1966 014a 0134     		adds	r4, r4, #1
 1967              	.LVL211:
 1968              	.L166:
 574:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 1969              		.loc 1 574 0 is_stmt 0 discriminator 1
 1970 014c 2B89     		ldrh	r3, [r5, #8]
 1971 014e A342     		cmp	r3, r4
 1972 0150 19DD     		ble	.L180
 575:Display/GUI/GUI_Paint.c ****                                 if (*ptr & (0x80 >> (i % 8))) {
 1973              		.loc 1 575 0 is_stmt 1
 1974 0152 FF2F     		cmp	r7, #255
 1975 0154 D1D0     		beq	.L181
 581:Display/GUI/GUI_Paint.c ****                                     Paint_SetPixel(x + i, y + j, Color_Foreground);
 1976              		.loc 1 581 0
 1977 0156 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1978 0158 6342     		rsbs	r3, r4, #0
 1979 015a 04F00702 		and	r2, r4, #7
 1980 015e 03F00703 		and	r3, r3, #7
 1981 0162 58BF     		it	pl
 1982 0164 5A42     		rsbpl	r2, r3, #0
 1983 0166 8023     		movs	r3, #128
 1984 0168 1341     		asrs	r3, r3, r2
 1985 016a 1942     		tst	r1, r3
 1986 016c DBD0     		beq	.L162
 582:Display/GUI/GUI_Paint.c ****                                     // Paint_DrawPoint(x + i, y + j, Color_Foreground, DOT_PIXEL_DF
 1987              		.loc 1 582 0
 1988 016e 09EB0B01 		add	r1, r9, fp
 1989 0172 08EB0400 		add	r0, r8, r4
 1990 0176 019A     		ldr	r2, [sp, #4]
 1991 0178 89B2     		uxth	r1, r1
 1992 017a 80B2     		uxth	r0, r0
 1993 017c FFF7FEFF 		bl	Paint_SetPixel
 1994              	.LVL212:
 1995 0180 DAE7     		b	.L161
 1996              	.L179:
 590:Display/GUI/GUI_Paint.c ****                                 ptr++;
 1997              		.loc 1 590 0
ARM GAS  /tmp/ccLicZTP.s 			page 48


 1998 0182 0136     		adds	r6, r6, #1
 1999              	.LVL213:
 2000 0184 E1E7     		b	.L163
 2001              	.L180:
 591:Display/GUI/GUI_Paint.c ****                             }
 592:Display/GUI/GUI_Paint.c ****                         }
 593:Display/GUI/GUI_Paint.c ****                         if (font->Width % 8 != 0) {
 2002              		.loc 1 593 0
 2003 0186 13F0070F 		tst	r3, #7
 2004 018a 00D0     		beq	.L165
 594:Display/GUI/GUI_Paint.c ****                             ptr++;
 2005              		.loc 1 594 0
 2006 018c 0136     		adds	r6, r6, #1
 2007              	.LVL214:
 2008              	.L165:
 573:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 2009              		.loc 1 573 0 discriminator 2
 2010 018e 0BF1010B 		add	fp, fp, #1
 2011              	.LVL215:
 2012              	.L159:
 573:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 2013              		.loc 1 573 0 is_stmt 0 discriminator 1
 2014 0192 6B89     		ldrh	r3, [r5, #10]
 2015 0194 5B45     		cmp	r3, fp
 2016 0196 16DD     		ble	.L167
 574:Display/GUI/GUI_Paint.c ****                             if (FONT_BACKGROUND == Color_Background) { //this process is to speed u
 2017              		.loc 1 574 0 is_stmt 1
 2018 0198 0024     		movs	r4, #0
 2019 019a D7E7     		b	.L166
 2020              	.LVL216:
 2021              	.L158:
 2022              	.LBE9:
 569:Display/GUI/GUI_Paint.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 2023              		.loc 1 569 0 discriminator 2
 2024 019c 0132     		adds	r2, r2, #1
 2025              	.LVL217:
 2026              	.L145:
 569:Display/GUI/GUI_Paint.c ****                 if((*p_text== font->table[Num].index[0]) && (*(p_text+1) == font->table[Num].index[
 2027              		.loc 1 569 0 is_stmt 0 discriminator 1
 2028 019e AB88     		ldrh	r3, [r5, #4]
 2029 01a0 9342     		cmp	r3, r2
 2030 01a2 10DD     		ble	.L167
 570:Display/GUI/GUI_Paint.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2031              		.loc 1 570 0 is_stmt 1
 2032 01a4 2968     		ldr	r1, [r5]
 2033 01a6 A623     		movs	r3, #166
 2034 01a8 03FB02F3 		mul	r3, r3, r2
 2035 01ac CE18     		adds	r6, r1, r3
 2036 01ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2037 01b0 8342     		cmp	r3, r0
 2038 01b2 F3D1     		bne	.L158
 570:Display/GUI/GUI_Paint.c ****                     const char* ptr = &font->table[Num].matrix[0];
 2039              		.loc 1 570 0 is_stmt 0 discriminator 1
 2040 01b4 9AF80110 		ldrb	r1, [r10, #1]	@ zero_extendqisi2
 2041 01b8 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 2042 01ba 9942     		cmp	r1, r3
 2043 01bc EED1     		bne	.L158
ARM GAS  /tmp/ccLicZTP.s 			page 49


 2044              	.LBB10:
 571:Display/GUI/GUI_Paint.c **** 
 2045              		.loc 1 571 0 is_stmt 1
 2046 01be 0236     		adds	r6, r6, #2
 2047              	.LVL218:
 573:Display/GUI/GUI_Paint.c ****                         for (i = 0; i < font->Width; i++) {
 2048              		.loc 1 573 0
 2049 01c0 4FF0000B 		mov	fp, #0
 2050 01c4 E5E7     		b	.L159
 2051              	.LVL219:
 2052              	.L167:
 2053              	.LBE10:
 595:Display/GUI/GUI_Paint.c ****                         }
 596:Display/GUI/GUI_Paint.c ****                     }
 597:Display/GUI/GUI_Paint.c ****                     break;
 598:Display/GUI/GUI_Paint.c ****                 }
 599:Display/GUI/GUI_Paint.c ****             }
 600:Display/GUI/GUI_Paint.c ****             /* Point on the next character */
 601:Display/GUI/GUI_Paint.c ****             p_text += 2;
 2054              		.loc 1 601 0
 2055 01c6 0AF1020A 		add	r10, r10, #2
 2056              	.LVL220:
 602:Display/GUI/GUI_Paint.c ****             /* Decrement the column position by 16 */
 603:Display/GUI/GUI_Paint.c ****             x += font->Width;
 2057              		.loc 1 603 0
 2058 01ca 2B89     		ldrh	r3, [r5, #8]
 2059 01cc 9844     		add	r8, r8, r3
 2060              	.LVL221:
 2061 01ce 8BE7     		b	.L143
 2062              	.L177:
 604:Display/GUI/GUI_Paint.c ****         }
 605:Display/GUI/GUI_Paint.c ****     }
 606:Display/GUI/GUI_Paint.c **** }
 2063              		.loc 1 606 0
 2064 01d0 03B0     		add	sp, sp, #12
 2065              	.LCFI27:
 2066              		.cfi_def_cfa_offset 36
 2067              		@ sp needed
 2068 01d2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2069              		.cfi_endproc
 2070              	.LFE136:
 2072              		.section	.text.Paint_DrawNum,"ax",%progbits
 2073              		.align	1
 2074              		.global	Paint_DrawNum
 2075              		.syntax unified
 2076              		.thumb
 2077              		.thumb_func
 2078              		.fpu fpv4-sp-d16
 2080              	Paint_DrawNum:
 2081              	.LFB137:
 607:Display/GUI/GUI_Paint.c **** 
 608:Display/GUI/GUI_Paint.c **** /******************************************************************************
 609:Display/GUI/GUI_Paint.c **** function:	Display nummber
 610:Display/GUI/GUI_Paint.c **** parameter:
 611:Display/GUI/GUI_Paint.c ****     Xstart           ：X coordinate
 612:Display/GUI/GUI_Paint.c ****     Ystart           : Y coordinate
 613:Display/GUI/GUI_Paint.c ****     Nummber          : The number displayed
ARM GAS  /tmp/ccLicZTP.s 			page 50


 614:Display/GUI/GUI_Paint.c ****     Font             ：A structure pointer that displays a character size
 615:Display/GUI/GUI_Paint.c ****     Color_Background : Select the background color of the English character
 616:Display/GUI/GUI_Paint.c ****     Color_Foreground : Select the foreground color of the English character
 617:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 618:Display/GUI/GUI_Paint.c **** #define  ARRAY_LEN 255
 619:Display/GUI/GUI_Paint.c **** void Paint_DrawNum(UWORD Xpoint, UWORD Ypoint, int32_t Nummber,
 620:Display/GUI/GUI_Paint.c ****                    sFONT* Font, UWORD Color_Background, UWORD Color_Foreground )
 621:Display/GUI/GUI_Paint.c **** {
 2082              		.loc 1 621 0
 2083              		.cfi_startproc
 2084              		@ args = 8, pretend = 0, frame = 512
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
 2086              	.LVL222:
 2087 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2088              	.LCFI28:
 2089              		.cfi_def_cfa_offset 24
 2090              		.cfi_offset 4, -24
 2091              		.cfi_offset 5, -20
 2092              		.cfi_offset 6, -16
 2093              		.cfi_offset 7, -12
 2094              		.cfi_offset 8, -8
 2095              		.cfi_offset 14, -4
 2096 0004 ADF5027D 		sub	sp, sp, #520
 2097              	.LCFI29:
 2098              		.cfi_def_cfa_offset 544
 2099 0008 0446     		mov	r4, r0
 2100 000a 0D46     		mov	r5, r1
 2101 000c 1746     		mov	r7, r2
 2102 000e 1E46     		mov	r6, r3
 2103              	.LVL223:
 622:Display/GUI/GUI_Paint.c **** 
 623:Display/GUI/GUI_Paint.c ****     int16_t Num_Bit = 0, Str_Bit = 0;
 624:Display/GUI/GUI_Paint.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 2104              		.loc 1 624 0
 2105 0010 4FF0FF08 		mov	r8, #255
 2106 0014 4246     		mov	r2, r8
 2107              	.LVL224:
 2108 0016 0021     		movs	r1, #0
 2109              	.LVL225:
 2110 0018 42A8     		add	r0, sp, #264
 2111              	.LVL226:
 2112 001a FFF7FEFF 		bl	memset
 2113              	.LVL227:
 2114 001e 4246     		mov	r2, r8
 2115 0020 0021     		movs	r1, #0
 2116 0022 02A8     		add	r0, sp, #8
 2117 0024 FFF7FEFF 		bl	memset
 2118              	.LVL228:
 625:Display/GUI/GUI_Paint.c ****     uint8_t *pStr = Str_Array;
 626:Display/GUI/GUI_Paint.c **** 
 627:Display/GUI/GUI_Paint.c ****     if (Xpoint > Paint.Width || Ypoint > Paint.Height) {
 2119              		.loc 1 627 0
 2120 0028 1C4B     		ldr	r3, .L190
 2121 002a 9B88     		ldrh	r3, [r3, #4]
 2122 002c A342     		cmp	r3, r4
 2123 002e 31D3     		bcc	.L182
 2124              		.loc 1 627 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccLicZTP.s 			page 51


 2125 0030 1A4B     		ldr	r3, .L190
 2126 0032 DB88     		ldrh	r3, [r3, #6]
 2127 0034 AB42     		cmp	r3, r5
 2128 0036 2DD3     		bcc	.L182
 623:Display/GUI/GUI_Paint.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 2129              		.loc 1 623 0 is_stmt 1
 2130 0038 0022     		movs	r2, #0
 2131 003a 10E0     		b	.L184
 2132              	.LVL229:
 2133              	.L185:
 628:Display/GUI/GUI_Paint.c ****         Debug("Paint_DisNum Input exceeds the normal display range\r\n");
 629:Display/GUI/GUI_Paint.c ****         return;
 630:Display/GUI/GUI_Paint.c ****     }
 631:Display/GUI/GUI_Paint.c **** 
 632:Display/GUI/GUI_Paint.c ****     //Converts a number to a string
 633:Display/GUI/GUI_Paint.c ****     while (Nummber) {
 634:Display/GUI/GUI_Paint.c ****         Num_Array[Num_Bit] = Nummber % 10 + '0';
 2134              		.loc 1 634 0
 2135 003c 1849     		ldr	r1, .L190+4
 2136 003e 81FB0731 		smull	r3, r1, r1, r7
 2137 0042 FB17     		asrs	r3, r7, #31
 2138 0044 C3EBA103 		rsb	r3, r3, r1, asr #2
 2139 0048 1846     		mov	r0, r3
 2140 004a 03EB8303 		add	r3, r3, r3, lsl #2
 2141 004e 5900     		lsls	r1, r3, #1
 2142 0050 7B1A     		subs	r3, r7, r1
 2143 0052 3033     		adds	r3, r3, #48
 2144 0054 02A9     		add	r1, sp, #8
 2145 0056 8B54     		strb	r3, [r1, r2]
 635:Display/GUI/GUI_Paint.c ****         Num_Bit++;
 2146              		.loc 1 635 0
 2147 0058 0132     		adds	r2, r2, #1
 2148              	.LVL230:
 2149 005a 12B2     		sxth	r2, r2
 2150              	.LVL231:
 636:Display/GUI/GUI_Paint.c ****         Nummber /= 10;
 2151              		.loc 1 636 0
 2152 005c 0746     		mov	r7, r0
 2153              	.LVL232:
 2154              	.L184:
 633:Display/GUI/GUI_Paint.c ****         Num_Array[Num_Bit] = Nummber % 10 + '0';
 2155              		.loc 1 633 0
 2156 005e 002F     		cmp	r7, #0
 2157 0060 ECD1     		bne	.L185
 623:Display/GUI/GUI_Paint.c ****     uint8_t Str_Array[ARRAY_LEN] = {0}, Num_Array[ARRAY_LEN] = {0};
 2158              		.loc 1 623 0
 2159 0062 0023     		movs	r3, #0
 2160 0064 08E0     		b	.L186
 2161              	.LVL233:
 2162              	.L187:
 637:Display/GUI/GUI_Paint.c ****     }
 638:Display/GUI/GUI_Paint.c **** 
 639:Display/GUI/GUI_Paint.c ****     //The string is inverted
 640:Display/GUI/GUI_Paint.c ****     while (Num_Bit > 0) {
 641:Display/GUI/GUI_Paint.c ****         Str_Array[Str_Bit] = Num_Array[Num_Bit - 1];
 2163              		.loc 1 641 0
 2164 0066 511E     		subs	r1, r2, #1
ARM GAS  /tmp/ccLicZTP.s 			page 52


 2165 0068 02A8     		add	r0, sp, #8
 2166 006a 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
 2167 006c 42A9     		add	r1, sp, #264
 2168              	.LVL234:
 2169 006e C854     		strb	r0, [r1, r3]
 642:Display/GUI/GUI_Paint.c ****         Str_Bit ++;
 2170              		.loc 1 642 0
 2171 0070 0133     		adds	r3, r3, #1
 2172              	.LVL235:
 2173 0072 1BB2     		sxth	r3, r3
 2174              	.LVL236:
 643:Display/GUI/GUI_Paint.c ****         Num_Bit --;
 2175              		.loc 1 643 0
 2176 0074 013A     		subs	r2, r2, #1
 2177              	.LVL237:
 2178 0076 12B2     		sxth	r2, r2
 2179              	.LVL238:
 2180              	.L186:
 640:Display/GUI/GUI_Paint.c ****         Str_Array[Str_Bit] = Num_Array[Num_Bit - 1];
 2181              		.loc 1 640 0
 2182 0078 002A     		cmp	r2, #0
 2183 007a F4DC     		bgt	.L187
 644:Display/GUI/GUI_Paint.c ****     }
 645:Display/GUI/GUI_Paint.c **** 
 646:Display/GUI/GUI_Paint.c ****     //show
 647:Display/GUI/GUI_Paint.c ****     Paint_DrawString_EN(Xpoint, Ypoint, (const char*)pStr, Font, Color_Background, Color_Foreground
 2184              		.loc 1 647 0
 2185 007c BDF82432 		ldrh	r3, [sp, #548]
 2186              	.LVL239:
 2187 0080 0193     		str	r3, [sp, #4]
 2188 0082 BDF82032 		ldrh	r3, [sp, #544]
 2189 0086 0093     		str	r3, [sp]
 2190 0088 3346     		mov	r3, r6
 2191 008a 42AA     		add	r2, sp, #264
 2192              	.LVL240:
 2193 008c 2946     		mov	r1, r5
 2194 008e 2046     		mov	r0, r4
 2195 0090 FFF7FEFF 		bl	Paint_DrawString_EN
 2196              	.LVL241:
 2197              	.L182:
 648:Display/GUI/GUI_Paint.c **** }
 2198              		.loc 1 648 0
 2199 0094 0DF5027D 		add	sp, sp, #520
 2200              	.LCFI30:
 2201              		.cfi_def_cfa_offset 24
 2202              		@ sp needed
 2203 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2204              	.LVL242:
 2205              	.L191:
 2206              		.align	2
 2207              	.L190:
 2208 009c 00000000 		.word	Paint
 2209 00a0 67666666 		.word	1717986919
 2210              		.cfi_endproc
 2211              	.LFE137:
 2213              		.section	.text.Paint_DrawTime,"ax",%progbits
 2214              		.align	1
ARM GAS  /tmp/ccLicZTP.s 			page 53


 2215              		.global	Paint_DrawTime
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2219              		.fpu fpv4-sp-d16
 2221              	Paint_DrawTime:
 2222              	.LFB138:
 649:Display/GUI/GUI_Paint.c **** 
 650:Display/GUI/GUI_Paint.c **** /******************************************************************************
 651:Display/GUI/GUI_Paint.c **** function:	Display time
 652:Display/GUI/GUI_Paint.c **** parameter:
 653:Display/GUI/GUI_Paint.c ****     Xstart           ：X coordinate
 654:Display/GUI/GUI_Paint.c ****     Ystart           : Y coordinate
 655:Display/GUI/GUI_Paint.c ****     pTime            : Time-related structures
 656:Display/GUI/GUI_Paint.c ****     Font             ：A structure pointer that displays a character size
 657:Display/GUI/GUI_Paint.c ****     Color            : Select the background color of the English character
 658:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 659:Display/GUI/GUI_Paint.c **** void Paint_DrawTime(UWORD Xstart, UWORD Ystart, PAINT_TIME *pTime, sFONT* Font,
 660:Display/GUI/GUI_Paint.c ****                     UWORD Color_Background, UWORD Color_Foreground)
 661:Display/GUI/GUI_Paint.c **** {
 2223              		.loc 1 661 0
 2224              		.cfi_startproc
 2225              		@ args = 8, pretend = 0, frame = 32
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              	.LVL243:
 2228 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2229              	.LCFI31:
 2230              		.cfi_def_cfa_offset 36
 2231              		.cfi_offset 4, -36
 2232              		.cfi_offset 5, -32
 2233              		.cfi_offset 6, -28
 2234              		.cfi_offset 7, -24
 2235              		.cfi_offset 8, -20
 2236              		.cfi_offset 9, -16
 2237              		.cfi_offset 10, -12
 2238              		.cfi_offset 11, -8
 2239              		.cfi_offset 14, -4
 2240 0004 8BB0     		sub	sp, sp, #44
 2241              	.LCFI32:
 2242              		.cfi_def_cfa_offset 80
 2243 0006 0646     		mov	r6, r0
 2244 0008 8B46     		mov	fp, r1
 2245 000a 9246     		mov	r10, r2
 2246 000c BDF85070 		ldrh	r7, [sp, #80]
 2247 0010 BDF85480 		ldrh	r8, [sp, #84]
 662:Display/GUI/GUI_Paint.c ****     uint8_t value[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
 2248              		.loc 1 662 0
 2249 0014 5F4A     		ldr	r2, .L194
 2250              	.LVL244:
 2251 0016 07AC     		add	r4, sp, #28
 2252 0018 07CA     		ldm	r2, {r0, r1, r2}
 2253              	.LVL245:
 2254 001a 03C4     		stmia	r4!, {r0, r1}
 2255 001c 2280     		strh	r2, [r4]	@ movhi
 663:Display/GUI/GUI_Paint.c **** 
 664:Display/GUI/GUI_Paint.c ****     UWORD Dx = Font->Width;
 2256              		.loc 1 664 0
ARM GAS  /tmp/ccLicZTP.s 			page 54


 2257 001e 0393     		str	r3, [sp, #12]
 2258 0020 9D88     		ldrh	r5, [r3, #4]
 2259              	.LVL246:
 665:Display/GUI/GUI_Paint.c **** 
 666:Display/GUI/GUI_Paint.c ****     //Write data into the cache
 667:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart                           , Ystart, value[pTime->Hour / 10], Font, Color_
 2260              		.loc 1 667 0
 2261 0022 9AF80420 		ldrb	r2, [r10, #4]	@ zero_extendqisi2
 2262 0026 5C4C     		ldr	r4, .L194+4
 2263 0028 A4FB0212 		umull	r1, r2, r4, r2
 2264 002c 0AA9     		add	r1, sp, #40
 2265 002e 01EBD202 		add	r2, r1, r2, lsr #3
 2266 0032 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 2267 0036 CDF80480 		str	r8, [sp, #4]
 2268 003a 0097     		str	r7, [sp]
 2269 003c 5946     		mov	r1, fp
 2270 003e 3046     		mov	r0, r6
 2271 0040 FFF7FEFF 		bl	Paint_DrawChar
 2272              	.LVL247:
 668:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx                      , Ystart, value[pTime->Hour % 10], Font, Color_
 2273              		.loc 1 668 0
 2274 0044 05EB0609 		add	r9, r5, r6
 2275 0048 1FFA89F9 		uxth	r9, r9
 2276 004c 9AF80420 		ldrb	r2, [r10, #4]	@ zero_extendqisi2
 2277 0050 A4FB0213 		umull	r1, r3, r4, r2
 2278 0054 DB08     		lsrs	r3, r3, #3
 2279 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2280 005a 5900     		lsls	r1, r3, #1
 2281 005c 521A     		subs	r2, r2, r1
 2282 005e 0AAB     		add	r3, sp, #40
 2283 0060 53FA82F2 		uxtab	r2, r3, r2
 2284 0064 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 2285 0068 CDF80480 		str	r8, [sp, #4]
 2286 006c 0097     		str	r7, [sp]
 2287 006e 039B     		ldr	r3, [sp, #12]
 2288 0070 CDF810B0 		str	fp, [sp, #16]
 2289 0074 5946     		mov	r1, fp
 2290 0076 4846     		mov	r0, r9
 2291 0078 FFF7FEFF 		bl	Paint_DrawChar
 2292              	.LVL248:
 669:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx  + Dx / 4 + Dx / 2   , Ystart, ':'                    , Font, Color_
 2293              		.loc 1 669 0
 2294 007c AB08     		lsrs	r3, r5, #2
 2295 007e 0593     		str	r3, [sp, #20]
 2296 0080 09EB0300 		add	r0, r9, r3
 2297 0084 4FEA550B 		lsr	fp, r5, #1
 2298 0088 1BFA80F0 		uxtah	r0, fp, r0
 2299 008c CDF80480 		str	r8, [sp, #4]
 2300 0090 0097     		str	r7, [sp]
 2301 0092 039B     		ldr	r3, [sp, #12]
 2302 0094 3A22     		movs	r2, #58
 2303 0096 DDF81090 		ldr	r9, [sp, #16]
 2304 009a 4946     		mov	r1, r9
 2305 009c 80B2     		uxth	r0, r0
 2306 009e FFF7FEFF 		bl	Paint_DrawChar
 2307              	.LVL249:
 670:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx * 2 + Dx / 2         , Ystart, value[pTime->Min / 10] , Font, Color_
ARM GAS  /tmp/ccLicZTP.s 			page 55


 2308              		.loc 1 670 0
 2309 00a2 06EB4500 		add	r0, r6, r5, lsl #1
 2310 00a6 9AF80530 		ldrb	r3, [r10, #5]	@ zero_extendqisi2
 2311 00aa A4FB03C3 		umull	ip, r3, r4, r3
 2312 00ae 0DF1280C 		add	ip, sp, #40
 2313 00b2 0CEBD303 		add	r3, ip, r3, lsr #3
 2314 00b6 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 2315 00ba 1BFA80F0 		uxtah	r0, fp, r0
 2316 00be CDF80480 		str	r8, [sp, #4]
 2317 00c2 0097     		str	r7, [sp]
 2318 00c4 039B     		ldr	r3, [sp, #12]
 2319 00c6 CDF81090 		str	r9, [sp, #16]
 2320 00ca 4946     		mov	r1, r9
 2321 00cc 80B2     		uxth	r0, r0
 2322 00ce FFF7FEFF 		bl	Paint_DrawChar
 2323              	.LVL250:
 671:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx * 3 + Dx / 2         , Ystart, value[pTime->Min % 10] , Font, Color_
 2324              		.loc 1 671 0
 2325 00d2 05EB4509 		add	r9, r5, r5, lsl #1
 2326 00d6 06EB0900 		add	r0, r6, r9
 2327 00da 9AF80520 		ldrb	r2, [r10, #5]	@ zero_extendqisi2
 2328 00de A4FB02C3 		umull	ip, r3, r4, r2
 2329 00e2 DB08     		lsrs	r3, r3, #3
 2330 00e4 03EB8303 		add	r3, r3, r3, lsl #2
 2331 00e8 5900     		lsls	r1, r3, #1
 2332 00ea 521A     		subs	r2, r2, r1
 2333 00ec 0DF1280C 		add	ip, sp, #40
 2334 00f0 5CFA82F2 		uxtab	r2, ip, r2
 2335 00f4 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 2336 00f8 1BFA80F0 		uxtah	r0, fp, r0
 2337 00fc CDF80480 		str	r8, [sp, #4]
 2338 0100 0097     		str	r7, [sp]
 2339 0102 039B     		ldr	r3, [sp, #12]
 2340 0104 0499     		ldr	r1, [sp, #16]
 2341 0106 80B2     		uxth	r0, r0
 2342 0108 FFF7FEFF 		bl	Paint_DrawChar
 2343              	.LVL251:
 672:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx * 4 + Dx / 2 - Dx / 4, Ystart, ':'                    , Font, Color_
 2344              		.loc 1 672 0
 2345 010c 06EB8500 		add	r0, r6, r5, lsl #2
 2346 0110 1BFA80F0 		uxtah	r0, fp, r0
 2347 0114 80B2     		uxth	r0, r0
 2348 0116 0599     		ldr	r1, [sp, #20]
 2349 0118 401A     		subs	r0, r0, r1
 2350 011a CDF80480 		str	r8, [sp, #4]
 2351 011e 0097     		str	r7, [sp]
 2352 0120 039B     		ldr	r3, [sp, #12]
 2353 0122 3A22     		movs	r2, #58
 2354 0124 DDF810B0 		ldr	fp, [sp, #16]
 2355 0128 5946     		mov	r1, fp
 2356 012a 80B2     		uxth	r0, r0
 2357 012c FFF7FEFF 		bl	Paint_DrawChar
 2358              	.LVL252:
 673:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx * 5                  , Ystart, value[pTime->Sec / 10] , Font, Color_
 2359              		.loc 1 673 0
 2360 0130 9AF80630 		ldrb	r3, [r10, #6]	@ zero_extendqisi2
 2361 0134 A4FB0313 		umull	r1, r3, r4, r3
ARM GAS  /tmp/ccLicZTP.s 			page 56


 2362 0138 0AA9     		add	r1, sp, #40
 2363 013a 01EBD303 		add	r3, r1, r3, lsr #3
 2364 013e 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 2365 0142 05EB8505 		add	r5, r5, r5, lsl #2
 2366              	.LVL253:
 2367 0146 7019     		adds	r0, r6, r5
 2368 0148 CDF80480 		str	r8, [sp, #4]
 2369 014c 0097     		str	r7, [sp]
 2370 014e 039D     		ldr	r5, [sp, #12]
 2371 0150 2B46     		mov	r3, r5
 2372 0152 5946     		mov	r1, fp
 2373 0154 80B2     		uxth	r0, r0
 2374 0156 FFF7FEFF 		bl	Paint_DrawChar
 2375              	.LVL254:
 674:Display/GUI/GUI_Paint.c ****     Paint_DrawChar(Xstart + Dx * 6                  , Ystart, value[pTime->Sec % 10] , Font, Color_
 2376              		.loc 1 674 0
 2377 015a 9AF80630 		ldrb	r3, [r10, #6]	@ zero_extendqisi2
 2378 015e A4FB0324 		umull	r2, r4, r4, r3
 2379 0162 E408     		lsrs	r4, r4, #3
 2380 0164 04EB8404 		add	r4, r4, r4, lsl #2
 2381 0168 6200     		lsls	r2, r4, #1
 2382 016a 9B1A     		subs	r3, r3, r2
 2383 016c 0AAA     		add	r2, sp, #40
 2384 016e 52FA83F3 		uxtab	r3, r2, r3
 2385 0172 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 2386 0176 4FEA4900 		lsl	r0, r9, #1
 2387 017a 3044     		add	r0, r0, r6
 2388 017c CDF80480 		str	r8, [sp, #4]
 2389 0180 0097     		str	r7, [sp]
 2390 0182 2B46     		mov	r3, r5
 2391 0184 5946     		mov	r1, fp
 2392 0186 80B2     		uxth	r0, r0
 2393 0188 FFF7FEFF 		bl	Paint_DrawChar
 2394              	.LVL255:
 675:Display/GUI/GUI_Paint.c **** }
 2395              		.loc 1 675 0
 2396 018c 0BB0     		add	sp, sp, #44
 2397              	.LCFI33:
 2398              		.cfi_def_cfa_offset 36
 2399              		@ sp needed
 2400 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2401              	.LVL256:
 2402              	.L195:
 2403 0192 00BF     		.align	2
 2404              	.L194:
 2405 0194 00000000 		.word	.LANCHOR0
 2406 0198 CDCCCCCC 		.word	-858993459
 2407              		.cfi_endproc
 2408              	.LFE138:
 2410              		.section	.text.Paint_DrawBitMap,"ax",%progbits
 2411              		.align	1
 2412              		.global	Paint_DrawBitMap
 2413              		.syntax unified
 2414              		.thumb
 2415              		.thumb_func
 2416              		.fpu fpv4-sp-d16
 2418              	Paint_DrawBitMap:
ARM GAS  /tmp/ccLicZTP.s 			page 57


 2419              	.LFB139:
 676:Display/GUI/GUI_Paint.c **** 
 677:Display/GUI/GUI_Paint.c **** /******************************************************************************
 678:Display/GUI/GUI_Paint.c **** function:	Display monochrome bitmap
 679:Display/GUI/GUI_Paint.c **** parameter:
 680:Display/GUI/GUI_Paint.c ****     image_buffer ：A picture data converted to a bitmap
 681:Display/GUI/GUI_Paint.c **** info:
 682:Display/GUI/GUI_Paint.c ****     Use a computer to convert the image into a corresponding array,
 683:Display/GUI/GUI_Paint.c ****     and then embed the array directly into Imagedata.cpp as a .c file.
 684:Display/GUI/GUI_Paint.c **** ******************************************************************************/
 685:Display/GUI/GUI_Paint.c **** void Paint_DrawBitMap(const unsigned char* image_buffer)
 686:Display/GUI/GUI_Paint.c **** {
 2420              		.loc 1 686 0
 2421              		.cfi_startproc
 2422              		@ args = 0, pretend = 0, frame = 0
 2423              		@ frame_needed = 0, uses_anonymous_args = 0
 2424              		@ link register save eliminated.
 2425              	.LVL257:
 2426 0000 30B4     		push	{r4, r5}
 2427              	.LCFI34:
 2428              		.cfi_def_cfa_offset 8
 2429              		.cfi_offset 4, -8
 2430              		.cfi_offset 5, -4
 2431              	.LVL258:
 687:Display/GUI/GUI_Paint.c ****     UWORD x, y;
 688:Display/GUI/GUI_Paint.c ****     UDOUBLE Addr = 0;
 689:Display/GUI/GUI_Paint.c **** 
 690:Display/GUI/GUI_Paint.c ****     for (y = 0; y < Paint.HeightByte; y++) {
 2432              		.loc 1 690 0
 2433 0002 0025     		movs	r5, #0
 2434 0004 0DE0     		b	.L197
 2435              	.LVL259:
 2436              	.L198:
 691:Display/GUI/GUI_Paint.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 692:Display/GUI/GUI_Paint.c ****             Addr = x + y * Paint.WidthByte;
 2437              		.loc 1 692 0 discriminator 3
 2438 0006 02FB0532 		mla	r2, r2, r5, r3
 2439              	.LVL260:
 693:Display/GUI/GUI_Paint.c ****             Paint.Image[Addr] = (unsigned char)image_buffer[Addr];
 2440              		.loc 1 693 0 discriminator 3
 2441 000a 0A49     		ldr	r1, .L203
 2442 000c 0968     		ldr	r1, [r1]
 2443 000e 845C     		ldrb	r4, [r0, r2]	@ zero_extendqisi2
 2444 0010 8C54     		strb	r4, [r1, r2]
 691:Display/GUI/GUI_Paint.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 2445              		.loc 1 691 0 discriminator 3
 2446 0012 0133     		adds	r3, r3, #1
 2447              	.LVL261:
 2448 0014 9BB2     		uxth	r3, r3
 2449              	.LVL262:
 2450              	.L199:
 691:Display/GUI/GUI_Paint.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 2451              		.loc 1 691 0 is_stmt 0 discriminator 1
 2452 0016 074A     		ldr	r2, .L203
 2453 0018 528A     		ldrh	r2, [r2, #18]
 2454 001a 9A42     		cmp	r2, r3
 2455 001c F3D8     		bhi	.L198
ARM GAS  /tmp/ccLicZTP.s 			page 58


 690:Display/GUI/GUI_Paint.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 2456              		.loc 1 690 0 is_stmt 1 discriminator 2
 2457 001e 0135     		adds	r5, r5, #1
 2458              	.LVL263:
 2459 0020 ADB2     		uxth	r5, r5
 2460              	.LVL264:
 2461              	.L197:
 690:Display/GUI/GUI_Paint.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 2462              		.loc 1 690 0 is_stmt 0 discriminator 1
 2463 0022 044B     		ldr	r3, .L203
 2464 0024 9B8A     		ldrh	r3, [r3, #20]
 2465 0026 AB42     		cmp	r3, r5
 2466 0028 01D9     		bls	.L202
 691:Display/GUI/GUI_Paint.c ****         for (x = 0; x < Paint.WidthByte; x++) {//8 pixel =  1 byte
 2467              		.loc 1 691 0 is_stmt 1
 2468 002a 0023     		movs	r3, #0
 2469 002c F3E7     		b	.L199
 2470              	.L202:
 694:Display/GUI/GUI_Paint.c ****         }
 695:Display/GUI/GUI_Paint.c ****     }
 696:Display/GUI/GUI_Paint.c **** }
 2471              		.loc 1 696 0
 2472 002e 30BC     		pop	{r4, r5}
 2473              	.LCFI35:
 2474              		.cfi_restore 5
 2475              		.cfi_restore 4
 2476              		.cfi_def_cfa_offset 0
 2477              	.LVL265:
 2478 0030 7047     		bx	lr
 2479              	.L204:
 2480 0032 00BF     		.align	2
 2481              	.L203:
 2482 0034 00000000 		.word	Paint
 2483              		.cfi_endproc
 2484              	.LFE139:
 2486              		.comm	Paint,24,4
 2487              		.comm	click,4,4
 2488              		.comm	text_current_position,4,4
 2489              		.comm	menu_current_position,4,4
 2490              		.comm	action,4,4
 2491              		.comm	previous_operation_mode,4,4
 2492              		.comm	operation_mode,4,4
 2493              		.comm	BlackImage,4,4
 2494              		.comm	menu_text_usage,12,4
 2495              		.comm	previous_text_pointer,4,4
 2496              		.comm	text_pointer,4,4
 2497              		.section	.rodata
 2498              		.align	2
 2499              		.set	.LANCHOR0,. + 0
 2500              	.LC0:
 2501 0000 30       		.byte	48
 2502 0001 31       		.byte	49
 2503 0002 32       		.byte	50
 2504 0003 33       		.byte	51
 2505 0004 34       		.byte	52
 2506 0005 35       		.byte	53
 2507 0006 36       		.byte	54
ARM GAS  /tmp/ccLicZTP.s 			page 59


 2508 0007 37       		.byte	55
 2509 0008 38       		.byte	56
 2510 0009 39       		.byte	57
 2511              		.text
 2512              	.Letext0:
 2513              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2514              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2515              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2516              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2517              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2518              		.file 7 "Display/e-Paper/EPD_2in9.h"
 2519              		.file 8 "Display/e-Paper/ImageData.h"
 2520              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 2521              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
 2522              		.file 11 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2523              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 2524              		.file 13 "/usr/arm-none-eabi/include/stdlib.h"
 2525              		.file 14 "Display/Text_Mode/text.h"
 2526              		.file 15 "Display/Menu_Mode/menu.h"
 2527              		.file 16 "Display/Modes/modes.h"
 2528              		.file 17 "Inc/keyboard.h"
 2529              		.file 18 "Display/GUI/../Fonts/fonts.h"
 2530              		.file 19 "Display/GUI/GUI_Paint.h"
 2531              		.file 20 "/usr/arm-none-eabi/include/math.h"
 2532              		.file 21 "<built-in>"
ARM GAS  /tmp/ccLicZTP.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 GUI_Paint.c
     /tmp/ccLicZTP.s:18     .text.Paint_NewImage:0000000000000000 $t
     /tmp/ccLicZTP.s:25     .text.Paint_NewImage:0000000000000000 Paint_NewImage
     /tmp/ccLicZTP.s:102    .text.Paint_NewImage:0000000000000044 $d
                            *COM*:0000000000000018 Paint
     /tmp/ccLicZTP.s:107    .text.Paint_SelectImage:0000000000000000 $t
     /tmp/ccLicZTP.s:114    .text.Paint_SelectImage:0000000000000000 Paint_SelectImage
     /tmp/ccLicZTP.s:130    .text.Paint_SelectImage:0000000000000008 $d
     /tmp/ccLicZTP.s:135    .text.Paint_SetRotate:0000000000000000 $t
     /tmp/ccLicZTP.s:142    .text.Paint_SetRotate:0000000000000000 Paint_SetRotate
     /tmp/ccLicZTP.s:172    .text.Paint_SetRotate:0000000000000018 $d
     /tmp/ccLicZTP.s:177    .text.Paint_SetMirroring:0000000000000000 $t
     /tmp/ccLicZTP.s:184    .text.Paint_SetMirroring:0000000000000000 Paint_SetMirroring
     /tmp/ccLicZTP.s:204    .text.Paint_SetMirroring:000000000000000c $d
     /tmp/ccLicZTP.s:209    .text.Paint_SetPixel:0000000000000000 $t
     /tmp/ccLicZTP.s:216    .text.Paint_SetPixel:0000000000000000 Paint_SetPixel
     /tmp/ccLicZTP.s:280    .text.Paint_SetPixel:0000000000000046 $d
     /tmp/ccLicZTP.s:285    .text.Paint_SetPixel:000000000000004a $t
     /tmp/ccLicZTP.s:428    .text.Paint_SetPixel:00000000000000ec $d
     /tmp/ccLicZTP.s:433    .text.Paint_Clear:0000000000000000 $t
     /tmp/ccLicZTP.s:440    .text.Paint_Clear:0000000000000000 Paint_Clear
     /tmp/ccLicZTP.s:509    .text.Paint_Clear:0000000000000034 $d
     /tmp/ccLicZTP.s:514    .text.Paint_ClearWindows:0000000000000000 $t
     /tmp/ccLicZTP.s:521    .text.Paint_ClearWindows:0000000000000000 Paint_ClearWindows
     /tmp/ccLicZTP.s:583    .text.Paint_DrawPoint:0000000000000000 $t
     /tmp/ccLicZTP.s:590    .text.Paint_DrawPoint:0000000000000000 Paint_DrawPoint
     /tmp/ccLicZTP.s:740    .text.Paint_DrawPoint:00000000000000c4 $d
     /tmp/ccLicZTP.s:745    .text.Paint_DrawLine:0000000000000000 $t
     /tmp/ccLicZTP.s:752    .text.Paint_DrawLine:0000000000000000 Paint_DrawLine
     /tmp/ccLicZTP.s:937    .text.Paint_DrawLine:00000000000000f0 $d
     /tmp/ccLicZTP.s:943    .text.Paint_DrawRectangle:0000000000000000 $t
     /tmp/ccLicZTP.s:950    .text.Paint_DrawRectangle:0000000000000000 Paint_DrawRectangle
     /tmp/ccLicZTP.s:1077   .text.Paint_DrawRectangle:00000000000000c0 $d
     /tmp/ccLicZTP.s:1082   .text.Paint_DrawCircle:0000000000000000 $t
     /tmp/ccLicZTP.s:1089   .text.Paint_DrawCircle:0000000000000000 Paint_DrawCircle
     /tmp/ccLicZTP.s:1441   .text.Paint_DrawCircle:0000000000000260 $d
     /tmp/ccLicZTP.s:1446   .text.Paint_DrawChar:0000000000000000 $t
     /tmp/ccLicZTP.s:1453   .text.Paint_DrawChar:0000000000000000 Paint_DrawChar
     /tmp/ccLicZTP.s:1603   .text.Paint_DrawChar:00000000000000d0 $d
     /tmp/ccLicZTP.s:1608   .text.Paint_DrawString_EN:0000000000000000 $t
     /tmp/ccLicZTP.s:1615   .text.Paint_DrawString_EN:0000000000000000 Paint_DrawString_EN
     /tmp/ccLicZTP.s:1727   .text.Paint_DrawString_EN:0000000000000078 $d
     /tmp/ccLicZTP.s:1732   .text.Paint_DrawString_CN:0000000000000000 $t
     /tmp/ccLicZTP.s:1739   .text.Paint_DrawString_CN:0000000000000000 Paint_DrawString_CN
     /tmp/ccLicZTP.s:2073   .text.Paint_DrawNum:0000000000000000 $t
     /tmp/ccLicZTP.s:2080   .text.Paint_DrawNum:0000000000000000 Paint_DrawNum
     /tmp/ccLicZTP.s:2208   .text.Paint_DrawNum:000000000000009c $d
     /tmp/ccLicZTP.s:2214   .text.Paint_DrawTime:0000000000000000 $t
     /tmp/ccLicZTP.s:2221   .text.Paint_DrawTime:0000000000000000 Paint_DrawTime
     /tmp/ccLicZTP.s:2405   .text.Paint_DrawTime:0000000000000194 $d
     /tmp/ccLicZTP.s:2411   .text.Paint_DrawBitMap:0000000000000000 $t
     /tmp/ccLicZTP.s:2418   .text.Paint_DrawBitMap:0000000000000000 Paint_DrawBitMap
     /tmp/ccLicZTP.s:2482   .text.Paint_DrawBitMap:0000000000000034 $d
                            *COM*:0000000000000004 click
                            *COM*:0000000000000004 text_current_position
                            *COM*:0000000000000004 menu_current_position
ARM GAS  /tmp/ccLicZTP.s 			page 61


                            *COM*:0000000000000004 action
                            *COM*:0000000000000004 previous_operation_mode
                            *COM*:0000000000000004 operation_mode
                            *COM*:0000000000000004 BlackImage
                            *COM*:000000000000000c menu_text_usage
                            *COM*:0000000000000004 previous_text_pointer
                            *COM*:0000000000000004 text_pointer
     /tmp/ccLicZTP.s:2498   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
memset
