ARM GAS  /tmp/ccso2Dvy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB128:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccso2Dvy.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** SPI_HandleTypeDef hspi1;
  46:Src/main.c    **** 
  47:Src/main.c    **** TIM_HandleTypeDef htim1;
  48:Src/main.c    **** 
  49:Src/main.c    **** UART_HandleTypeDef huart2;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_USART2_UART_Init(void);
  59:Src/main.c    **** static void MX_SPI1_Init(void);
  60:Src/main.c    **** static void MX_TIM1_Init(void);
  61:Src/main.c    **** /* USER CODE BEGIN PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /**
  71:Src/main.c    ****   * @brief  The application entry point.
  72:Src/main.c    ****   * @retval int
  73:Src/main.c    ****   */
  74:Src/main.c    **** int main(void)
  75:Src/main.c    **** {
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Src/main.c    ****   HAL_Init();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/ccso2Dvy.s 			page 3


  90:Src/main.c    ****   SystemClock_Config();
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Initialize all configured peripherals */
  97:Src/main.c    ****   MX_GPIO_Init();
  98:Src/main.c    ****   MX_USART2_UART_Init();
  99:Src/main.c    ****   MX_SPI1_Init();
 100:Src/main.c    ****   MX_TIM1_Init();
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 102:Src/main.c    ****   Display_Init();
 103:Src/main.c    ****   Display();
 104:Src/main.c    ****   /* USER CODE END 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Infinite loop */
 107:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 108:Src/main.c    ****   while (1)
 109:Src/main.c    ****   {
 110:Src/main.c    ****     if(action)
 111:Src/main.c    ****       Display();
 112:Src/main.c    ****     /* USER CODE END WHILE */
 113:Src/main.c    **** 
 114:Src/main.c    ****     /* USER CODE BEGIN 3 */
 115:Src/main.c    ****   }
 116:Src/main.c    ****   #if 0
 117:Src/main.c    ****       printf("Goto Sleep mode...\r\n");
 118:Src/main.c    ****       EPD_Sleep();
 119:Src/main.c    ****       free(BlackImage);
 120:Src/main.c    ****       BlackImage = NULL;
 121:Src/main.c    ****   #endif
 122:Src/main.c    ****   /* USER CODE END 3 */
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** /**
 126:Src/main.c    ****   * @brief System Clock Configuration
 127:Src/main.c    ****   * @retval None
 128:Src/main.c    ****   */
 129:Src/main.c    **** void SystemClock_Config(void)
 130:Src/main.c    **** {
 131:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 132:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 133:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 134:Src/main.c    **** 
 135:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 136:Src/main.c    ****   */
 137:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccso2Dvy.s 			page 4


 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 148:Src/main.c    ****   {
 149:Src/main.c    ****     Error_Handler();
 150:Src/main.c    ****   }
 151:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 152:Src/main.c    ****   */
 153:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 155:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 159:Src/main.c    **** 
 160:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     Error_Handler();
 163:Src/main.c    ****   }
 164:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 165:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 166:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 169:Src/main.c    ****   }
 170:Src/main.c    ****   /** Configure the main internal regulator output voltage
 171:Src/main.c    ****   */
 172:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 173:Src/main.c    ****   {
 174:Src/main.c    ****     Error_Handler();
 175:Src/main.c    ****   }
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** /**
 179:Src/main.c    ****   * @brief SPI1 Initialization Function
 180:Src/main.c    ****   * @param None
 181:Src/main.c    ****   * @retval None
 182:Src/main.c    ****   */
 183:Src/main.c    **** static void MX_SPI1_Init(void)
 184:Src/main.c    **** {
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 193:Src/main.c    ****   /* SPI1 parameter configuration*/
 194:Src/main.c    ****   hspi1.Instance = SPI1;
 195:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 196:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 197:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 198:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 199:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 200:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 201:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 202:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 203:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  /tmp/ccso2Dvy.s 			page 5


 204:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 205:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 206:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 207:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 208:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 209:Src/main.c    ****   {
 210:Src/main.c    ****     Error_Handler();
 211:Src/main.c    ****   }
 212:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 213:Src/main.c    **** 
 214:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 215:Src/main.c    **** 
 216:Src/main.c    **** }
 217:Src/main.c    **** 
 218:Src/main.c    **** /**
 219:Src/main.c    ****   * @brief TIM1 Initialization Function
 220:Src/main.c    ****   * @param None
 221:Src/main.c    ****   * @retval None
 222:Src/main.c    ****   */
 223:Src/main.c    **** static void MX_TIM1_Init(void)
 224:Src/main.c    **** {
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 227:Src/main.c    **** 
 228:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 229:Src/main.c    **** 
 230:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 231:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 232:Src/main.c    **** 
 233:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 234:Src/main.c    **** 
 235:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 236:Src/main.c    ****   htim1.Instance = TIM1;
 237:Src/main.c    ****   htim1.Init.Prescaler = 32000;
 238:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 239:Src/main.c    ****   htim1.Init.Period = 10;
 240:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 241:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 242:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 243:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     Error_Handler();
 246:Src/main.c    ****   }
 247:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 248:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     Error_Handler();
 251:Src/main.c    ****   }
 252:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 253:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 254:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 255:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 256:Src/main.c    ****   {
 257:Src/main.c    ****     Error_Handler();
 258:Src/main.c    ****   }
 259:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 260:Src/main.c    **** 
ARM GAS  /tmp/ccso2Dvy.s 			page 6


 261:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 262:Src/main.c    **** 
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** /**
 266:Src/main.c    ****   * @brief USART2 Initialization Function
 267:Src/main.c    ****   * @param None
 268:Src/main.c    ****   * @retval None
 269:Src/main.c    ****   */
 270:Src/main.c    **** static void MX_USART2_UART_Init(void)
 271:Src/main.c    **** {
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 280:Src/main.c    ****   huart2.Instance = USART2;
 281:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 282:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 283:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 284:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 285:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 286:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 287:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 288:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 289:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 290:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 291:Src/main.c    ****   {
 292:Src/main.c    ****     Error_Handler();
 293:Src/main.c    ****   }
 294:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 297:Src/main.c    **** 
 298:Src/main.c    **** }
 299:Src/main.c    **** 
 300:Src/main.c    **** /**
 301:Src/main.c    ****   * @brief GPIO Initialization Function
 302:Src/main.c    ****   * @param None
 303:Src/main.c    ****   * @retval None
 304:Src/main.c    ****   */
 305:Src/main.c    **** static void MX_GPIO_Init(void)
 306:Src/main.c    **** {
  27              		.loc 1 306 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
ARM GAS  /tmp/ccso2Dvy.s 			page 7


  38 0002 8AB0     		sub	sp, sp, #40
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 307:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 307 0
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
  48              	.LBB2:
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* GPIO Ports Clock Enable */
 310:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 310 0
  50 0010 324B     		ldr	r3, .L3
  51 0012 DA6C     		ldr	r2, [r3, #76]
  52 0014 42F00402 		orr	r2, r2, #4
  53 0018 DA64     		str	r2, [r3, #76]
  54 001a DA6C     		ldr	r2, [r3, #76]
  55 001c 02F00402 		and	r2, r2, #4
  56 0020 0192     		str	r2, [sp, #4]
  57 0022 019A     		ldr	r2, [sp, #4]
  58              	.LBE2:
  59              	.LBB3:
 311:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  60              		.loc 1 311 0
  61 0024 DA6C     		ldr	r2, [r3, #76]
  62 0026 42F08002 		orr	r2, r2, #128
  63 002a DA64     		str	r2, [r3, #76]
  64 002c DA6C     		ldr	r2, [r3, #76]
  65 002e 02F08002 		and	r2, r2, #128
  66 0032 0292     		str	r2, [sp, #8]
  67 0034 029A     		ldr	r2, [sp, #8]
  68              	.LBE3:
  69              	.LBB4:
 312:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 312 0
  71 0036 DA6C     		ldr	r2, [r3, #76]
  72 0038 42F00102 		orr	r2, r2, #1
  73 003c DA64     		str	r2, [r3, #76]
  74 003e DA6C     		ldr	r2, [r3, #76]
  75 0040 02F00102 		and	r2, r2, #1
  76 0044 0392     		str	r2, [sp, #12]
  77 0046 039A     		ldr	r2, [sp, #12]
  78              	.LBE4:
  79              	.LBB5:
 313:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 313 0
  81 0048 DA6C     		ldr	r2, [r3, #76]
  82 004a 42F00202 		orr	r2, r2, #2
  83 004e DA64     		str	r2, [r3, #76]
  84 0050 DB6C     		ldr	r3, [r3, #76]
  85 0052 03F00203 		and	r3, r3, #2
  86 0056 0493     		str	r3, [sp, #16]
  87 0058 049B     		ldr	r3, [sp, #16]
ARM GAS  /tmp/ccso2Dvy.s 			page 8


  88              	.LBE5:
 314:Src/main.c    **** 
 315:Src/main.c    ****   /*Configure GPIO pin Output Level */
 316:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|RST_Pin|DC_Pin, GPIO_PIN_RESET);
  89              		.loc 1 316 0
  90 005a 2246     		mov	r2, r4
  91 005c 4FF4A461 		mov	r1, #1312
  92 0060 4FF09040 		mov	r0, #1207959552
  93 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
  94              	.LVL0:
 317:Src/main.c    **** 
 318:Src/main.c    ****   /*Configure GPIO pin Output Level */
 319:Src/main.c    ****   HAL_GPIO_WritePin(SPI_CS_GPIO_Port, SPI_CS_Pin, GPIO_PIN_RESET);
  95              		.loc 1 319 0
  96 0068 1D4D     		ldr	r5, .L3+4
  97 006a 2246     		mov	r2, r4
  98 006c 1021     		movs	r1, #16
  99 006e 2846     		mov	r0, r5
 100 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL1:
 320:Src/main.c    **** 
 321:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 322:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 102              		.loc 1 322 0
 103 0074 4FF40053 		mov	r3, #8192
 104 0078 0593     		str	r3, [sp, #20]
 323:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 105              		.loc 1 323 0
 106 007a 1A4B     		ldr	r3, .L3+8
 107 007c 0693     		str	r3, [sp, #24]
 324:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 324 0
 109 007e 0794     		str	r4, [sp, #28]
 325:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 110              		.loc 1 325 0
 111 0080 05A9     		add	r1, sp, #20
 112 0082 1948     		ldr	r0, .L3+12
 113 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL2:
 326:Src/main.c    **** 
 327:Src/main.c    ****   /*Configure GPIO pins : BT_UP_Pin BT_DOWN_Pin BT_MIDDLE_Pin */
 328:Src/main.c    ****   GPIO_InitStruct.Pin = BT_UP_Pin|BT_DOWN_Pin|BT_MIDDLE_Pin;
 115              		.loc 1 328 0
 116 0088 1323     		movs	r3, #19
 117 008a 0593     		str	r3, [sp, #20]
 329:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 118              		.loc 1 329 0
 119 008c 0694     		str	r4, [sp, #24]
 330:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 330 0
 121 008e 0794     		str	r4, [sp, #28]
 331:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 331 0
 123 0090 05A9     		add	r1, sp, #20
 124 0092 4FF09040 		mov	r0, #1207959552
 125 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL3:
ARM GAS  /tmp/ccso2Dvy.s 			page 9


 332:Src/main.c    **** 
 333:Src/main.c    ****   /*Configure GPIO pins : LD2_Pin RST_Pin DC_Pin */
 334:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin|RST_Pin|DC_Pin;
 127              		.loc 1 334 0
 128 009a 4FF4A463 		mov	r3, #1312
 129 009e 0593     		str	r3, [sp, #20]
 335:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 130              		.loc 1 335 0
 131 00a0 0126     		movs	r6, #1
 132 00a2 0696     		str	r6, [sp, #24]
 336:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 336 0
 134 00a4 0794     		str	r4, [sp, #28]
 337:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 135              		.loc 1 337 0
 136 00a6 0894     		str	r4, [sp, #32]
 338:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 338 0
 138 00a8 05A9     		add	r1, sp, #20
 139 00aa 4FF09040 		mov	r0, #1207959552
 140 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL4:
 339:Src/main.c    **** 
 340:Src/main.c    ****   /*Configure GPIO pin : BUSY_Pin */
 341:Src/main.c    ****   GPIO_InitStruct.Pin = BUSY_Pin;
 142              		.loc 1 341 0
 143 00b2 4FF48063 		mov	r3, #1024
 144 00b6 0593     		str	r3, [sp, #20]
 342:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 145              		.loc 1 342 0
 146 00b8 0694     		str	r4, [sp, #24]
 343:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 343 0
 148 00ba 0794     		str	r4, [sp, #28]
 344:Src/main.c    ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 149              		.loc 1 344 0
 150 00bc 05A9     		add	r1, sp, #20
 151 00be 2846     		mov	r0, r5
 152 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 153              	.LVL5:
 345:Src/main.c    **** 
 346:Src/main.c    ****   /*Configure GPIO pin : SPI_CS_Pin */
 347:Src/main.c    ****   GPIO_InitStruct.Pin = SPI_CS_Pin;
 154              		.loc 1 347 0
 155 00c4 1023     		movs	r3, #16
 156 00c6 0593     		str	r3, [sp, #20]
 348:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 157              		.loc 1 348 0
 158 00c8 0696     		str	r6, [sp, #24]
 349:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 159              		.loc 1 349 0
 160 00ca 0794     		str	r4, [sp, #28]
 350:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 161              		.loc 1 350 0
 162 00cc 0894     		str	r4, [sp, #32]
 351:Src/main.c    ****   HAL_GPIO_Init(SPI_CS_GPIO_Port, &GPIO_InitStruct);
 163              		.loc 1 351 0
ARM GAS  /tmp/ccso2Dvy.s 			page 10


 164 00ce 05A9     		add	r1, sp, #20
 165 00d0 2846     		mov	r0, r5
 166 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL6:
 352:Src/main.c    **** 
 353:Src/main.c    **** }
 168              		.loc 1 353 0
 169 00d6 0AB0     		add	sp, sp, #40
 170              	.LCFI2:
 171              		.cfi_def_cfa_offset 16
 172              		@ sp needed
 173 00d8 70BD     		pop	{r4, r5, r6, pc}
 174              	.L4:
 175 00da 00BF     		.align	2
 176              	.L3:
 177 00dc 00100240 		.word	1073876992
 178 00e0 00040048 		.word	1207960576
 179 00e4 00002110 		.word	270598144
 180 00e8 00080048 		.word	1207961600
 181              		.cfi_endproc
 182              	.LFE128:
 184              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	MX_USART2_UART_Init:
 192              	.LFB127:
 271:Src/main.c    **** 
 193              		.loc 1 271 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI3:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 280:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 202              		.loc 1 280 0
 203 0002 0948     		ldr	r0, .L7
 204 0004 094B     		ldr	r3, .L7+4
 205 0006 0360     		str	r3, [r0]
 281:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 206              		.loc 1 281 0
 207 0008 4FF4E133 		mov	r3, #115200
 208 000c 4360     		str	r3, [r0, #4]
 282:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 209              		.loc 1 282 0
 210 000e 0023     		movs	r3, #0
 211 0010 8360     		str	r3, [r0, #8]
 283:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 212              		.loc 1 283 0
 213 0012 C360     		str	r3, [r0, #12]
 284:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 214              		.loc 1 284 0
ARM GAS  /tmp/ccso2Dvy.s 			page 11


 215 0014 0361     		str	r3, [r0, #16]
 285:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 216              		.loc 1 285 0
 217 0016 0C22     		movs	r2, #12
 218 0018 4261     		str	r2, [r0, #20]
 286:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 219              		.loc 1 286 0
 220 001a 8361     		str	r3, [r0, #24]
 287:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 221              		.loc 1 287 0
 222 001c C361     		str	r3, [r0, #28]
 288:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 223              		.loc 1 288 0
 224 001e 0362     		str	r3, [r0, #32]
 289:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 225              		.loc 1 289 0
 226 0020 4362     		str	r3, [r0, #36]
 290:Src/main.c    ****   {
 227              		.loc 1 290 0
 228 0022 FFF7FEFF 		bl	HAL_UART_Init
 229              	.LVL7:
 298:Src/main.c    **** 
 230              		.loc 1 298 0
 231 0026 08BD     		pop	{r3, pc}
 232              	.L8:
 233              		.align	2
 234              	.L7:
 235 0028 00000000 		.word	huart2
 236 002c 00440040 		.word	1073759232
 237              		.cfi_endproc
 238              	.LFE127:
 240              		.section	.text.MX_SPI1_Init,"ax",%progbits
 241              		.align	1
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv4-sp-d16
 247              	MX_SPI1_Init:
 248              	.LFB125:
 184:Src/main.c    **** 
 249              		.loc 1 184 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253 0000 08B5     		push	{r3, lr}
 254              	.LCFI4:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 3, -8
 257              		.cfi_offset 14, -4
 194:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 258              		.loc 1 194 0
 259 0002 0E48     		ldr	r0, .L11
 260 0004 0E4B     		ldr	r3, .L11+4
 261 0006 0360     		str	r3, [r0]
 195:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 262              		.loc 1 195 0
 263 0008 4FF48273 		mov	r3, #260
ARM GAS  /tmp/ccso2Dvy.s 			page 12


 264 000c 4360     		str	r3, [r0, #4]
 196:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 265              		.loc 1 196 0
 266 000e 0023     		movs	r3, #0
 267 0010 8360     		str	r3, [r0, #8]
 197:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 268              		.loc 1 197 0
 269 0012 4FF4E062 		mov	r2, #1792
 270 0016 C260     		str	r2, [r0, #12]
 198:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 271              		.loc 1 198 0
 272 0018 0361     		str	r3, [r0, #16]
 199:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 273              		.loc 1 199 0
 274 001a 4361     		str	r3, [r0, #20]
 200:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 275              		.loc 1 200 0
 276 001c 4FF40072 		mov	r2, #512
 277 0020 8261     		str	r2, [r0, #24]
 201:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 278              		.loc 1 201 0
 279 0022 2822     		movs	r2, #40
 280 0024 C261     		str	r2, [r0, #28]
 202:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 281              		.loc 1 202 0
 282 0026 0362     		str	r3, [r0, #32]
 203:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 283              		.loc 1 203 0
 284 0028 4362     		str	r3, [r0, #36]
 204:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 285              		.loc 1 204 0
 286 002a 8362     		str	r3, [r0, #40]
 205:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 287              		.loc 1 205 0
 288 002c 0722     		movs	r2, #7
 289 002e C262     		str	r2, [r0, #44]
 206:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 290              		.loc 1 206 0
 291 0030 0363     		str	r3, [r0, #48]
 207:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 292              		.loc 1 207 0
 293 0032 0823     		movs	r3, #8
 294 0034 4363     		str	r3, [r0, #52]
 208:Src/main.c    ****   {
 295              		.loc 1 208 0
 296 0036 FFF7FEFF 		bl	HAL_SPI_Init
 297              	.LVL8:
 216:Src/main.c    **** 
 298              		.loc 1 216 0
 299 003a 08BD     		pop	{r3, pc}
 300              	.L12:
 301              		.align	2
 302              	.L11:
 303 003c 00000000 		.word	hspi1
 304 0040 00300140 		.word	1073819648
 305              		.cfi_endproc
 306              	.LFE125:
ARM GAS  /tmp/ccso2Dvy.s 			page 13


 308              		.section	.text.MX_TIM1_Init,"ax",%progbits
 309              		.align	1
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv4-sp-d16
 315              	MX_TIM1_Init:
 316              	.LFB126:
 224:Src/main.c    **** 
 317              		.loc 1 224 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 32
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 30B5     		push	{r4, r5, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 12
 324              		.cfi_offset 4, -12
 325              		.cfi_offset 5, -8
 326              		.cfi_offset 14, -4
 327 0002 89B0     		sub	sp, sp, #36
 328              	.LCFI6:
 329              		.cfi_def_cfa_offset 48
 230:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 330              		.loc 1 230 0
 331 0004 0024     		movs	r4, #0
 332 0006 0494     		str	r4, [sp, #16]
 333 0008 0594     		str	r4, [sp, #20]
 334 000a 0694     		str	r4, [sp, #24]
 335 000c 0794     		str	r4, [sp, #28]
 231:Src/main.c    **** 
 336              		.loc 1 231 0
 337 000e 0194     		str	r4, [sp, #4]
 338 0010 0294     		str	r4, [sp, #8]
 339 0012 0394     		str	r4, [sp, #12]
 236:Src/main.c    ****   htim1.Init.Prescaler = 32000;
 340              		.loc 1 236 0
 341 0014 0F4D     		ldr	r5, .L15
 342 0016 104B     		ldr	r3, .L15+4
 343 0018 2B60     		str	r3, [r5]
 237:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 344              		.loc 1 237 0
 345 001a 4FF4FA43 		mov	r3, #32000
 346 001e 6B60     		str	r3, [r5, #4]
 238:Src/main.c    ****   htim1.Init.Period = 10;
 347              		.loc 1 238 0
 348 0020 AC60     		str	r4, [r5, #8]
 239:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 349              		.loc 1 239 0
 350 0022 0A23     		movs	r3, #10
 351 0024 EB60     		str	r3, [r5, #12]
 240:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 352              		.loc 1 240 0
 353 0026 2C61     		str	r4, [r5, #16]
 241:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 354              		.loc 1 241 0
 355 0028 6C61     		str	r4, [r5, #20]
 242:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
ARM GAS  /tmp/ccso2Dvy.s 			page 14


 356              		.loc 1 242 0
 357 002a 8023     		movs	r3, #128
 358 002c AB61     		str	r3, [r5, #24]
 243:Src/main.c    ****   {
 359              		.loc 1 243 0
 360 002e 2846     		mov	r0, r5
 361 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 362              	.LVL9:
 247:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 363              		.loc 1 247 0
 364 0034 4FF48053 		mov	r3, #4096
 365 0038 0493     		str	r3, [sp, #16]
 248:Src/main.c    ****   {
 366              		.loc 1 248 0
 367 003a 04A9     		add	r1, sp, #16
 368 003c 2846     		mov	r0, r5
 369 003e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 370              	.LVL10:
 252:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 371              		.loc 1 252 0
 372 0042 0194     		str	r4, [sp, #4]
 253:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 373              		.loc 1 253 0
 374 0044 0294     		str	r4, [sp, #8]
 254:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 375              		.loc 1 254 0
 376 0046 0394     		str	r4, [sp, #12]
 255:Src/main.c    ****   {
 377              		.loc 1 255 0
 378 0048 01A9     		add	r1, sp, #4
 379 004a 2846     		mov	r0, r5
 380 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 381              	.LVL11:
 263:Src/main.c    **** 
 382              		.loc 1 263 0
 383 0050 09B0     		add	sp, sp, #36
 384              	.LCFI7:
 385              		.cfi_def_cfa_offset 12
 386              		@ sp needed
 387 0052 30BD     		pop	{r4, r5, pc}
 388              	.L16:
 389              		.align	2
 390              	.L15:
 391 0054 00000000 		.word	htim1
 392 0058 002C0140 		.word	1073818624
 393              		.cfi_endproc
 394              	.LFE126:
 396              		.section	.text.SystemClock_Config,"ax",%progbits
 397              		.align	1
 398              		.global	SystemClock_Config
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv4-sp-d16
 404              	SystemClock_Config:
 405              	.LFB124:
 130:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccso2Dvy.s 			page 15


 406              		.loc 1 130 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 224
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 30B5     		push	{r4, r5, lr}
 411              	.LCFI8:
 412              		.cfi_def_cfa_offset 12
 413              		.cfi_offset 4, -12
 414              		.cfi_offset 5, -8
 415              		.cfi_offset 14, -4
 416 0002 B9B0     		sub	sp, sp, #228
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 240
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 419              		.loc 1 131 0
 420 0004 2422     		movs	r2, #36
 421 0006 0021     		movs	r1, #0
 422 0008 28A8     		add	r0, sp, #160
 423 000a FFF7FEFF 		bl	memset
 424              	.LVL12:
 132:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 425              		.loc 1 132 0
 426 000e 0024     		movs	r4, #0
 427 0010 2294     		str	r4, [sp, #136]
 428 0012 2394     		str	r4, [sp, #140]
 429 0014 2494     		str	r4, [sp, #144]
 430 0016 2594     		str	r4, [sp, #148]
 431 0018 2694     		str	r4, [sp, #152]
 133:Src/main.c    **** 
 432              		.loc 1 133 0
 433 001a 8822     		movs	r2, #136
 434 001c 2146     		mov	r1, r4
 435 001e 6846     		mov	r0, sp
 436 0020 FFF7FEFF 		bl	memset
 437              	.LVL13:
 137:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 438              		.loc 1 137 0
 439 0024 0225     		movs	r5, #2
 440 0026 2795     		str	r5, [sp, #156]
 138:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 441              		.loc 1 138 0
 442 0028 4FF48073 		mov	r3, #256
 443 002c 2A93     		str	r3, [sp, #168]
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 444              		.loc 1 139 0
 445 002e 1023     		movs	r3, #16
 446 0030 2B93     		str	r3, [sp, #172]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 447              		.loc 1 140 0
 448 0032 3195     		str	r5, [sp, #196]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 449              		.loc 1 141 0
 450 0034 3295     		str	r5, [sp, #200]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 451              		.loc 1 142 0
 452 0036 0123     		movs	r3, #1
 453 0038 3393     		str	r3, [sp, #204]
ARM GAS  /tmp/ccso2Dvy.s 			page 16


 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 454              		.loc 1 143 0
 455 003a 0A23     		movs	r3, #10
 456 003c 3493     		str	r3, [sp, #208]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 457              		.loc 1 144 0
 458 003e 0723     		movs	r3, #7
 459 0040 3593     		str	r3, [sp, #212]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 460              		.loc 1 145 0
 461 0042 3695     		str	r5, [sp, #216]
 146:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 462              		.loc 1 146 0
 463 0044 3795     		str	r5, [sp, #220]
 147:Src/main.c    ****   {
 464              		.loc 1 147 0
 465 0046 27A8     		add	r0, sp, #156
 466 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 467              	.LVL14:
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 468              		.loc 1 153 0
 469 004c 0F23     		movs	r3, #15
 470 004e 2293     		str	r3, [sp, #136]
 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 471              		.loc 1 155 0
 472 0050 0323     		movs	r3, #3
 473 0052 2393     		str	r3, [sp, #140]
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 474              		.loc 1 156 0
 475 0054 2494     		str	r4, [sp, #144]
 157:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 476              		.loc 1 157 0
 477 0056 2594     		str	r4, [sp, #148]
 158:Src/main.c    **** 
 478              		.loc 1 158 0
 479 0058 2694     		str	r4, [sp, #152]
 160:Src/main.c    ****   {
 480              		.loc 1 160 0
 481 005a 0421     		movs	r1, #4
 482 005c 22A8     		add	r0, sp, #136
 483 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 484              	.LVL15:
 164:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 485              		.loc 1 164 0
 486 0062 0095     		str	r5, [sp]
 165:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 487              		.loc 1 165 0
 488 0064 0F94     		str	r4, [sp, #60]
 166:Src/main.c    ****   {
 489              		.loc 1 166 0
 490 0066 6846     		mov	r0, sp
 491 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 492              	.LVL16:
 172:Src/main.c    ****   {
 493              		.loc 1 172 0
 494 006c 4FF40070 		mov	r0, #512
 495 0070 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
ARM GAS  /tmp/ccso2Dvy.s 			page 17


 496              	.LVL17:
 176:Src/main.c    **** 
 497              		.loc 1 176 0
 498 0074 39B0     		add	sp, sp, #228
 499              	.LCFI10:
 500              		.cfi_def_cfa_offset 12
 501              		@ sp needed
 502 0076 30BD     		pop	{r4, r5, pc}
 503              		.cfi_endproc
 504              	.LFE124:
 506              		.section	.text.main,"ax",%progbits
 507              		.align	1
 508              		.global	main
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	main:
 515              	.LFB123:
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
 516              		.loc 1 75 0
 517              		.cfi_startproc
 518              		@ Volatile: function does not return.
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521 0000 08B5     		push	{r3, lr}
 522              	.LCFI11:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 3, -8
 525              		.cfi_offset 14, -4
  83:Src/main.c    **** 
 526              		.loc 1 83 0
 527 0002 FFF7FEFF 		bl	HAL_Init
 528              	.LVL18:
  90:Src/main.c    **** 
 529              		.loc 1 90 0
 530 0006 FFF7FEFF 		bl	SystemClock_Config
 531              	.LVL19:
  97:Src/main.c    ****   MX_USART2_UART_Init();
 532              		.loc 1 97 0
 533 000a FFF7FEFF 		bl	MX_GPIO_Init
 534              	.LVL20:
  98:Src/main.c    ****   MX_SPI1_Init();
 535              		.loc 1 98 0
 536 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 537              	.LVL21:
  99:Src/main.c    ****   MX_TIM1_Init();
 538              		.loc 1 99 0
 539 0012 FFF7FEFF 		bl	MX_SPI1_Init
 540              	.LVL22:
 100:Src/main.c    ****   /* USER CODE BEGIN 2 */
 541              		.loc 1 100 0
 542 0016 FFF7FEFF 		bl	MX_TIM1_Init
 543              	.LVL23:
 102:Src/main.c    ****   Display();
 544              		.loc 1 102 0
 545 001a FFF7FEFF 		bl	Display_Init
ARM GAS  /tmp/ccso2Dvy.s 			page 18


 546              	.LVL24:
 103:Src/main.c    ****   /* USER CODE END 2 */
 547              		.loc 1 103 0
 548 001e FFF7FEFF 		bl	Display
 549              	.LVL25:
 550              	.L20:
 110:Src/main.c    ****       Display();
 551              		.loc 1 110 0
 552 0022 034B     		ldr	r3, .L23
 553 0024 1B68     		ldr	r3, [r3]
 554 0026 002B     		cmp	r3, #0
 555 0028 FBD0     		beq	.L20
 111:Src/main.c    ****     /* USER CODE END WHILE */
 556              		.loc 1 111 0
 557 002a FFF7FEFF 		bl	Display
 558              	.LVL26:
 559 002e F8E7     		b	.L20
 560              	.L24:
 561              		.align	2
 562              	.L23:
 563 0030 00000000 		.word	action
 564              		.cfi_endproc
 565              	.LFE123:
 567              		.section	.text.Error_Handler,"ax",%progbits
 568              		.align	1
 569              		.global	Error_Handler
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv4-sp-d16
 575              	Error_Handler:
 576              	.LFB129:
 354:Src/main.c    **** 
 355:Src/main.c    **** /* USER CODE BEGIN 4 */
 356:Src/main.c    **** 
 357:Src/main.c    **** /* USER CODE END 4 */
 358:Src/main.c    **** 
 359:Src/main.c    **** /**
 360:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 361:Src/main.c    ****   * @retval None
 362:Src/main.c    ****   */
 363:Src/main.c    **** void Error_Handler(void)
 364:Src/main.c    **** {
 577              		.loc 1 364 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 365:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 366:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 367:Src/main.c    **** 
 368:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 369:Src/main.c    **** }
 582              		.loc 1 369 0
 583 0000 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE129:
ARM GAS  /tmp/ccso2Dvy.s 			page 19


 587              		.comm	huart2,120,4
 588              		.comm	htim1,64,4
 589              		.comm	hspi1,100,4
 590              		.comm	display_previous_mode,4,4
 591              		.comm	display_mode,4,4
 592              		.comm	BlackImage,4,4
 593              		.comm	click,4,4
 594              		.comm	current_position,4,4
 595              		.comm	menu_text_usage,12,4
 596              		.comm	mode,4,4
 597              		.comm	action,4,4
 598              		.text
 599              	.Letext0:
 600              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 601              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 602              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 603              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 604              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 605              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 606              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 607              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 608              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 609              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 610              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 611              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 612              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 613              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 614              		.file 16 "Display/e-Paper/EPD_2in9.h"
 615              		.file 17 "Display/GUI/../Fonts/fonts.h"
 616              		.file 18 "Display/GUI/GUI_Paint.h"
 617              		.file 19 "Display/e-Paper/ImageData.h"
 618              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 619              		.file 21 "/usr/arm-none-eabi/include/sys/_types.h"
 620              		.file 22 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 621              		.file 23 "/usr/arm-none-eabi/include/sys/reent.h"
 622              		.file 24 "/usr/arm-none-eabi/include/stdlib.h"
 623              		.file 25 "Inc/keyboard.h"
 624              		.file 26 "Display/Menu/menu.h"
 625              		.file 27 "Display/display.h"
 626              		.file 28 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 627              		.file 29 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 628              		.file 30 "<built-in>"
ARM GAS  /tmp/ccso2Dvy.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccso2Dvy.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccso2Dvy.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccso2Dvy.s:177    .text.MX_GPIO_Init:00000000000000dc $d
     /tmp/ccso2Dvy.s:185    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccso2Dvy.s:191    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccso2Dvy.s:235    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000078 huart2
     /tmp/ccso2Dvy.s:241    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccso2Dvy.s:247    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccso2Dvy.s:303    .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000064 hspi1
     /tmp/ccso2Dvy.s:309    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccso2Dvy.s:315    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccso2Dvy.s:391    .text.MX_TIM1_Init:0000000000000054 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccso2Dvy.s:397    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccso2Dvy.s:404    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccso2Dvy.s:507    .text.main:0000000000000000 $t
     /tmp/ccso2Dvy.s:514    .text.main:0000000000000000 main
     /tmp/ccso2Dvy.s:563    .text.main:0000000000000030 $d
                            *COM*:0000000000000004 action
     /tmp/ccso2Dvy.s:568    .text.Error_Handler:0000000000000000 $t
     /tmp/ccso2Dvy.s:575    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 display_previous_mode
                            *COM*:0000000000000004 display_mode
                            *COM*:0000000000000004 BlackImage
                            *COM*:0000000000000004 click
                            *COM*:0000000000000004 current_position
                            *COM*:000000000000000c menu_text_usage
                            *COM*:0000000000000004 mode

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
Display_Init
Display
