ARM GAS  /tmp/cc7GH9Er.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"text.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Text_Init,"ax",%progbits
  18              		.align	1
  19              		.global	Text_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Text_Init:
  26              	.LFB123:
  27              		.file 1 "Display/Text_Mode/text.c"
   1:Display/Text_Mode/text.c **** /**
   2:Display/Text_Mode/text.c ****   ******************************************************************************
   3:Display/Text_Mode/text.c ****   * @file           : text.c
   4:Display/Text_Mode/text.c ****   * @author         : Karol Gutowski
   5:Display/Text_Mode/text.c ****   * @brief          : This file contains funcitons for dispalying text.
   6:Display/Text_Mode/text.c ****   ******************************************************************************
   7:Display/Text_Mode/text.c ****   */
   8:Display/Text_Mode/text.c **** 
   9:Display/Text_Mode/text.c ****   #include "text.h"
  10:Display/Text_Mode/text.c **** 
  11:Display/Text_Mode/text.c **** 
  12:Display/Text_Mode/text.c ****   /*
  13:Display/Text_Mode/text.c ****    * Function: Display_Text
  14:Display/Text_Mode/text.c ****    * ----------------------------
  15:Display/Text_Mode/text.c ****    *   Displays long text with proper usage of new lines.
  16:Display/Text_Mode/text.c ****    *
  17:Display/Text_Mode/text.c ****    *   (in future) text_pointer: char pointer to text, that will be displayed
  18:Display/Text_Mode/text.c ****    *
  19:Display/Text_Mode/text.c ****    *   (in future) returns: pointer to the last character that was displayed
  20:Display/Text_Mode/text.c ****    */
  21:Display/Text_Mode/text.c ****   void Text_Init()
  22:Display/Text_Mode/text.c ****   {
  28              		.loc 1 22 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
ARM GAS  /tmp/cc7GH9Er.s 			page 2


  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 82B0     		sub	sp, sp, #8
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  23:Display/Text_Mode/text.c ****     text_pointer = 0;
  44              		.loc 1 23 0
  45 0006 0024     		movs	r4, #0
  46 0008 294B     		ldr	r3, .L15
  47 000a 1C60     		str	r4, [r3]
  24:Display/Text_Mode/text.c ****     previous_text_pointer = 0;
  48              		.loc 1 24 0
  49 000c 294B     		ldr	r3, .L15+4
  50 000e 1C60     		str	r4, [r3]
  51              	.LVL0:
  25:Display/Text_Mode/text.c ****     int start = 0;
  26:Display/Text_Mode/text.c ****     int finish = 0;
  27:Display/Text_Mode/text.c ****     int max_break = 0;
  28:Display/Text_Mode/text.c ****     int max_space = 0;
  29:Display/Text_Mode/text.c ****     int pointerx=1;
  30:Display/Text_Mode/text.c ****     int pointery=1;
  31:Display/Text_Mode/text.c **** 
  32:Display/Text_Mode/text.c ****     EPD_Init(lut_full_update);
  52              		.loc 1 32 0
  53 0010 2948     		ldr	r0, .L15+8
  54 0012 FFF7FEFF 		bl	EPD_Init
  55              	.LVL1:
  33:Display/Text_Mode/text.c ****     Paint_Clear(WHITE);
  56              		.loc 1 33 0
  57 0016 FF20     		movs	r0, #255
  58 0018 FFF7FEFF 		bl	Paint_Clear
  59              	.LVL2:
  30:Display/Text_Mode/text.c **** 
  60              		.loc 1 30 0
  61 001c 0126     		movs	r6, #1
  34:Display/Text_Mode/text.c **** 
  35:Display/Text_Mode/text.c ****     while(pointery<EPD_WIDTH-Font12.Height)
  62              		.loc 1 35 0
  63 001e 36E0     		b	.L2
  64              	.LVL3:
  65              	.L10:
  66              	.LBB2:
  36:Display/Text_Mode/text.c ****     {
  37:Display/Text_Mode/text.c ****       for(int j=start;j<start+EPD_HEIGHT/Font12.Width;j++)
  38:Display/Text_Mode/text.c ****       {
  39:Display/Text_Mode/text.c ****         if(text[j]==' ')
  40:Display/Text_Mode/text.c ****           max_space=j;
  67              		.loc 1 40 0
  68 0020 1546     		mov	r5, r2
  69              	.LVL4:
  70              	.L3:
  37:Display/Text_Mode/text.c ****       {
  71              		.loc 1 37 0 discriminator 2
  72 0022 0132     		adds	r2, r2, #1
  73              	.LVL5:
ARM GAS  /tmp/cc7GH9Er.s 			page 3


  74              	.L9:
  37:Display/Text_Mode/text.c ****       {
  75              		.loc 1 37 0 is_stmt 0 discriminator 1
  76 0024 254B     		ldr	r3, .L15+12
  77 0026 9988     		ldrh	r1, [r3, #4]
  78 0028 4FF49473 		mov	r3, #296
  79 002c 93FBF1F3 		sdiv	r3, r3, r1
  80 0030 2344     		add	r3, r3, r4
  81 0032 9342     		cmp	r3, r2
  82 0034 06DD     		ble	.L13
  39:Display/Text_Mode/text.c ****           max_space=j;
  83              		.loc 1 39 0 is_stmt 1
  84 0036 224B     		ldr	r3, .L15+16
  85 0038 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
  86 003a 202B     		cmp	r3, #32
  87 003c F0D0     		beq	.L10
  41:Display/Text_Mode/text.c ****         else
  42:Display/Text_Mode/text.c ****         {
  43:Display/Text_Mode/text.c ****           if(text[j]=='\n')
  88              		.loc 1 43 0
  89 003e 0A2B     		cmp	r3, #10
  90 0040 EFD1     		bne	.L3
  91 0042 00E0     		b	.L4
  92              	.L13:
  93 0044 0022     		movs	r2, #0
  94              	.LVL6:
  95              	.L4:
  96              	.LBE2:
  44:Display/Text_Mode/text.c ****           {
  45:Display/Text_Mode/text.c ****             max_break=j;
  46:Display/Text_Mode/text.c ****             break;
  47:Display/Text_Mode/text.c ****           }
  48:Display/Text_Mode/text.c ****         }
  49:Display/Text_Mode/text.c ****       }
  50:Display/Text_Mode/text.c ****       if(max_break > max_space)
  97              		.loc 1 50 0
  98 0046 AA42     		cmp	r2, r5
  99 0048 00DD     		ble	.L6
  51:Display/Text_Mode/text.c ****         finish = max_break;
 100              		.loc 1 51 0
 101 004a 1546     		mov	r5, r2
 102              	.LVL7:
 103              	.L6:
 104              	.LBB3:
  52:Display/Text_Mode/text.c ****       else
  53:Display/Text_Mode/text.c ****         finish = max_space;
  54:Display/Text_Mode/text.c ****       for(int j=start;j<finish;j++)
 105              		.loc 1 54 0
 106 004c 0127     		movs	r7, #1
 107 004e 14E0     		b	.L7
 108              	.LVL8:
 109              	.L8:
  55:Display/Text_Mode/text.c ****       {
  56:Display/Text_Mode/text.c ****         Paint_DrawChar(pointerx, pointery, text[j], &Font12, WHITE, BLACK);
 110              		.loc 1 56 0 discriminator 3
 111 0050 DFF86880 		ldr	r8, .L15+12
 112 0054 1A4B     		ldr	r3, .L15+16
ARM GAS  /tmp/cc7GH9Er.s 			page 4


 113 0056 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 114 0058 0023     		movs	r3, #0
 115 005a 0193     		str	r3, [sp, #4]
 116 005c FF23     		movs	r3, #255
 117 005e 0093     		str	r3, [sp]
 118 0060 4346     		mov	r3, r8
 119 0062 B1B2     		uxth	r1, r6
 120 0064 B8B2     		uxth	r0, r7
 121 0066 FFF7FEFF 		bl	Paint_DrawChar
 122              	.LVL9:
  57:Display/Text_Mode/text.c ****         pointerx+=Font12.Width;
 123              		.loc 1 57 0 discriminator 3
 124 006a B8F80430 		ldrh	r3, [r8, #4]
 125 006e 1F44     		add	r7, r7, r3
 126              	.LVL10:
  58:Display/Text_Mode/text.c ****         text_pointer++;
 127              		.loc 1 58 0 discriminator 3
 128 0070 0F4A     		ldr	r2, .L15
 129 0072 1368     		ldr	r3, [r2]
 130 0074 0133     		adds	r3, r3, #1
 131 0076 1360     		str	r3, [r2]
  54:Display/Text_Mode/text.c ****       {
 132              		.loc 1 54 0 discriminator 3
 133 0078 0134     		adds	r4, r4, #1
 134              	.LVL11:
 135              	.L7:
  54:Display/Text_Mode/text.c ****       {
 136              		.loc 1 54 0 is_stmt 0 discriminator 1
 137 007a A542     		cmp	r5, r4
 138 007c E8DC     		bgt	.L8
 139              	.LBE3:
  59:Display/Text_Mode/text.c ****       }
  60:Display/Text_Mode/text.c ****       text_pointer++;
 140              		.loc 1 60 0 is_stmt 1
 141 007e 0C4B     		ldr	r3, .L15
 142 0080 1C68     		ldr	r4, [r3]
 143              	.LVL12:
 144 0082 0134     		adds	r4, r4, #1
 145 0084 1C60     		str	r4, [r3]
 146              	.LVL13:
  61:Display/Text_Mode/text.c ****       start=text_pointer;
  62:Display/Text_Mode/text.c ****       pointery+=Font12.Height+1;
 147              		.loc 1 62 0
 148 0086 0D4B     		ldr	r3, .L15+12
 149 0088 DB88     		ldrh	r3, [r3, #6]
 150 008a 0133     		adds	r3, r3, #1
 151 008c 1E44     		add	r6, r6, r3
 152              	.LVL14:
 153              	.L2:
  35:Display/Text_Mode/text.c ****     {
 154              		.loc 1 35 0
 155 008e 0B4B     		ldr	r3, .L15+12
 156 0090 DB88     		ldrh	r3, [r3, #6]
 157 0092 C3F18003 		rsb	r3, r3, #128
 158 0096 B342     		cmp	r3, r6
 159 0098 02DD     		ble	.L14
 160              	.LBB4:
ARM GAS  /tmp/cc7GH9Er.s 			page 5


  37:Display/Text_Mode/text.c ****       {
 161              		.loc 1 37 0
 162 009a 2246     		mov	r2, r4
 163              	.LBE4:
 164 009c 0025     		movs	r5, #0
 165 009e C1E7     		b	.L9
 166              	.L14:
  63:Display/Text_Mode/text.c ****       pointerx=1;
  64:Display/Text_Mode/text.c ****       max_break = 0;
  65:Display/Text_Mode/text.c ****       max_space = 0;
  66:Display/Text_Mode/text.c ****     }
  67:Display/Text_Mode/text.c ****     EPD_Display(BlackImage);
 167              		.loc 1 67 0
 168 00a0 084B     		ldr	r3, .L15+20
 169 00a2 1868     		ldr	r0, [r3]
 170 00a4 FFF7FEFF 		bl	EPD_Display
 171              	.LVL15:
  68:Display/Text_Mode/text.c ****   }
 172              		.loc 1 68 0
 173 00a8 02B0     		add	sp, sp, #8
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 24
 176              		@ sp needed
 177 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 178              	.LVL16:
 179              	.L16:
 180 00ae 00BF     		.align	2
 181              	.L15:
 182 00b0 00000000 		.word	text_pointer
 183 00b4 00000000 		.word	previous_text_pointer
 184 00b8 00000000 		.word	lut_full_update
 185 00bc 00000000 		.word	Font12
 186 00c0 00000000 		.word	text
 187 00c4 00000000 		.word	BlackImage
 188              		.cfi_endproc
 189              	.LFE123:
 191              		.section	.text.Text_Processing,"ax",%progbits
 192              		.align	1
 193              		.global	Text_Processing
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	Text_Processing:
 200              	.LFB124:
  69:Display/Text_Mode/text.c **** 
  70:Display/Text_Mode/text.c ****   void Text_Processing()
  71:Display/Text_Mode/text.c ****   {
 201              		.loc 1 71 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 4, -24
 209              		.cfi_offset 5, -20
ARM GAS  /tmp/cc7GH9Er.s 			page 6


 210              		.cfi_offset 6, -16
 211              		.cfi_offset 7, -12
 212              		.cfi_offset 8, -8
 213              		.cfi_offset 14, -4
 214 0004 82B0     		sub	sp, sp, #8
 215              	.LCFI4:
 216              		.cfi_def_cfa_offset 32
  72:Display/Text_Mode/text.c ****     previous_text_pointer = text_pointer;
 217              		.loc 1 72 0
 218 0006 294B     		ldr	r3, .L31
 219 0008 1C68     		ldr	r4, [r3]
 220 000a 294B     		ldr	r3, .L31+4
 221 000c 1C60     		str	r4, [r3]
 222              	.LVL17:
  73:Display/Text_Mode/text.c ****     int start = text_pointer;
  74:Display/Text_Mode/text.c ****     int finish = 0;
  75:Display/Text_Mode/text.c ****     int max_break = 0;
  76:Display/Text_Mode/text.c ****     int max_space = 0;
  77:Display/Text_Mode/text.c ****     int pointerx=1;
  78:Display/Text_Mode/text.c ****     int pointery=1;
  79:Display/Text_Mode/text.c **** 
  80:Display/Text_Mode/text.c ****     EPD_Init(lut_full_update);
 223              		.loc 1 80 0
 224 000e 2948     		ldr	r0, .L31+8
 225 0010 FFF7FEFF 		bl	EPD_Init
 226              	.LVL18:
  81:Display/Text_Mode/text.c ****     Paint_Clear(WHITE);
 227              		.loc 1 81 0
 228 0014 FF20     		movs	r0, #255
 229 0016 FFF7FEFF 		bl	Paint_Clear
 230              	.LVL19:
  78:Display/Text_Mode/text.c **** 
 231              		.loc 1 78 0
 232 001a 0126     		movs	r6, #1
  82:Display/Text_Mode/text.c **** 
  83:Display/Text_Mode/text.c ****     while(pointery<EPD_WIDTH-Font12.Height)
 233              		.loc 1 83 0
 234 001c 36E0     		b	.L18
 235              	.LVL20:
 236              	.L26:
 237              	.LBB5:
  84:Display/Text_Mode/text.c ****     {
  85:Display/Text_Mode/text.c ****       for(int j=start;j<start+EPD_HEIGHT/Font12.Width;j++)
  86:Display/Text_Mode/text.c ****       {
  87:Display/Text_Mode/text.c ****         if(text[j]==' ')
  88:Display/Text_Mode/text.c ****           max_space=j;
 238              		.loc 1 88 0
 239 001e 1546     		mov	r5, r2
 240              	.LVL21:
 241              	.L19:
  85:Display/Text_Mode/text.c ****       {
 242              		.loc 1 85 0 discriminator 2
 243 0020 0132     		adds	r2, r2, #1
 244              	.LVL22:
 245              	.L25:
  85:Display/Text_Mode/text.c ****       {
 246              		.loc 1 85 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc7GH9Er.s 			page 7


 247 0022 254B     		ldr	r3, .L31+12
 248 0024 9988     		ldrh	r1, [r3, #4]
 249 0026 4FF49473 		mov	r3, #296
 250 002a 93FBF1F3 		sdiv	r3, r3, r1
 251 002e 2344     		add	r3, r3, r4
 252 0030 9342     		cmp	r3, r2
 253 0032 06DD     		ble	.L29
  87:Display/Text_Mode/text.c ****           max_space=j;
 254              		.loc 1 87 0 is_stmt 1
 255 0034 214B     		ldr	r3, .L31+16
 256 0036 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 257 0038 202B     		cmp	r3, #32
 258 003a F0D0     		beq	.L26
  89:Display/Text_Mode/text.c ****         else
  90:Display/Text_Mode/text.c ****         {
  91:Display/Text_Mode/text.c ****           if(text[j]=='\n')
 259              		.loc 1 91 0
 260 003c 0A2B     		cmp	r3, #10
 261 003e EFD1     		bne	.L19
 262 0040 00E0     		b	.L20
 263              	.L29:
 264 0042 0022     		movs	r2, #0
 265              	.LVL23:
 266              	.L20:
 267              	.LBE5:
  92:Display/Text_Mode/text.c ****           {
  93:Display/Text_Mode/text.c ****             max_break=j;
  94:Display/Text_Mode/text.c ****             break;
  95:Display/Text_Mode/text.c ****           }
  96:Display/Text_Mode/text.c ****         }
  97:Display/Text_Mode/text.c ****       }
  98:Display/Text_Mode/text.c ****       if(max_break > max_space)
 268              		.loc 1 98 0
 269 0044 AA42     		cmp	r2, r5
 270 0046 00DD     		ble	.L22
  99:Display/Text_Mode/text.c ****         finish = max_break;
 271              		.loc 1 99 0
 272 0048 1546     		mov	r5, r2
 273              	.LVL24:
 274              	.L22:
 275              	.LBB6:
 100:Display/Text_Mode/text.c ****       else
 101:Display/Text_Mode/text.c ****         finish = max_space;
 102:Display/Text_Mode/text.c ****       for(int j=start;j<finish;j++)
 276              		.loc 1 102 0
 277 004a 0127     		movs	r7, #1
 278 004c 14E0     		b	.L23
 279              	.LVL25:
 280              	.L24:
 103:Display/Text_Mode/text.c ****       {
 104:Display/Text_Mode/text.c ****         Paint_DrawChar(pointerx, pointery, text[j], &Font12, WHITE, BLACK);
 281              		.loc 1 104 0 discriminator 3
 282 004e DFF86880 		ldr	r8, .L31+12
 283 0052 1A4B     		ldr	r3, .L31+16
 284 0054 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 285 0056 0023     		movs	r3, #0
 286 0058 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc7GH9Er.s 			page 8


 287 005a FF23     		movs	r3, #255
 288 005c 0093     		str	r3, [sp]
 289 005e 4346     		mov	r3, r8
 290 0060 B1B2     		uxth	r1, r6
 291 0062 B8B2     		uxth	r0, r7
 292 0064 FFF7FEFF 		bl	Paint_DrawChar
 293              	.LVL26:
 105:Display/Text_Mode/text.c ****         pointerx+=Font12.Width;
 294              		.loc 1 105 0 discriminator 3
 295 0068 B8F80430 		ldrh	r3, [r8, #4]
 296 006c 1F44     		add	r7, r7, r3
 297              	.LVL27:
 106:Display/Text_Mode/text.c ****         text_pointer++;
 298              		.loc 1 106 0 discriminator 3
 299 006e 0F4A     		ldr	r2, .L31
 300 0070 1368     		ldr	r3, [r2]
 301 0072 0133     		adds	r3, r3, #1
 302 0074 1360     		str	r3, [r2]
 102:Display/Text_Mode/text.c ****       {
 303              		.loc 1 102 0 discriminator 3
 304 0076 0134     		adds	r4, r4, #1
 305              	.LVL28:
 306              	.L23:
 102:Display/Text_Mode/text.c ****       {
 307              		.loc 1 102 0 is_stmt 0 discriminator 1
 308 0078 A542     		cmp	r5, r4
 309 007a E8DC     		bgt	.L24
 310              	.LBE6:
 107:Display/Text_Mode/text.c ****       }
 108:Display/Text_Mode/text.c ****       text_pointer++;
 311              		.loc 1 108 0 is_stmt 1
 312 007c 0B4B     		ldr	r3, .L31
 313 007e 1C68     		ldr	r4, [r3]
 314              	.LVL29:
 315 0080 0134     		adds	r4, r4, #1
 316 0082 1C60     		str	r4, [r3]
 317              	.LVL30:
 109:Display/Text_Mode/text.c ****       start=text_pointer;
 110:Display/Text_Mode/text.c ****       pointery+=Font12.Height+1;
 318              		.loc 1 110 0
 319 0084 0C4B     		ldr	r3, .L31+12
 320 0086 DB88     		ldrh	r3, [r3, #6]
 321 0088 0133     		adds	r3, r3, #1
 322 008a 1E44     		add	r6, r6, r3
 323              	.LVL31:
 324              	.L18:
  83:Display/Text_Mode/text.c ****     {
 325              		.loc 1 83 0
 326 008c 0A4B     		ldr	r3, .L31+12
 327 008e DB88     		ldrh	r3, [r3, #6]
 328 0090 C3F18003 		rsb	r3, r3, #128
 329 0094 B342     		cmp	r3, r6
 330 0096 02DD     		ble	.L30
 331              	.LBB7:
  85:Display/Text_Mode/text.c ****       {
 332              		.loc 1 85 0
 333 0098 2246     		mov	r2, r4
ARM GAS  /tmp/cc7GH9Er.s 			page 9


 334              	.LBE7:
 335 009a 0025     		movs	r5, #0
 336 009c C1E7     		b	.L25
 337              	.L30:
 111:Display/Text_Mode/text.c ****       pointerx=1;
 112:Display/Text_Mode/text.c ****       max_break = 0;
 113:Display/Text_Mode/text.c ****       max_space = 0;
 114:Display/Text_Mode/text.c ****     }
 115:Display/Text_Mode/text.c ****     EPD_Display(BlackImage);
 338              		.loc 1 115 0
 339 009e 084B     		ldr	r3, .L31+20
 340 00a0 1868     		ldr	r0, [r3]
 341 00a2 FFF7FEFF 		bl	EPD_Display
 342              	.LVL32:
 116:Display/Text_Mode/text.c ****   }
 343              		.loc 1 116 0
 344 00a6 02B0     		add	sp, sp, #8
 345              	.LCFI5:
 346              		.cfi_def_cfa_offset 24
 347              		@ sp needed
 348 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 349              	.LVL33:
 350              	.L32:
 351              		.align	2
 352              	.L31:
 353 00ac 00000000 		.word	text_pointer
 354 00b0 00000000 		.word	previous_text_pointer
 355 00b4 00000000 		.word	lut_full_update
 356 00b8 00000000 		.word	Font12
 357 00bc 00000000 		.word	text
 358 00c0 00000000 		.word	BlackImage
 359              		.cfi_endproc
 360              	.LFE124:
 362              		.comm	previous_text_pointer,4,4
 363              		.comm	text_pointer,4,4
 364              		.comm	click,4,4
 365              		.comm	text_current_position,4,4
 366              		.comm	menu_current_position,4,4
 367              		.comm	action,4,4
 368              		.comm	previous_operation_mode,4,4
 369              		.comm	operation_mode,4,4
 370              		.comm	BlackImage,4,4
 371              		.comm	menu_text_usage,12,4
 372              		.text
 373              	.Letext0:
 374              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 375              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 376              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 377              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 378              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 379              		.file 7 "Display/GUI/../Fonts/fonts.h"
 380              		.file 8 "Display/GUI/GUI_Paint.h"
 381              		.file 9 "Display/e-Paper/ImageData.h"
 382              		.file 10 "/usr/arm-none-eabi/include/sys/lock.h"
 383              		.file 11 "/usr/arm-none-eabi/include/sys/_types.h"
 384              		.file 12 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 385              		.file 13 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/cc7GH9Er.s 			page 10


 386              		.file 14 "/usr/arm-none-eabi/include/stdlib.h"
 387              		.file 15 "Display/Menu_Mode/menu.h"
 388              		.file 16 "Display/Modes/modes.h"
 389              		.file 17 "Inc/keyboard.h"
 390              		.file 18 "Display/e-Paper/EPD_2in9.h"
 391              		.file 19 "Display/Text_Mode/text.h"
ARM GAS  /tmp/cc7GH9Er.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 text.c
     /tmp/cc7GH9Er.s:18     .text.Text_Init:0000000000000000 $t
     /tmp/cc7GH9Er.s:25     .text.Text_Init:0000000000000000 Text_Init
     /tmp/cc7GH9Er.s:182    .text.Text_Init:00000000000000b0 $d
                            *COM*:0000000000000004 text_pointer
                            *COM*:0000000000000004 previous_text_pointer
                            *COM*:0000000000000004 BlackImage
     /tmp/cc7GH9Er.s:192    .text.Text_Processing:0000000000000000 $t
     /tmp/cc7GH9Er.s:199    .text.Text_Processing:0000000000000000 Text_Processing
     /tmp/cc7GH9Er.s:353    .text.Text_Processing:00000000000000ac $d
                            *COM*:0000000000000004 click
                            *COM*:0000000000000004 text_current_position
                            *COM*:0000000000000004 menu_current_position
                            *COM*:0000000000000004 action
                            *COM*:0000000000000004 previous_operation_mode
                            *COM*:0000000000000004 operation_mode
                            *COM*:000000000000000c menu_text_usage

UNDEFINED SYMBOLS
EPD_Init
Paint_Clear
Paint_DrawChar
EPD_Display
lut_full_update
Font12
text
